{"version":3,"file":"index.es.js","sources":["../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../../../.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/hooks/use-slate-static.tsx","../src/plugin/react-editor.ts","../src/hooks/android-input-manager/android-input-manager.ts","../src/hooks/use-is-mounted.tsx","../src/hooks/use-isomorphic-layout-effect.ts","../src/hooks/use-mutation-observer.ts","../src/hooks/android-input-manager/use-android-input-manager.ts","../src/components/string.tsx","../src/components/leaf.tsx","../src/hooks/use-generic-selector.tsx","../src/hooks/use-decorations.ts","../src/components/text.tsx","../src/components/element.tsx","../src/chunking/chunk-tree-helper.ts","../src/chunking/children-helper.ts","../src/chunking/reconcile-children.ts","../src/chunking/get-chunk-tree-for-node.ts","../src/components/chunk-tree.tsx","../src/hooks/use-element.ts","../src/hooks/use-children.tsx","../src/hooks/use-read-only.ts","../src/hooks/use-slate-selector.tsx","../src/hooks/use-slate.tsx","../src/hooks/use-track-user-input.ts","../src/components/restore-dom/restore-dom-manager.ts","../src/components/restore-dom/restore-dom.tsx","../src/hooks/use-composing.ts","../src/components/editable.tsx","../src/hooks/use-focused.ts","../src/utils/environment.ts","../src/components/slate.tsx","../src/hooks/use-editor.tsx","../src/hooks/use-selected.ts","../src/hooks/use-slate-selection.tsx","../src/plugin/with-react.ts"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { Ancestor } from 'slate'\nimport { DOMEditor, type DOMEditorInterface } from 'slate-dom'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends DOMEditor {\n  /**\n   * Determines the chunk size used by the children chunking optimization. If\n   * null is returned (which is the default), the chunking optimization is\n   * disabled.\n   */\n  getChunkSize: (node: Ancestor) => number | null\n}\n\nexport interface ReactEditorInterface extends DOMEditorInterface {}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = DOMEditor\n","import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from 'slate-dom'\nimport { isDOMSelection, isTrackedMutation } from 'slate-dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n  IS_NODE_MAP_DIRTY,\n} from 'slate-dom'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (IS_NODE_MAP_DIRTY.get(editor)) {\n      return\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      let [start, end] = Range.edges(targetRange)\n      let [leaf, path] = Editor.leaf(editor, start.path)\n\n      if (Range.isExpanded(targetRange)) {\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            // when deleting a linebreak, targetRange will span across the break (ie start in the node before and end in the node after)\n            // if the node before is empty, this will look like a hanging range and get unhung later--which will take the break we want to remove out of the range\n            // so to avoid this we collapse the target range to default to single character deletion\n            if (direction === 'backward') {\n              targetRange = { anchor: end, focus: end }\n              start = end\n              ;[leaf, path] = next\n            } else {\n              targetRange = { anchor: start, focus: start }\n              end = start\n            }\n          }\n        }\n      }\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            const currentSelection = editor.selection\n            storeDiff(start.path, diff)\n\n            if (currentSelection) {\n              const newPoint = {\n                path: start.path,\n                offset: start.offset + text.length,\n              }\n\n              scheduleAction(\n                () => {\n                  Transforms.select(editor, {\n                    anchor: newPoint,\n                    focus: newPoint,\n                  })\n                },\n                { at: newPoint }\n              )\n            }\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from 'slate-dom'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n","import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from 'slate-dom'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n","import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from 'slate-dom'\nimport { MARK_PLACEHOLDER_SYMBOL } from 'slate-dom'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL])\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes: {\n    'data-slate-zero-width': string\n    'data-slate-length': number\n    'data-slate-mark-placeholder'?: boolean\n  } = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  // FIXME: Inserting the \\uFEFF on iOS breaks capitalization at the start of an\n  // empty editor (https://github.com/ianstormtaylor/slate/issues/5199).\n  //\n  // However, not inserting the \\uFEFF on iOS causes the editor to crash when\n  // inserting any text using an IME at the start of a block. This appears to\n  // be because accepting an IME suggestion when at the start of a block (no\n  // preceding \\uFEFF) removes one or more DOM elements that `toSlateRange`\n  // depends on. (https://github.com/ianstormtaylor/slate/issues/5703)\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { JSX } from 'react'\nimport { Element, LeafPosition, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL, EDITOR_TO_PLACEHOLDER_ELEMENT } from 'slate-dom'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT, IS_ANDROID } from 'slate-dom'\n\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nconst PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\nconst defaultRenderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n  leafPosition?: LeafPosition\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = defaultRenderLeaf,\n    leafPosition,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL])\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, PLACEHOLDER_DELAY)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {children}\n        {renderPlaceholder(placeholderProps)}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text,\n    leafPosition,\n  })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { useCallback, useReducer, useRef } from 'react'\n\n/**\n * Create a selector that updates when an `update` function is called, and\n * which only causes the component to render when the result of `selector`\n * differs from the previous result according to `equalityFn`.\n *\n * If `selector` is memoized using `useCallback`, then it will only be called\n * when it changes or when `update` is called. Otherwise, `selector` will be\n * called every time the component renders.\n *\n * @example\n * const [state, update] = useGenericSelector(selector, equalityFn)\n *\n * useIsomorphicLayoutEffect(() => {\n *   return addEventListener(update)\n * }, [addEventListener, update])\n *\n * return state\n */\n\nexport function useGenericSelector<T>(\n  selector: () => T,\n  equalityFn: (a: T | null, b: T) => boolean\n): [state: T, update: () => void] {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<() => T>(() => null as any)\n  const latestSelectedState = useRef<T | null>(null)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      const selectorResult = selector()\n\n      if (equalityFn(latestSelectedState.current, selectorResult)) {\n        selectedState = latestSelectedState.current as T\n      } else {\n        selectedState = selectorResult\n      }\n    } else {\n      selectedState = latestSelectedState.current as T\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n\n  latestSelector.current = selector\n  latestSelectedState.current = selectedState\n  latestSubscriptionCallbackError.current = undefined\n\n  const update = useCallback(() => {\n    try {\n      const newSelectedState = latestSelector.current()\n\n      if (equalityFn(latestSelectedState.current, newSelectedState)) {\n        return\n      }\n\n      latestSelectedState.current = newSelectedState\n    } catch (err) {\n      // we ignore all errors here, since when the component\n      // is re-rendered, the selectors are called again, and\n      // will throw again, if neither props nor store state\n      // changed\n      if (err instanceof Error) {\n        latestSubscriptionCallbackError.current = err\n      } else {\n        latestSubscriptionCallbackError.current = new Error(String(err))\n      }\n    }\n\n    forceRender()\n\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return [selectedState, update]\n}\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n","import { createContext, useCallback, useContext, useMemo, useRef } from 'react'\nimport { DecoratedRange, Descendant, NodeEntry, Text } from 'slate'\nimport { isTextDecorationsEqual, isElementDecorationsEqual } from 'slate-dom'\nimport { useSlateStatic } from './use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useGenericSelector } from './use-generic-selector'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\ntype Callback = () => void\n\n/**\n * A React context for sharing the `decorate` prop of the editable and\n * subscribing to changes on this prop.\n */\n\nexport const DecorateContext = createContext<{\n  decorate: (entry: NodeEntry) => DecoratedRange[]\n  addEventListener: (callback: Callback) => () => void\n}>({} as any)\n\nexport const useDecorations = (\n  node: Descendant,\n  parentDecorations: DecoratedRange[]\n): DecoratedRange[] => {\n  const editor = useSlateStatic()\n  const { decorate, addEventListener } = useContext(DecorateContext)\n\n  // Not memoized since we want nodes to be decorated on each render\n  const selector = () => {\n    const path = ReactEditor.findPath(editor, node)\n    return decorate([node, path])\n  }\n\n  const equalityFn = Text.isText(node)\n    ? isTextDecorationsEqual\n    : isElementDecorationsEqual\n\n  const [decorations, update] = useGenericSelector(selector, equalityFn)\n\n  useIsomorphicLayoutEffect(() => {\n    const unsubscribe = addEventListener(update)\n    update()\n    return unsubscribe\n  }, [addEventListener, update])\n\n  return useMemo(\n    () => [...decorations, ...parentDecorations],\n    [decorations, parentDecorations]\n  )\n}\n\nexport const useDecorateContext = (\n  decorateProp: (entry: NodeEntry) => DecoratedRange[]\n) => {\n  const eventListeners = useRef(new Set<Callback>())\n\n  const latestDecorate = useRef(decorateProp)\n\n  useIsomorphicLayoutEffect(() => {\n    latestDecorate.current = decorateProp\n    eventListeners.current.forEach(listener => listener())\n  }, [decorateProp])\n\n  const decorate = useCallback(\n    (entry: NodeEntry) => latestDecorate.current(entry),\n    []\n  )\n\n  const addEventListener = useCallback((callback: Callback) => {\n    eventListeners.current.add(callback)\n\n    return () => {\n      eventListeners.current.delete(callback)\n    }\n  }, [])\n\n  return useMemo(\n    () => ({ decorate, addEventListener }),\n    [decorate, addEventListener]\n  )\n}\n","import React, { useCallback, useRef } from 'react'\nimport { Element, Text as SlateText, DecoratedRange } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from 'slate-dom'\nimport {\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from './editable'\nimport Leaf from './leaf'\nimport { useDecorations } from '../hooks/use-decorations'\n\nconst defaultRenderText = (props: RenderTextProps) => <DefaultText {...props} />\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: DecoratedRange[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations: parentDecorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    renderText = defaultRenderText,\n    text,\n  } = props\n\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const decorations = useDecorations(text, parentDecorations)\n  const decoratedLeaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < decoratedLeaves.length; i++) {\n    const { leaf, position } = decoratedLeaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === decoratedLeaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        leafPosition={position}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n\n  const attributes: {\n    'data-slate-node': 'text'\n    ref: any\n  } = {\n    'data-slate-node': 'text',\n    ref: callbackRef,\n  }\n\n  return renderText({\n    text,\n    children,\n    attributes,\n  })\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderText === prev.renderText &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport const DefaultText = (props: RenderTextProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedText\n","import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { JSX } from 'react'\nimport { Editor, Element as SlateElement, Node, DecoratedRange } from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from 'slate-dom'\nimport {\n  RenderChunkProps,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from './editable'\n\nimport Text from './text'\nimport { useDecorations } from '../hooks/use-decorations'\n\nconst defaultRenderElement = (props: RenderElementProps) => (\n  <DefaultElement {...props} />\n)\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: DecoratedRange[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n}) => {\n  const {\n    decorations: parentDecorations,\n    element,\n    renderElement = defaultRenderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderLeaf,\n    renderText,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const decorations = useDecorations(element, parentDecorations)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderLeaf,\n    renderText,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderChunk === next.renderChunk &&\n    prev.renderText === next.renderText &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations)\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { Path } from 'slate'\nimport { Key } from 'slate-dom'\nimport {\n  Chunk,\n  ChunkTree,\n  ChunkLeaf,\n  ChunkDescendant,\n  ChunkAncestor,\n} from './types'\n\ntype SavedPointer =\n  | 'start'\n  | {\n      chunk: ChunkAncestor\n      node: ChunkDescendant\n    }\n\nexport interface ChunkTreeHelperOptions {\n  chunkSize: number\n  debug?: boolean\n}\n\n/**\n * Traverse and modify a chunk tree\n */\nexport class ChunkTreeHelper {\n  /**\n   * The root of the chunk tree\n   */\n  private root: ChunkTree\n\n  /**\n   * The ideal size of a chunk\n   */\n  private chunkSize: number\n\n  /**\n   * Whether debug mode is enabled\n   *\n   * If enabled, the pointer state will be checked for internal consistency\n   * after each mutating operation.\n   */\n  private debug: boolean\n\n  /**\n   * Whether the traversal has reached the end of the chunk tree\n   *\n   * When this is true, the pointerChunk and pointerIndex point to the last\n   * top-level node in the chunk tree, although pointerNode returns null.\n   */\n  private reachedEnd: boolean\n\n  /**\n   * The chunk containing the current node\n   */\n  private pointerChunk: ChunkAncestor\n\n  /**\n   * The index of the current node within pointerChunk\n   *\n   * Can be -1 to indicate that the pointer is before the start of the tree.\n   */\n  private pointerIndex: number\n\n  /**\n   * Similar to a Slate path; tracks the path of pointerChunk relative to the\n   * root.\n   *\n   * Used to move the pointer from the current chunk to the parent chunk more\n   * efficiently.\n   */\n  private pointerIndexStack: number[]\n\n  /**\n   * Indexing the current chunk's children has a slight time cost, which adds up\n   * when traversing very large trees, so the current node is cached.\n   *\n   * A value of undefined means that the current node is not cached. This\n   * property must be set to undefined whenever the pointer is moved, unless\n   * the pointer is guaranteed to point to the same node that it did previously.\n   */\n  private cachedPointerNode: ChunkDescendant | null | undefined\n\n  constructor(\n    chunkTree: ChunkTree,\n    { chunkSize, debug }: ChunkTreeHelperOptions\n  ) {\n    this.root = chunkTree\n    this.chunkSize = chunkSize\n    // istanbul ignore next\n    this.debug = debug ?? false\n    this.pointerChunk = chunkTree\n    this.pointerIndex = -1\n    this.pointerIndexStack = []\n    this.reachedEnd = false\n    this.validateState()\n  }\n\n  /**\n   * Move the pointer to the next leaf in the chunk tree\n   */\n  public readLeaf(): ChunkLeaf | null {\n    // istanbul ignore next\n    if (this.reachedEnd) return null\n\n    // Get the next sibling or aunt node\n    while (true) {\n      if (this.pointerIndex + 1 < this.pointerSiblings.length) {\n        this.pointerIndex++\n        this.cachedPointerNode = undefined\n        break\n      } else if (this.pointerChunk.type === 'root') {\n        this.reachedEnd = true\n        return null\n      } else {\n        this.exitChunk()\n      }\n    }\n\n    this.validateState()\n\n    // If the next sibling or aunt is a chunk, descend into it\n    this.enterChunkUntilLeaf(false)\n\n    return this.pointerNode as ChunkLeaf\n  }\n\n  /**\n   * Move the pointer to the previous leaf in the chunk tree\n   */\n  public returnToPreviousLeaf() {\n    // If we were at the end of the tree, descend into the end of the last\n    // chunk in the tree\n    if (this.reachedEnd) {\n      this.reachedEnd = false\n      this.enterChunkUntilLeaf(true)\n      return\n    }\n\n    // Get the previous sibling or aunt node\n    while (true) {\n      if (this.pointerIndex >= 1) {\n        this.pointerIndex--\n        this.cachedPointerNode = undefined\n        break\n      } else if (this.pointerChunk.type === 'root') {\n        this.pointerIndex = -1\n        return\n      } else {\n        this.exitChunk()\n      }\n    }\n\n    this.validateState()\n\n    // If the previous sibling or aunt is a chunk, descend into it\n    this.enterChunkUntilLeaf(true)\n  }\n\n  /**\n   * Insert leaves before the current leaf, leaving the pointer unchanged\n   */\n  public insertBefore(leaves: ChunkLeaf[]) {\n    this.returnToPreviousLeaf()\n    this.insertAfter(leaves)\n    this.readLeaf()\n  }\n\n  /**\n   * Insert leaves after the current leaf, leaving the pointer on the last\n   * inserted leaf\n   *\n   * The insertion algorithm first checks for any chunk we're currently at the\n   * end of that can receive additional leaves. Next, it tries to insert leaves\n   * at the starts of any subsequent chunks.\n   *\n   * Any remaining leaves are passed to rawInsertAfter to be chunked and\n   * inserted at the highest possible level.\n   */\n  public insertAfter(leaves: ChunkLeaf[]) {\n    // istanbul ignore next\n    if (leaves.length === 0) return\n\n    let beforeDepth = 0\n    let afterDepth = 0\n\n    // While at the end of a chunk, insert any leaves that will fit, and then\n    // exit the chunk\n    while (\n      this.pointerChunk.type === 'chunk' &&\n      this.pointerIndex === this.pointerSiblings.length - 1\n    ) {\n      const remainingCapacity = this.chunkSize - this.pointerSiblings.length\n      const toInsertCount = Math.min(remainingCapacity, leaves.length)\n\n      if (toInsertCount > 0) {\n        const leavesToInsert = leaves.splice(0, toInsertCount)\n        this.rawInsertAfter(leavesToInsert, beforeDepth)\n      }\n\n      this.exitChunk()\n      beforeDepth++\n    }\n\n    if (leaves.length === 0) return\n\n    // Save the pointer so that we can come back here after inserting leaves\n    // into the starts of subsequent blocks\n    const rawInsertPointer = this.savePointer()\n\n    // If leaves are inserted into the start of a subsequent block, then we\n    // eventually need to restore the pointer to the last such inserted leaf\n    let finalPointer: SavedPointer | null = null\n\n    // Move the pointer into the chunk containing the next leaf, if it exists\n    if (this.readLeaf()) {\n      // While at the start of a chunk, insert any leaves that will fit, and\n      // then exit the chunk\n      while (this.pointerChunk.type === 'chunk' && this.pointerIndex === 0) {\n        const remainingCapacity = this.chunkSize - this.pointerSiblings.length\n        const toInsertCount = Math.min(remainingCapacity, leaves.length)\n\n        if (toInsertCount > 0) {\n          const leavesToInsert = leaves.splice(-toInsertCount, toInsertCount)\n\n          // Insert the leaves at the start of the chunk\n          this.pointerIndex = -1\n          this.cachedPointerNode = undefined\n          this.rawInsertAfter(leavesToInsert, afterDepth)\n\n          // If this is the first batch of insertions at the start of a\n          // subsequent chunk, set the final pointer to the last inserted leaf\n          if (!finalPointer) {\n            finalPointer = this.savePointer()\n          }\n        }\n\n        this.exitChunk()\n        afterDepth++\n      }\n    }\n\n    this.restorePointer(rawInsertPointer)\n\n    // If there are leaves left to insert, insert them between the end of the\n    // previous chunk and the start of the first subsequent chunk, or wherever\n    // the pointer ended up after the first batch of insertions\n    const minDepth = Math.max(beforeDepth, afterDepth)\n    this.rawInsertAfter(leaves, minDepth)\n\n    if (finalPointer) {\n      this.restorePointer(finalPointer)\n    }\n\n    this.validateState()\n  }\n\n  /**\n   * Remove the current node and decrement the pointer, deleting any ancestor\n   * chunk that becomes empty as a result\n   */\n  public remove() {\n    this.pointerSiblings.splice(this.pointerIndex--, 1)\n    this.cachedPointerNode = undefined\n\n    if (\n      this.pointerSiblings.length === 0 &&\n      this.pointerChunk.type === 'chunk'\n    ) {\n      this.exitChunk()\n      this.remove()\n    } else {\n      this.invalidateChunk()\n    }\n\n    this.validateState()\n  }\n\n  /**\n   * Add the current chunk and all ancestor chunks to the list of modified\n   * chunks\n   */\n  public invalidateChunk() {\n    for (let c = this.pointerChunk; c.type === 'chunk'; c = c.parent) {\n      this.root.modifiedChunks.add(c)\n    }\n  }\n\n  /**\n   * Whether the pointer is at the start of the tree\n   */\n  private get atStart() {\n    return this.pointerChunk.type === 'root' && this.pointerIndex === -1\n  }\n\n  /**\n   * The siblings of the current node\n   */\n  private get pointerSiblings(): ChunkDescendant[] {\n    return this.pointerChunk.children\n  }\n\n  /**\n   * Get the current node (uncached)\n   *\n   * If the pointer is at the start or end of the document, returns null.\n   *\n   * Usually, the current node is a chunk leaf, although it can be a chunk\n   * while insertions are in progress.\n   */\n  private getPointerNode(): ChunkDescendant | null {\n    if (this.reachedEnd || this.pointerIndex === -1) {\n      return null\n    }\n\n    return this.pointerSiblings[this.pointerIndex]\n  }\n\n  /**\n   * Cached getter for the current node\n   */\n  private get pointerNode(): ChunkDescendant | null {\n    if (this.cachedPointerNode !== undefined) return this.cachedPointerNode\n    const pointerNode = this.getPointerNode()\n    this.cachedPointerNode = pointerNode\n    return pointerNode\n  }\n\n  /**\n   * Get the path of a chunk relative to the root, returning null if the chunk\n   * is not connected to the root\n   */\n  private getChunkPath(chunk: ChunkAncestor): number[] | null {\n    const path: number[] = []\n\n    for (let c = chunk; c.type === 'chunk'; c = c.parent) {\n      const index = c.parent.children.indexOf(c)\n\n      // istanbul ignore next\n      if (index === -1) {\n        return null\n      }\n\n      path.unshift(index)\n    }\n\n    return path\n  }\n\n  /**\n   * Save the current pointer to be restored later\n   */\n  private savePointer(): SavedPointer {\n    if (this.atStart) return 'start'\n\n    // istanbul ignore next\n    if (!this.pointerNode) {\n      throw new Error('Cannot save pointer when pointerNode is null')\n    }\n\n    return {\n      chunk: this.pointerChunk,\n      node: this.pointerNode,\n    }\n  }\n\n  /**\n   * Restore the pointer to a previous state\n   */\n  private restorePointer(savedPointer: SavedPointer) {\n    if (savedPointer === 'start') {\n      this.pointerChunk = this.root\n      this.pointerIndex = -1\n      this.pointerIndexStack = []\n      this.reachedEnd = false\n      this.cachedPointerNode = undefined\n      return\n    }\n\n    // Since nodes may have been inserted or removed prior to the saved\n    // pointer since it was saved, the index and index stack must be\n    // recomputed. This is slow, but this is fine since restoring a pointer is\n    // not a frequent operation.\n\n    const { chunk, node } = savedPointer\n    const index = chunk.children.indexOf(node)\n\n    // istanbul ignore next\n    if (index === -1) {\n      throw new Error(\n        'Cannot restore point because saved node is no longer in saved chunk'\n      )\n    }\n\n    const indexStack = this.getChunkPath(chunk)\n\n    // istanbul ignore next\n    if (!indexStack) {\n      throw new Error(\n        'Cannot restore point because saved chunk is no longer connected to root'\n      )\n    }\n\n    this.pointerChunk = chunk\n    this.pointerIndex = index\n    this.pointerIndexStack = indexStack\n    this.reachedEnd = false\n    this.cachedPointerNode = node\n    this.validateState()\n  }\n\n  /**\n   * Assuming the current node is a chunk, move the pointer into that chunk\n   *\n   * @param end If true, place the pointer on the last node of the chunk.\n   * Otherwise, place the pointer on the first node.\n   */\n  private enterChunk(end: boolean) {\n    // istanbul ignore next\n    if (this.pointerNode?.type !== 'chunk') {\n      throw new Error('Cannot enter non-chunk')\n    }\n\n    this.pointerIndexStack.push(this.pointerIndex)\n    this.pointerChunk = this.pointerNode\n    this.pointerIndex = end ? this.pointerSiblings.length - 1 : 0\n    this.cachedPointerNode = undefined\n    this.validateState()\n\n    // istanbul ignore next\n    if (this.pointerChunk.children.length === 0) {\n      throw new Error('Cannot enter empty chunk')\n    }\n  }\n\n  /**\n   * Assuming the current node is a chunk, move the pointer into that chunk\n   * repeatedly until the current node is a leaf\n   *\n   * @param end If true, place the pointer on the last node of the chunk.\n   * Otherwise, place the pointer on the first node.\n   */\n  private enterChunkUntilLeaf(end: boolean) {\n    while (this.pointerNode?.type === 'chunk') {\n      this.enterChunk(end)\n    }\n  }\n\n  /**\n   * Move the pointer to the parent chunk\n   */\n  private exitChunk() {\n    // istanbul ignore next\n    if (this.pointerChunk.type === 'root') {\n      throw new Error('Cannot exit root')\n    }\n\n    const previousPointerChunk = this.pointerChunk\n    this.pointerChunk = previousPointerChunk.parent\n    this.pointerIndex = this.pointerIndexStack.pop()!\n    this.cachedPointerNode = undefined\n    this.validateState()\n  }\n\n  /**\n   * Insert leaves immediately after the current node, leaving the pointer on\n   * the last inserted leaf\n   *\n   * Leaves are chunked according to the number of nodes already in the parent\n   * plus the number of nodes being inserted, or the minimum depth if larger\n   */\n  private rawInsertAfter(leaves: ChunkLeaf[], minDepth: number) {\n    if (leaves.length === 0) return\n\n    const groupIntoChunks = (\n      leaves: ChunkLeaf[],\n      parent: ChunkAncestor,\n      perChunk: number\n    ): ChunkDescendant[] => {\n      if (perChunk === 1) return leaves\n      const chunks: Chunk[] = []\n\n      for (let i = 0; i < this.chunkSize; i++) {\n        const chunkNodes = leaves.slice(i * perChunk, (i + 1) * perChunk)\n        if (chunkNodes.length === 0) break\n\n        const chunk: Chunk = {\n          type: 'chunk',\n          key: new Key(),\n          parent,\n          children: [],\n        }\n\n        chunk.children = groupIntoChunks(\n          chunkNodes,\n          chunk,\n          perChunk / this.chunkSize\n        )\n        chunks.push(chunk)\n      }\n\n      return chunks\n    }\n\n    // Determine the chunking depth based on the number of existing nodes in\n    // the chunk and the number of nodes being inserted\n    const newTotal = this.pointerSiblings.length + leaves.length\n    let depthForTotal = 0\n\n    for (let i = this.chunkSize; i < newTotal; i *= this.chunkSize) {\n      depthForTotal++\n    }\n\n    // A depth of 0 means no chunking\n    const depth = Math.max(depthForTotal, minDepth)\n    const perTopLevelChunk = Math.pow(this.chunkSize, depth)\n\n    const chunks = groupIntoChunks(leaves, this.pointerChunk, perTopLevelChunk)\n    this.pointerSiblings.splice(this.pointerIndex + 1, 0, ...chunks)\n    this.pointerIndex += chunks.length\n    this.cachedPointerNode = undefined\n    this.invalidateChunk()\n    this.validateState()\n  }\n\n  /**\n   * If debug mode is enabled, ensure that the state is internally consistent\n   */\n  // istanbul ignore next\n  private validateState() {\n    if (!this.debug) return\n\n    const validateDescendant = (node: ChunkDescendant) => {\n      if (node.type === 'chunk') {\n        const { parent, children } = node\n\n        if (!parent.children.includes(node)) {\n          throw new Error(\n            `Debug: Chunk ${node.key.id} has an incorrect parent property`\n          )\n        }\n\n        children.forEach(validateDescendant)\n      }\n    }\n\n    this.root.children.forEach(validateDescendant)\n\n    if (\n      this.cachedPointerNode !== undefined &&\n      this.cachedPointerNode !== this.getPointerNode()\n    ) {\n      throw new Error(\n        'Debug: The cached pointer is incorrect and has not been invalidated'\n      )\n    }\n\n    const actualIndexStack = this.getChunkPath(this.pointerChunk)\n\n    if (!actualIndexStack) {\n      throw new Error('Debug: The pointer chunk is not connected to the root')\n    }\n\n    if (!Path.equals(this.pointerIndexStack, actualIndexStack)) {\n      throw new Error(\n        `Debug: The cached index stack [${this.pointerIndexStack.join(\n          ', '\n        )}] does not match the path of the pointer chunk [${actualIndexStack.join(\n          ', '\n        )}]`\n      )\n    }\n  }\n}\n","import { Editor, Descendant } from 'slate'\nimport { Key } from 'slate-dom'\nimport { ChunkLeaf } from './types'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * Traverse an array of children, providing helpers useful for reconciling the\n * children array with a chunk tree\n */\nexport class ChildrenHelper {\n  private editor: Editor\n  private children: Descendant[]\n\n  /**\n   * Sparse array of Slate node keys, each index corresponding to an index in\n   * the children array\n   *\n   * Fetching the key for a Slate node is expensive, so we cache them here.\n   */\n  private cachedKeys: Array<Key | undefined>\n\n  /**\n   * The index of the next node to be read in the children array\n   */\n  public pointerIndex: number\n\n  constructor(editor: Editor, children: Descendant[]) {\n    this.editor = editor\n    this.children = children\n    this.cachedKeys = new Array(children.length)\n    this.pointerIndex = 0\n  }\n\n  /**\n   * Read a given number of nodes, advancing the pointer by that amount\n   */\n  public read(n: number): Descendant[] {\n    // PERF: If only one child was requested (the most common case), use array\n    // indexing instead of slice\n    if (n === 1) {\n      return [this.children[this.pointerIndex++]]\n    }\n\n    const slicedChildren = this.remaining(n)\n    this.pointerIndex += n\n\n    return slicedChildren\n  }\n\n  /**\n   * Get the remaining children without advancing the pointer\n   *\n   * @param [maxChildren] Limit the number of children returned.\n   */\n  public remaining(maxChildren?: number): Descendant[] {\n    if (maxChildren === undefined) {\n      return this.children.slice(this.pointerIndex)\n    }\n\n    return this.children.slice(\n      this.pointerIndex,\n      this.pointerIndex + maxChildren\n    )\n  }\n\n  /**\n   * Whether all children have been read\n   */\n  public get reachedEnd() {\n    return this.pointerIndex >= this.children.length\n  }\n\n  /**\n   * Determine whether a node with a given key appears in the unread part of the\n   * children array, and return its index relative to the current pointer if so\n   *\n   * Searching for the node object itself using indexOf is most efficient, but\n   * will fail to locate nodes that have been modified. In this case, nodes\n   * should be identified by their keys instead.\n   *\n   * Searching an array of keys using indexOf is very inefficient since fetching\n   * the keys for all children in advance is very slow. Insead, if the node\n   * search fails to return a value, fetch the keys of each remaining child one\n   * by one and compare it to the known key.\n   */\n  public lookAhead(node: Descendant, key: Key) {\n    const elementResult = this.children.indexOf(node, this.pointerIndex)\n    if (elementResult > -1) return elementResult - this.pointerIndex\n\n    for (let i = this.pointerIndex; i < this.children.length; i++) {\n      const candidateNode = this.children[i]\n      const candidateKey = this.findKey(candidateNode, i)\n      if (candidateKey === key) return i - this.pointerIndex\n    }\n\n    return -1\n  }\n\n  /**\n   * Convert an array of Slate nodes to an array of chunk leaves, each\n   * containing the node and its key\n   */\n  public toChunkLeaves(nodes: Descendant[], startIndex: number): ChunkLeaf[] {\n    return nodes.map((node, i) => ({\n      type: 'leaf',\n      node,\n      key: this.findKey(node, startIndex + i),\n      index: startIndex + i,\n    }))\n  }\n\n  /**\n   * Get the key for a Slate node, cached using the node's index\n   */\n  private findKey(node: Descendant, index: number): Key {\n    const cachedKey = this.cachedKeys[index]\n    if (cachedKey) return cachedKey\n    const key = ReactEditor.findKey(this.editor, node)\n    this.cachedKeys[index] = key\n    return key\n  }\n}\n","import { Editor, Descendant } from 'slate'\nimport { ChunkTree, ChunkLeaf } from './types'\nimport { ChunkTreeHelper, ChunkTreeHelperOptions } from './chunk-tree-helper'\nimport { ChildrenHelper } from './children-helper'\n\nexport interface ReconcileOptions extends ChunkTreeHelperOptions {\n  chunkTree: ChunkTree\n  children: Descendant[]\n  chunkSize: number\n  rerenderChildren?: number[]\n  onInsert?: (node: Descendant, index: number) => void\n  onUpdate?: (node: Descendant, index: number) => void\n  onIndexChange?: (node: Descendant, index: number) => void\n  debug?: boolean\n}\n\n/**\n * Update the chunk tree to match the children array, inserting, removing and\n * updating differing nodes\n */\nexport const reconcileChildren = (\n  editor: Editor,\n  {\n    chunkTree,\n    children,\n    chunkSize,\n    rerenderChildren = [],\n    onInsert,\n    onUpdate,\n    onIndexChange,\n    debug,\n  }: ReconcileOptions\n) => {\n  chunkTree.modifiedChunks.clear()\n\n  const chunkTreeHelper = new ChunkTreeHelper(chunkTree, { chunkSize, debug })\n  const childrenHelper = new ChildrenHelper(editor, children)\n\n  let treeLeaf: ChunkLeaf | null\n\n  // Read leaves from the tree one by one, each one representing a single Slate\n  // node. Each leaf from the tree is compared to the current node in the\n  // children array to determine whether nodes have been inserted, removed or\n  // updated.\n  while ((treeLeaf = chunkTreeHelper.readLeaf())) {\n    // Check where the tree node appears in the children array. In the most\n    // common case (where no insertions or removals have occurred), this will be\n    // 0. If the node has been removed, this will be -1. If new nodes have been\n    // inserted before the node, or if the node has been moved to a later\n    // position in the same children array, this will be a positive number.\n    const lookAhead = childrenHelper.lookAhead(treeLeaf.node, treeLeaf.key)\n\n    // If the node was moved, we want to remove it and insert it later, rather\n    // then re-inserting all intermediate nodes before it.\n    const wasMoved = lookAhead > 0 && chunkTree.movedNodeKeys.has(treeLeaf.key)\n\n    // If the tree leaf was moved or removed, remove it\n    if (lookAhead === -1 || wasMoved) {\n      chunkTreeHelper.remove()\n      continue\n    }\n\n    // Get the matching Slate node and any nodes that may have been inserted\n    // prior to it. Insert these into the chunk tree.\n    const insertedChildrenStartIndex = childrenHelper.pointerIndex\n    const insertedChildren = childrenHelper.read(lookAhead + 1)\n    const matchingChild = insertedChildren.pop()!\n\n    if (insertedChildren.length) {\n      const leavesToInsert = childrenHelper.toChunkLeaves(\n        insertedChildren,\n        insertedChildrenStartIndex\n      )\n\n      chunkTreeHelper.insertBefore(leavesToInsert)\n\n      insertedChildren.forEach((node, relativeIndex) => {\n        onInsert?.(node, insertedChildrenStartIndex + relativeIndex)\n      })\n    }\n\n    const matchingChildIndex = childrenHelper.pointerIndex - 1\n\n    // Make sure the chunk tree contains the most recent version of the Slate\n    // node\n    if (treeLeaf.node !== matchingChild) {\n      treeLeaf.node = matchingChild\n      chunkTreeHelper.invalidateChunk()\n      onUpdate?.(matchingChild, matchingChildIndex)\n    }\n\n    // Update the index if it has changed\n    if (treeLeaf.index !== matchingChildIndex) {\n      treeLeaf.index = matchingChildIndex\n      onIndexChange?.(matchingChild, matchingChildIndex)\n    }\n\n    // Manually invalidate chunks containing specific children that we want to\n    // re-render\n    if (rerenderChildren.includes(matchingChildIndex)) {\n      chunkTreeHelper.invalidateChunk()\n    }\n  }\n\n  // If there are still Slate nodes remaining from the children array that were\n  // not matched to nodes in the tree, insert them at the end of the tree\n  if (!childrenHelper.reachedEnd) {\n    const remainingChildren = childrenHelper.remaining()\n\n    const leavesToInsert = childrenHelper.toChunkLeaves(\n      remainingChildren,\n      childrenHelper.pointerIndex\n    )\n\n    // Move the pointer back to the final leaf in the tree, or the start of the\n    // tree if the tree is currently empty\n    chunkTreeHelper.returnToPreviousLeaf()\n\n    chunkTreeHelper.insertAfter(leavesToInsert)\n\n    remainingChildren.forEach((node, relativeIndex) => {\n      onInsert?.(node, childrenHelper.pointerIndex + relativeIndex)\n    })\n  }\n\n  chunkTree.movedNodeKeys.clear()\n}\n","import { Ancestor, Editor } from 'slate'\nimport { Key } from 'slate-dom'\nimport { ChunkTree } from './types'\nimport { ReconcileOptions, reconcileChildren } from './reconcile-children'\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport const KEY_TO_CHUNK_TREE = new WeakMap<Key, ChunkTree>()\n\n/**\n * Get or create the chunk tree for a Slate node\n *\n * If the reconcile option is provided, the chunk tree will be updated to\n * match the current children of the node. The children are chunked\n * automatically using the given chunk size.\n */\nexport const getChunkTreeForNode = (\n  editor: Editor,\n  node: Ancestor,\n  // istanbul ignore next\n  options: {\n    reconcile?: Omit<ReconcileOptions, 'chunkTree' | 'children'> | false\n  } = {}\n) => {\n  const key = ReactEditor.findKey(editor, node)\n  let chunkTree = KEY_TO_CHUNK_TREE.get(key)\n\n  if (!chunkTree) {\n    chunkTree = {\n      type: 'root',\n      movedNodeKeys: new Set(),\n      modifiedChunks: new Set(),\n      children: [],\n    }\n\n    KEY_TO_CHUNK_TREE.set(key, chunkTree)\n  }\n\n  if (options.reconcile) {\n    reconcileChildren(editor, {\n      chunkTree,\n      children: node.children,\n      ...options.reconcile,\n    })\n  }\n\n  return chunkTree\n}\n","import React, { Fragment } from 'react'\nimport { Element } from 'slate'\nimport { Key } from 'slate-dom'\nimport { RenderChunkProps } from './editable'\nimport {\n  Chunk as TChunk,\n  ChunkAncestor as TChunkAncestor,\n  ChunkTree as TChunkTree,\n} from '../chunking'\n\nconst defaultRenderChunk = ({ children }: RenderChunkProps) => children\n\nconst ChunkAncestor = <C extends TChunkAncestor>(props: {\n  root: TChunkTree\n  ancestor: C\n  renderElement: (node: Element, index: number, key: Key) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n}) => {\n  const {\n    root,\n    ancestor,\n    renderElement,\n    renderChunk = defaultRenderChunk,\n  } = props\n\n  return ancestor.children.map(chunkNode => {\n    if (chunkNode.type === 'chunk') {\n      const key = chunkNode.key.id\n\n      const renderedChunk = renderChunk({\n        highest: ancestor === root,\n        lowest: chunkNode.children.some(c => c.type === 'leaf'),\n        attributes: { 'data-slate-chunk': true },\n        children: (\n          <MemoizedChunk\n            root={root}\n            ancestor={chunkNode}\n            renderElement={renderElement}\n            renderChunk={renderChunk}\n          />\n        ),\n      })\n\n      return <Fragment key={key}>{renderedChunk}</Fragment>\n    }\n\n    // Only blocks containing no inlines are chunked\n    const element = chunkNode.node as Element\n\n    return renderElement(element, chunkNode.index, chunkNode.key)\n  })\n}\n\nconst ChunkTree = ChunkAncestor<TChunkTree>\n\nconst MemoizedChunk = React.memo(\n  ChunkAncestor<TChunk>,\n  (prev, next) =>\n    prev.root === next.root &&\n    prev.renderElement === next.renderElement &&\n    prev.renderChunk === next.renderChunk &&\n    !next.root.modifiedChunks.has(next.ancestor)\n)\n\nexport default ChunkTree\n","import { createContext, useContext } from 'react'\nimport { Element } from 'slate'\n\nexport const ElementContext = createContext<Element | null>(null)\n\n/**\n * Get the current element.\n */\n\nexport const useElement = (): Element => {\n  const context = useContext(ElementContext)\n\n  if (!context) {\n    throw new Error(\n      'The `useElement` hook must be used inside `renderElement`.'\n    )\n  }\n\n  return context\n}\n\n/**\n * Get the current element, or return null if not inside `renderElement`.\n */\nexport const useElementIf = () => useContext(ElementContext)\n","import React, { useCallback, useRef } from 'react'\nimport { Ancestor, Editor, Element, DecoratedRange, Text } from 'slate'\nimport { Key, isElementDecorationsEqual } from 'slate-dom'\nimport {\n  RenderChunkProps,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport {\n  IS_NODE_MAP_DIRTY,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n  splitDecorationsByChild,\n} from 'slate-dom'\nimport { useSlateStatic } from './use-slate-static'\nimport { getChunkTreeForNode } from '../chunking'\nimport ChunkTree from '../components/chunk-tree'\nimport { ElementContext } from './use-element'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: DecoratedRange[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderText,\n    renderLeaf,\n  } = props\n  const editor = useSlateStatic()\n  IS_NODE_MAP_DIRTY.set(editor as ReactEditor, false)\n\n  const isEditor = Editor.isEditor(node)\n  const isBlock = !isEditor && Element.isElement(node) && !editor.isInline(node)\n  const isLeafBlock = isBlock && Editor.hasInlines(editor, node)\n  const chunkSize = isLeafBlock ? null : editor.getChunkSize(node)\n  const chunking = !!chunkSize\n\n  const { decorationsByChild, childrenToRedecorate } = useDecorationsByChild(\n    editor,\n    node,\n    decorations\n  )\n\n  // Update the index and parent of each child.\n  // PERF: If chunking is enabled, this is done while traversing the chunk tree\n  // instead to eliminate unnecessary weak map operations.\n  if (!chunking) {\n    node.children.forEach((n, i) => {\n      NODE_TO_INDEX.set(n, i)\n      NODE_TO_PARENT.set(n, node)\n    })\n  }\n\n  const renderElementComponent = useCallback(\n    (n: Element, i: number, cachedKey?: Key) => {\n      const key = cachedKey ?? ReactEditor.findKey(editor, n)\n\n      return (\n        <ElementContext.Provider key={`provider-${key.id}`} value={n}>\n          <ElementComponent\n            decorations={decorationsByChild[i]}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderChunk={renderChunk}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            renderText={renderText}\n          />\n        </ElementContext.Provider>\n      )\n    },\n    [\n      editor,\n      decorationsByChild,\n      renderElement,\n      renderChunk,\n      renderPlaceholder,\n      renderLeaf,\n      renderText,\n    ]\n  )\n\n  const renderTextComponent = (n: Text, i: number) => {\n    const key = ReactEditor.findKey(editor, n)\n\n    return (\n      <TextComponent\n        decorations={decorationsByChild[i]}\n        key={key.id}\n        isLast={i === node.children.length - 1}\n        parent={node}\n        renderPlaceholder={renderPlaceholder}\n        renderLeaf={renderLeaf}\n        renderText={renderText}\n        text={n}\n      />\n    )\n  }\n\n  if (!chunking) {\n    return node.children.map((n, i) =>\n      Text.isText(n) ? renderTextComponent(n, i) : renderElementComponent(n, i)\n    )\n  }\n\n  const chunkTree = getChunkTreeForNode(editor, node, {\n    reconcile: {\n      chunkSize,\n      rerenderChildren: childrenToRedecorate,\n      onInsert: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n        NODE_TO_PARENT.set(n, node)\n      },\n      onUpdate: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n        NODE_TO_PARENT.set(n, node)\n      },\n      onIndexChange: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n      },\n    },\n  })\n\n  return (\n    <ChunkTree\n      root={chunkTree}\n      ancestor={chunkTree}\n      renderElement={renderElementComponent}\n      renderChunk={renderChunk}\n    />\n  )\n}\n\nconst useDecorationsByChild = (\n  editor: Editor,\n  node: Ancestor,\n  decorations: DecoratedRange[]\n) => {\n  const decorationsByChild = splitDecorationsByChild(editor, node, decorations)\n\n  // The value we return is a mutable array of `DecoratedRange[]` arrays. This\n  // lets us avoid passing an immutable array of decorations for each child into\n  // `ChunkTree` using props. Each `DecoratedRange[]` is only updated if the\n  // decorations at that index have changed, which speeds up the equality check\n  // for the `decorations` prop in the memoized `Element` and `Text` components.\n  const mutableDecorationsByChild = useRef(decorationsByChild).current\n\n  // Track the list of child indices whose decorations have changed, so that we\n  // can tell the chunk tree to re-render these children.\n  const childrenToRedecorate: number[] = []\n\n  // Resize the mutable array to match the latest result\n  mutableDecorationsByChild.length = decorationsByChild.length\n\n  for (let i = 0; i < decorationsByChild.length; i++) {\n    const decorations = decorationsByChild[i]\n\n    const previousDecorations: DecoratedRange[] | null =\n      mutableDecorationsByChild[i] ?? null\n\n    if (!isElementDecorationsEqual(previousDecorations, decorations)) {\n      mutableDecorationsByChild[i] = decorations\n      childrenToRedecorate.push(i)\n    }\n  }\n\n  return { decorationsByChild: mutableDecorationsByChild, childrenToRedecorate }\n}\n\nexport default useChildren\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useCallback, useContext, useMemo, useRef } from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\nimport { useSlateStatic } from './use-slate-static'\nimport { useGenericSelector } from './use-generic-selector'\n\ntype Callback = () => void\n\nexport interface SlateSelectorOptions {\n  /**\n   * If true, defer calling the selector function until after `Editable` has\n   * finished rendering. This ensures that `ReactEditor.findPath` won't return\n   * an outdated path if called inside the selector.\n   */\n  deferred?: boolean\n}\n\n/**\n * A React context for sharing the editor selector context in a way to control\n * re-renders.\n */\n\nexport const SlateSelectorContext = createContext<{\n  addEventListener: (\n    callback: Callback,\n    options?: SlateSelectorOptions\n  ) => () => void\n  flushDeferred: () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * Use redux style selectors to prevent re-rendering on every keystroke.\n *\n * Bear in mind re-rendering can only prevented if the returned value is a value\n * type or for reference types (e.g. objects and arrays) add a custom equality\n * function.\n *\n * If `selector` is memoized using `useCallback`, then it will only be called\n * when it or the editor state changes. Otherwise, `selector` will be called\n * every time the component renders.\n *\n * @example\n * const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection))\n */\n\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T | null, b: T) => boolean = refEquality,\n  { deferred }: SlateSelectorOptions = {}\n): T {\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { addEventListener } = context\n\n  const editor = useSlateStatic()\n  const genericSelector = useCallback(\n    () => selector(editor),\n    [editor, selector]\n  )\n  const [selectedState, update] = useGenericSelector(\n    genericSelector,\n    equalityFn\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    const unsubscribe = addEventListener(update, { deferred })\n    update()\n    return unsubscribe\n  }, [addEventListener, update, deferred])\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext() {\n  const eventListeners = useRef(new Set<Callback>())\n  const deferredEventListeners = useRef(new Set<Callback>())\n\n  const onChange = useCallback(() => {\n    eventListeners.current.forEach(listener => listener())\n  }, [])\n\n  const flushDeferred = useCallback(() => {\n    deferredEventListeners.current.forEach(listener => listener())\n    deferredEventListeners.current.clear()\n  }, [])\n\n  const addEventListener = useCallback(\n    (\n      callbackProp: Callback,\n      { deferred = false }: SlateSelectorOptions = {}\n    ) => {\n      const callback = deferred\n        ? () => deferredEventListeners.current.add(callbackProp)\n        : callbackProp\n\n      eventListeners.current.add(callback)\n\n      return () => {\n        eventListeners.current.delete(callback)\n      }\n    },\n    []\n  )\n\n  const selectorContext = useMemo(\n    () => ({\n      addEventListener,\n      flushDeferred,\n    }),\n    [addEventListener, flushDeferred]\n  )\n\n  return { selectorContext, onChange }\n}\n\nexport function useFlushDeferredSelectorsOnRender() {\n  const { flushDeferred } = useContext(SlateSelectorContext)\n  useIsomorphicLayoutEffect(flushDeferred)\n}\n","import { MutableRefObject, useContext, useMemo, useReducer } from 'react'\nimport { Editor } from 'slate'\nimport { SlateSelectorContext } from './use-slate-selector'\nimport { useSlateStatic } from './use-slate-static'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\n/**\n * Get the current editor object and re-render whenever it changes.\n */\n\nexport const useSlate = (): Editor => {\n  const { addEventListener } = useContext(SlateSelectorContext)\n  const [, forceRender] = useReducer(s => s + 1, 0)\n\n  if (!addEventListener) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  useIsomorphicLayoutEffect(\n    () => addEventListener(forceRender),\n    [addEventListener]\n  )\n\n  return useSlateStatic()\n}\n\nconst EDITOR_TO_V = new WeakMap<Editor, MutableRefObject<number>>()\n\nconst getEditorVersionRef = (editor: Editor): MutableRefObject<number> => {\n  let v = EDITOR_TO_V.get(editor)\n\n  if (v) {\n    return v\n  }\n\n  v = { current: 0 }\n  EDITOR_TO_V.set(editor, v)\n\n  // Register the `onChange` handler exactly once per editor\n  const { onChange } = editor\n\n  editor.onChange = options => {\n    v!.current++\n    onChange(options)\n  }\n\n  return v\n}\n\n/**\n * Get the current editor object and its version, which increments on every\n * change.\n *\n * @deprecated The `v` counter is no longer used except for this hook, and may\n * be removed in a future version.\n */\n\nexport const useSlateWithV = (): { editor: Editor; v: number } => {\n  const editor = useSlate()\n  const vRef = useMemo(() => getEditorVersionRef(editor), [editor])\n  return { editor, v: vRef.current }\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from 'slate-dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n","import React, {\n  Component,\n  ComponentType,\n  ContextType,\n  ReactNode,\n  RefObject,\n} from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  children?: ReactNode\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `composing` state of the editor.\n */\n\nexport const ComposingContext = createContext(false)\n\n/**\n * Get the current `composing` state of the editor.\n */\n\nexport const useComposing = (): boolean => {\n  return useContext(ComposingContext)\n}\n","import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  forwardRef,\n  ForwardedRef,\n} from 'react'\nimport { JSX } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n  DecoratedRange,\n  LeafPosition,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext, useDecorateContext } from '../hooks/use-decorations'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from 'slate-dom'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getActiveElement,\n  getDefaultView,\n  getSelection,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from 'slate-dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from 'slate-dom'\nimport { Hotkeys } from 'slate-dom'\nimport {\n  IS_NODE_MAP_DIRTY,\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from 'slate-dom'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\nimport { ComposingContext } from '../hooks/use-composing'\nimport { useFlushDeferredSelectorsOnRender } from '../hooks/use-slate-selector'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderChunkProps` are passed to the `renderChunk` handler\n */\nexport interface RenderChunkProps {\n  highest: boolean\n  lowest: boolean\n  children: any\n  attributes: {\n    'data-slate-chunk': true\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  /**\n   * The leaf node with any applied decorations.\n   * If no decorations are applied, it will be identical to the `text` property.\n   */\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n  /**\n   * The position of the leaf within the Text node, only present when the text node is split by decorations.\n   */\n  leafPosition?: LeafPosition\n}\n\n/**\n * `RenderTextProps` are passed to the `renderText` handler.\n */\nexport interface RenderTextProps {\n  text: Text\n  children: any\n  attributes: {\n    'data-slate-node': 'text'\n    ref: any\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => DecoratedRange[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = forwardRef(\n  (props: EditableProps, forwardedRef: ForwardedRef<HTMLDivElement>) => {\n    const defaultRenderPlaceholder = useCallback(\n      (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n      []\n    )\n    const {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderChunk,\n      renderLeaf,\n      renderText,\n      renderPlaceholder = defaultRenderPlaceholder,\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style: userStyle = {},\n      as: Component = 'div',\n      disableDefaultStyles = false,\n      ...attributes\n    } = props\n    const editor = useSlate()\n    // Rerender editor when composition status changed\n    const [isComposing, setIsComposing] = useState(false)\n    const ref = useRef<HTMLDivElement | null>(null)\n    const deferredOperations = useRef<DeferredOperation[]>([])\n    const [placeholderHeight, setPlaceholderHeight] = useState<\n      number | undefined\n    >()\n    const processing = useRef(false)\n\n    const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n    const [, forceRender] = useReducer(s => s + 1, 0)\n    EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n    // Update internal state on each render.\n    IS_READ_ONLY.set(editor, readOnly)\n\n    // Keep track of some state for the event handler logic.\n    const state = useMemo(\n      () => ({\n        isDraggingInternally: false,\n        isUpdatingSelection: false,\n        latestElement: null as DOMElement | null,\n        hasMarkPlaceholder: false,\n      }),\n      []\n    )\n\n    // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n    // needs to be manually focused.\n    //\n    // If this stops working in Firefox, make sure nothing is causing this\n    // component to re-render during the initial mount. If the DOM selection is\n    // set by `useIsomorphicLayoutEffect` before `onDOMSelectionChange` updates\n    // `editor.selection`, the DOM selection can be removed accidentally.\n    useEffect(() => {\n      if (ref.current && autoFocus) {\n        ref.current.focus()\n      }\n    }, [autoFocus])\n\n    /**\n     * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n     *\n     * It is defined as a reference to simplify hook dependencies and clarify that\n     * it needs to be initialized.\n     */\n    const androidInputManagerRef = useRef<\n      AndroidInputManager | null | undefined\n    >()\n\n    // Listen on the native `selectionchange` event to be able to update any time\n    // the selection changes. This is required because React's `onSelect` is leaky\n    // and non-standard so it doesn't fire until after a selection has been\n    // released. This causes issues in situations where another change happens\n    // while a selection is being dragged.\n    const onDOMSelectionChange = useMemo(\n      () =>\n        throttle(() => {\n          if (IS_NODE_MAP_DIRTY.get(editor)) {\n            onDOMSelectionChange()\n            return\n          }\n\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const root = el.getRootNode()\n\n          if (!processing.current && IS_WEBKIT && root instanceof ShadowRoot) {\n            processing.current = true\n\n            const active = getActiveElement()\n\n            if (active) {\n              document.execCommand('indent')\n            } else {\n              Transforms.deselect(editor)\n            }\n\n            processing.current = false\n            return\n          }\n\n          const androidInputManager = androidInputManagerRef.current\n          if (\n            (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n            (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n            !state.isDraggingInternally\n          ) {\n            const root = ReactEditor.findDocumentOrShadowRoot(editor)\n            const { activeElement } = root\n            const el = ReactEditor.toDOMNode(editor, editor)\n            const domSelection = getSelection(root)\n\n            if (activeElement === el) {\n              state.latestElement = activeElement\n              IS_FOCUSED.set(editor, true)\n            } else {\n              IS_FOCUSED.delete(editor)\n            }\n\n            if (!domSelection) {\n              return Transforms.deselect(editor)\n            }\n\n            const { anchorNode, focusNode } = domSelection\n\n            const anchorNodeSelectable =\n              ReactEditor.hasEditableTarget(editor, anchorNode) ||\n              ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n            const focusNodeInEditor = ReactEditor.hasTarget(editor, focusNode)\n\n            if (anchorNodeSelectable && focusNodeInEditor) {\n              const range = ReactEditor.toSlateRange(editor, domSelection, {\n                exactMatch: false,\n                suppressThrow: true,\n              })\n\n              if (range) {\n                if (\n                  !ReactEditor.isComposing(editor) &&\n                  !androidInputManager?.hasPendingChanges() &&\n                  !androidInputManager?.isFlushing()\n                ) {\n                  Transforms.select(editor, range)\n                } else {\n                  androidInputManager?.handleUserSelect(range)\n                }\n              }\n            }\n\n            // Deselect the editor if the dom selection is not selectable in readonly mode\n            if (readOnly && (!anchorNodeSelectable || !focusNodeInEditor)) {\n              Transforms.deselect(editor)\n            }\n          }\n        }, 100),\n      [editor, readOnly, state]\n    )\n\n    const scheduleOnDOMSelectionChange = useMemo(\n      () => debounce(onDOMSelectionChange, 0),\n      [onDOMSelectionChange]\n    )\n\n    androidInputManagerRef.current = useAndroidInputManager({\n      node: ref,\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n    })\n\n    useIsomorphicLayoutEffect(() => {\n      // Update element-related weak maps with the DOM element ref.\n      let window\n      if (ref.current && (window = getDefaultView(ref.current))) {\n        EDITOR_TO_WINDOW.set(editor, window)\n        EDITOR_TO_ELEMENT.set(editor, ref.current)\n        NODE_TO_ELEMENT.set(editor, ref.current)\n        ELEMENT_TO_NODE.set(ref.current, editor)\n      } else {\n        NODE_TO_ELEMENT.delete(editor)\n      }\n\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = getSelection(root)\n\n      if (\n        !domSelection ||\n        !ReactEditor.isFocused(editor) ||\n        androidInputManagerRef.current?.hasPendingAction()\n      ) {\n        return\n      }\n\n      const setDomSelection = (forceChange?: boolean) => {\n        const hasDomSelection = domSelection.type !== 'None'\n\n        // If the DOM selection is properly unset, we're done.\n        if (!selection && !hasDomSelection) {\n          return\n        }\n\n        // Get anchorNode and focusNode\n        const focusNode = domSelection.focusNode\n        let anchorNode\n\n        // COMPAT: In firefox the normal selection way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domSelection.rangeCount > 1) {\n          const firstRange = domSelection.getRangeAt(0)\n          const lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1)\n\n          // Right to left\n          if (firstRange.startContainer === focusNode) {\n            anchorNode = lastRange.endContainer\n          } else {\n            // Left to right\n            anchorNode = firstRange.startContainer\n          }\n        } else {\n          anchorNode = domSelection.anchorNode\n        }\n\n        // verify that the dom selection is in the editor\n        const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n        let hasDomSelectionInEditor = false\n        if (\n          editorElement.contains(anchorNode) &&\n          editorElement.contains(focusNode)\n        ) {\n          hasDomSelectionInEditor = true\n        }\n\n        // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n        if (\n          hasDomSelection &&\n          hasDomSelectionInEditor &&\n          selection &&\n          !forceChange\n        ) {\n          const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: true,\n\n            // domSelection is not necessarily a valid Slate range\n            // (e.g. when clicking on contentEditable:false element)\n            suppressThrow: true,\n          })\n\n          if (slateRange && Range.equals(slateRange, selection)) {\n            if (!state.hasMarkPlaceholder) {\n              return\n            }\n\n            // Ensure selection is inside the mark placeholder\n            if (\n              anchorNode?.parentElement?.hasAttribute(\n                'data-slate-mark-placeholder'\n              )\n            ) {\n              return\n            }\n          }\n        }\n\n        // when <Editable/> is being controlled through external value\n        // then its children might just change - DOM responds to it on its own\n        // but Slate's value is not being updated through any operation\n        // and thus it doesn't transform selection on its own\n        if (selection && !ReactEditor.hasRange(editor, selection)) {\n          editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: true,\n          })\n          return\n        }\n\n        // Otherwise the DOM selection is out of sync, so update it.\n        state.isUpdatingSelection = true\n\n        let newDomRange: DOMRange | null = null\n\n        try {\n          newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n        } catch (e) {\n          // Ignore, dom and state might be out of sync\n        }\n\n        if (newDomRange) {\n          if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n            domSelection.collapseToEnd()\n          } else if (Range.isBackward(selection!)) {\n            domSelection.setBaseAndExtent(\n              newDomRange.endContainer,\n              newDomRange.endOffset,\n              newDomRange.startContainer,\n              newDomRange.startOffset\n            )\n          } else {\n            domSelection.setBaseAndExtent(\n              newDomRange.startContainer,\n              newDomRange.startOffset,\n              newDomRange.endContainer,\n              newDomRange.endOffset\n            )\n          }\n          scrollSelectionIntoView(editor, newDomRange)\n        } else {\n          domSelection.removeAllRanges()\n        }\n\n        return newDomRange\n      }\n\n      // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n      if (domSelection.rangeCount <= 1) {\n        setDomSelection()\n      }\n\n      const ensureSelection =\n        androidInputManagerRef.current?.isFlushing() === 'action'\n\n      if (!IS_ANDROID || !ensureSelection) {\n        setTimeout(() => {\n          state.isUpdatingSelection = false\n        })\n        return\n      }\n\n      let timeoutId: ReturnType<typeof setTimeout> | null = null\n      const animationFrameId = requestAnimationFrame(() => {\n        if (ensureSelection) {\n          const ensureDomSelection = (forceChange?: boolean) => {\n            try {\n              const el = ReactEditor.toDOMNode(editor, editor)\n              el.focus()\n\n              setDomSelection(forceChange)\n            } catch (e) {\n              // Ignore, dom and state might be out of sync\n            }\n          }\n\n          // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n          // This essentially would make setting the slate selection during an update meaningless, so we force it\n          // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n          // visible flicker.\n          ensureDomSelection()\n\n          timeoutId = setTimeout(() => {\n            // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n            // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n            // the animation frame to ensure it displays the correct state.\n            ensureDomSelection(true)\n            state.isUpdatingSelection = false\n          })\n        }\n      })\n\n      return () => {\n        cancelAnimationFrame(animationFrameId)\n        if (timeoutId) {\n          clearTimeout(timeoutId)\n        }\n      }\n    })\n\n    // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n    // is required because React's `beforeinput` is fake and never really attaches\n    // to the real event sadly. (2019/11/01)\n    // https://github.com/facebook/react/issues/11211\n    const onDOMBeforeInput = useCallback(\n      (event: InputEvent) => {\n        handleNativeHistoryEvents(editor, event)\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const root = el.getRootNode()\n\n        if (processing?.current && IS_WEBKIT && root instanceof ShadowRoot) {\n          const ranges = event.getTargetRanges()\n          const range = ranges[0]\n\n          const newRange = new window.Range()\n\n          newRange.setStart(range.startContainer, range.startOffset)\n          newRange.setEnd(range.endContainer, range.endOffset)\n\n          // Translate the DOM Range into a Slate Range\n          const slateRange = ReactEditor.toSlateRange(editor, newRange, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n\n          Transforms.select(editor, slateRange)\n\n          event.preventDefault()\n          event.stopImmediatePropagation()\n          return\n        }\n        onUserInput()\n\n        if (\n          !readOnly &&\n          ReactEditor.hasEditableTarget(editor, event.target) &&\n          !isDOMEventHandled(event, propsOnDOMBeforeInput)\n        ) {\n          // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n          if (androidInputManagerRef.current) {\n            return androidInputManagerRef.current.handleDOMBeforeInput(event)\n          }\n\n          // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n          // triggering a `beforeinput` expecting the change to be applied to the immediately before\n          // set selection.\n          scheduleOnDOMSelectionChange.flush()\n          onDOMSelectionChange.flush()\n\n          const { selection } = editor\n          const { inputType: type } = event\n          const data = (event as any).dataTransfer || event.data || undefined\n\n          const isCompositionChange =\n            type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n          // COMPAT: use composition change events as a hint to where we should insert\n          // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n          if (isCompositionChange && ReactEditor.isComposing(editor)) {\n            return\n          }\n\n          let native = false\n          if (\n            type === 'insertText' &&\n            selection &&\n            Range.isCollapsed(selection) &&\n            // Only use native character insertion for single characters a-z or space for now.\n            // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n            // causes duplicate inserts.\n            event.data &&\n            event.data.length === 1 &&\n            /[a-z ]/i.test(event.data) &&\n            // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n            // When there is an inline element, e.g. a link, and you select\n            // right after it (the start of the next node).\n            selection.anchor.offset !== 0\n          ) {\n            native = true\n\n            // Skip native if there are marks, as\n            // `insertText` will insert a node, not just text.\n            if (editor.marks) {\n              native = false\n            }\n\n            // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint)\n            if (!IS_NODE_MAP_DIRTY.get(editor)) {\n              // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n              // Therefore we don't allow native events to insert text at the end of anchor nodes.\n              const { anchor } = selection\n\n              const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n              const anchorNode = node.parentElement?.closest('a')\n\n              const window = ReactEditor.getWindow(editor)\n\n              if (\n                native &&\n                anchorNode &&\n                ReactEditor.hasDOMNode(editor, anchorNode)\n              ) {\n                // Find the last text node inside the anchor.\n                const lastText = window?.document\n                  .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n                  .lastChild() as DOMText | null\n\n                if (\n                  lastText === node &&\n                  lastText.textContent?.length === offset\n                ) {\n                  native = false\n                }\n              }\n\n              // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n              // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n              if (\n                native &&\n                node.parentElement &&\n                window?.getComputedStyle(node.parentElement)?.whiteSpace ===\n                  'pre'\n              ) {\n                const block = Editor.above(editor, {\n                  at: anchor.path,\n                  match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n                })\n\n                if (block && Node.string(block[0]).includes('\\t')) {\n                  native = false\n                }\n              }\n            }\n          }\n          // COMPAT: For the deleting forward/backward input types we don't want\n          // to change the selection because it is the range that will be deleted,\n          // and those commands determine that for themselves.\n          // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint via ReactEditor.toSlateRange)\n          if (\n            (!type.startsWith('delete') || type.startsWith('deleteBy')) &&\n            !IS_NODE_MAP_DIRTY.get(editor)\n          ) {\n            const [targetRange] = (event as any).getTargetRanges()\n\n            if (targetRange) {\n              const range = ReactEditor.toSlateRange(editor, targetRange, {\n                exactMatch: false,\n                suppressThrow: false,\n              })\n\n              if (!selection || !Range.equals(selection, range)) {\n                native = false\n\n                const selectionRef =\n                  !isCompositionChange &&\n                  editor.selection &&\n                  Editor.rangeRef(editor, editor.selection)\n\n                Transforms.select(editor, range)\n\n                if (selectionRef) {\n                  EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n                }\n              }\n            }\n          }\n\n          // Composition change types occur while a user is composing text and can't be\n          // cancelled. Let them through and wait for the composition to end.\n          if (isCompositionChange) {\n            return\n          }\n\n          if (!native) {\n            event.preventDefault()\n          }\n\n          // COMPAT: If the selection is expanded, even if the command seems like\n          // a delete forward/backward command it should delete the selection.\n          if (\n            selection &&\n            Range.isExpanded(selection) &&\n            type.startsWith('delete')\n          ) {\n            const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n            Editor.deleteFragment(editor, { direction })\n            return\n          }\n\n          switch (type) {\n            case 'deleteByComposition':\n            case 'deleteByCut':\n            case 'deleteByDrag': {\n              Editor.deleteFragment(editor)\n              break\n            }\n\n            case 'deleteContent':\n            case 'deleteContentForward': {\n              Editor.deleteForward(editor)\n              break\n            }\n\n            case 'deleteContentBackward': {\n              Editor.deleteBackward(editor)\n              break\n            }\n\n            case 'deleteEntireSoftLine': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineForward': {\n              Editor.deleteForward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineForward': {\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteWordBackward': {\n              Editor.deleteBackward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'deleteWordForward': {\n              Editor.deleteForward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'insertLineBreak':\n              Editor.insertSoftBreak(editor)\n              break\n\n            case 'insertParagraph': {\n              Editor.insertBreak(editor)\n              break\n            }\n\n            case 'insertFromComposition':\n            case 'insertFromDrop':\n            case 'insertFromPaste':\n            case 'insertFromYank':\n            case 'insertReplacementText':\n            case 'insertText': {\n              if (type === 'insertFromComposition') {\n                // COMPAT: in Safari, `compositionend` is dispatched after the\n                // `beforeinput` for \"insertFromComposition\". But if we wait for it\n                // then we will abort because we're still composing and the selection\n                // won't be updated properly.\n                // https://www.w3.org/TR/input-events-2/\n                if (ReactEditor.isComposing(editor)) {\n                  setIsComposing(false)\n                  IS_COMPOSING.set(editor, false)\n                }\n              }\n\n              // use a weak comparison instead of 'instanceof' to allow\n              // programmatic access of paste events coming from external windows\n              // like cypress where cy.window does not work realibly\n              if (data?.constructor.name === 'DataTransfer') {\n                ReactEditor.insertData(editor, data)\n              } else if (typeof data === 'string') {\n                // Only insertText operations use the native functionality, for now.\n                // Potentially expand to single character deletes, as well.\n                if (native) {\n                  deferredOperations.current.push(() =>\n                    Editor.insertText(editor, data)\n                  )\n                } else {\n                  Editor.insertText(editor, data)\n                }\n              }\n\n              break\n            }\n          }\n\n          // Restore the actual user section if nothing manually set it.\n          const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n          EDITOR_TO_USER_SELECTION.delete(editor)\n\n          if (\n            toRestore &&\n            (!editor.selection || !Range.equals(editor.selection, toRestore))\n          ) {\n            Transforms.select(editor, toRestore)\n          }\n        }\n      },\n      [\n        editor,\n        onDOMSelectionChange,\n        onUserInput,\n        propsOnDOMBeforeInput,\n        readOnly,\n        scheduleOnDOMSelectionChange,\n      ]\n    )\n\n    const callbackRef = useCallback(\n      (node: HTMLDivElement | null) => {\n        if (node == null) {\n          onDOMSelectionChange.cancel()\n          scheduleOnDOMSelectionChange.cancel()\n\n          EDITOR_TO_ELEMENT.delete(editor)\n          NODE_TO_ELEMENT.delete(editor)\n\n          if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n          }\n        } else {\n          // Attach a native DOM event handler for `beforeinput` events, because React's\n          // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n          // real `beforeinput` events sadly... (2019/11/04)\n          // https://github.com/facebook/react/issues/11211\n          if (HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            node.addEventListener('beforeinput', onDOMBeforeInput)\n          }\n        }\n\n        ref.current = node\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(node)\n        } else if (forwardedRef) {\n          forwardedRef.current = node\n        }\n      },\n      [\n        onDOMSelectionChange,\n        scheduleOnDOMSelectionChange,\n        editor,\n        onDOMBeforeInput,\n        forwardedRef,\n      ]\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      const window = ReactEditor.getWindow(editor)\n\n      // COMPAT: In Chrome, `selectionchange` events can fire when <input> and\n      // <textarea> elements are appended to the DOM, causing\n      // `editor.selection` to be overwritten in some circumstances.\n      // (2025/01/16) https://issues.chromium.org/issues/389368412\n      const onSelectionChange = ({ target }: Event) => {\n        const targetElement = target instanceof HTMLElement ? target : null\n        const targetTagName = targetElement?.tagName\n        if (targetTagName === 'INPUT' || targetTagName === 'TEXTAREA') {\n          return\n        }\n        scheduleOnDOMSelectionChange()\n      }\n\n      // Attach a native DOM event handler for `selectionchange`, because React's\n      // built-in `onSelect` handler doesn't fire for all selection changes. It's\n      // a leaky polyfill that only fires on keypresses or clicks. Instead, we\n      // want to fire for any change to the selection inside the editor.\n      // (2019/11/04) https://github.com/facebook/react/issues/5785\n      window.document.addEventListener('selectionchange', onSelectionChange)\n\n      // Listen for dragend and drop globally. In Firefox, if a drop handler\n      // initiates an operation that causes the originally dragged element to\n      // unmount, that element will not emit a dragend event. (2024/06/21)\n      const stoppedDragging = () => {\n        state.isDraggingInternally = false\n      }\n      window.document.addEventListener('dragend', stoppedDragging)\n      window.document.addEventListener('drop', stoppedDragging)\n\n      return () => {\n        window.document.removeEventListener(\n          'selectionchange',\n          onSelectionChange\n        )\n        window.document.removeEventListener('dragend', stoppedDragging)\n        window.document.removeEventListener('drop', stoppedDragging)\n      }\n    }, [scheduleOnDOMSelectionChange, state])\n\n    const decorations = decorate([editor, []])\n    const decorateContext = useDecorateContext(decorate)\n\n    const showPlaceholder =\n      placeholder &&\n      editor.children.length === 1 &&\n      Array.from(Node.texts(editor)).length === 1 &&\n      Node.string(editor) === '' &&\n      !isComposing\n\n    const placeHolderResizeHandler = useCallback(\n      (placeholderEl: HTMLElement | null) => {\n        if (placeholderEl && showPlaceholder) {\n          setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n        } else {\n          setPlaceholderHeight(undefined)\n        }\n      },\n      [showPlaceholder]\n    )\n\n    if (showPlaceholder) {\n      const start = Editor.start(editor, [])\n      decorations.push({\n        [PLACEHOLDER_SYMBOL]: true,\n        placeholder,\n        onPlaceholderResize: placeHolderResizeHandler,\n        anchor: start,\n        focus: start,\n      })\n    }\n\n    const { marks } = editor\n    state.hasMarkPlaceholder = false\n\n    if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n      const { anchor } = editor.selection\n      const leaf = Node.leaf(editor, anchor.path)\n      const { text, ...rest } = leaf\n\n      // While marks isn't a 'complete' text, we can still use loose Text.equals\n      // here which only compares marks anyway.\n      if (!Text.equals(leaf, marks as Text, { loose: true })) {\n        state.hasMarkPlaceholder = true\n\n        const unset = Object.fromEntries(\n          Object.keys(rest).map(mark => [mark, null])\n        )\n\n        decorations.push({\n          [MARK_PLACEHOLDER_SYMBOL]: true,\n          ...unset,\n          ...marks,\n\n          anchor,\n          focus: anchor,\n        })\n      }\n    }\n\n    // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n    // before we receive the composition end event.\n    useEffect(() => {\n      setTimeout(() => {\n        const { selection } = editor\n        if (selection) {\n          const { anchor } = selection\n          const text = Node.leaf(editor, anchor.path)\n\n          // While marks isn't a 'complete' text, we can still use loose Text.equals\n          // here which only compares marks anyway.\n          if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n            EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n            return\n          }\n        }\n\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n      })\n    })\n\n    useFlushDeferredSelectorsOnRender()\n\n    return (\n      <ReadOnlyContext.Provider value={readOnly}>\n        <ComposingContext.Provider value={isComposing}>\n          <DecorateContext.Provider value={decorateContext}>\n            <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n              <Component\n                role={readOnly ? undefined : 'textbox'}\n                aria-multiline={readOnly ? undefined : true}\n                {...attributes}\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n                // have to use hacks to make these replacement-based features work.\n                // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n                // mismatch warning app moves to browser. Pass-through consumer props when\n                // not CAN_USE_DOM (SSR) and default to falsy value\n                spellCheck={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.spellCheck\n                    : false\n                }\n                autoCorrect={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCorrect\n                    : 'false'\n                }\n                autoCapitalize={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCapitalize\n                    : 'false'\n                }\n                data-slate-editor\n                data-slate-node=\"value\"\n                // explicitly set this\n                contentEditable={!readOnly}\n                // in some cases, a decoration needs access to the range / selection to decorate a text node,\n                // then you will select the whole text node when you select part the of text\n                // this magic zIndex=\"-1\" will fix it\n                zindex={-1}\n                suppressContentEditableWarning\n                ref={callbackRef}\n                style={{\n                  ...(disableDefaultStyles\n                    ? {}\n                    : {\n                        // Allow positioning relative to the editable element.\n                        position: 'relative',\n                        // Preserve adjacent whitespace and new lines.\n                        whiteSpace: 'pre-wrap',\n                        // Allow words to break if they are too long.\n                        wordWrap: 'break-word',\n                        // Make the minimum height that of the placeholder.\n                        ...(placeholderHeight\n                          ? { minHeight: placeholderHeight }\n                          : {}),\n                      }),\n                  // Allow for passed-in styles to override anything.\n                  ...userStyle,\n                }}\n                onBeforeInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                    // fall back to React's leaky polyfill instead just for it. It\n                    // only works for the `insertText` input type.\n                    if (\n                      !HAS_BEFORE_INPUT_SUPPORT &&\n                      !readOnly &&\n                      !isEventHandled(event, attributes.onBeforeInput) &&\n                      ReactEditor.hasSelectableTarget(editor, event.target)\n                    ) {\n                      event.preventDefault()\n                      if (!ReactEditor.isComposing(editor)) {\n                        const text = (event as any).data as string\n                        Editor.insertText(editor, text)\n                      }\n                    }\n                  },\n                  [attributes.onBeforeInput, editor, readOnly]\n                )}\n                onInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    if (isEventHandled(event, attributes.onInput)) {\n                      return\n                    }\n\n                    if (androidInputManagerRef.current) {\n                      androidInputManagerRef.current.handleInput()\n                      return\n                    }\n\n                    // Flush native operations, as native events will have propogated\n                    // and we can correctly compare DOM text values in components\n                    // to stop rendering, so that browser functions like autocorrect\n                    // and spellcheck work as expected.\n                    for (const op of deferredOperations.current) {\n                      op()\n                    }\n                    deferredOperations.current = []\n\n                    // COMPAT: Since `beforeinput` doesn't fully `preventDefault`,\n                    // there's a chance that content might be placed in the browser's undo stack.\n                    // This means undo can be triggered even when the div is not focused,\n                    // and it only triggers the input event for the node. (2024/10/09)\n                    if (!ReactEditor.isFocused(editor)) {\n                      handleNativeHistoryEvents(\n                        editor,\n                        event.nativeEvent as InputEvent\n                      )\n                    }\n                  },\n                  [attributes.onInput, editor]\n                )}\n                onBlur={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      readOnly ||\n                      state.isUpdatingSelection ||\n                      !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                      isEventHandled(event, attributes.onBlur)\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: If the current `activeElement` is still the previous\n                    // one, this is due to the window being blurred when the tab\n                    // itself becomes unfocused, so we want to abort early to allow to\n                    // editor to stay focused when the tab becomes focused again.\n                    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                    if (state.latestElement === root.activeElement) {\n                      return\n                    }\n\n                    const { relatedTarget } = event\n                    const el = ReactEditor.toDOMNode(editor, editor)\n\n                    // COMPAT: The event should be ignored if the focus is returning\n                    // to the editor from an embedded editable element (eg. an <input>\n                    // element inside a void node).\n                    if (relatedTarget === el) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving from\n                    // the editor to inside a void node's spacer element.\n                    if (\n                      isDOMElement(relatedTarget) &&\n                      relatedTarget.hasAttribute('data-slate-spacer')\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving to a\n                    // non- editable section of an element that isn't a void node (eg.\n                    // a list item of the check list example).\n                    if (\n                      relatedTarget != null &&\n                      isDOMNode(relatedTarget) &&\n                      ReactEditor.hasDOMNode(editor, relatedTarget)\n                    ) {\n                      const node = ReactEditor.toSlateNode(\n                        editor,\n                        relatedTarget\n                      )\n\n                      if (Element.isElement(node) && !editor.isVoid(node)) {\n                        return\n                      }\n                    }\n\n                    // COMPAT: Safari doesn't always remove the selection even if the content-\n                    // editable element no longer has focus. Refer to:\n                    // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                    if (IS_WEBKIT) {\n                      const domSelection = getSelection(root)\n                      domSelection?.removeAllRanges()\n                    }\n\n                    IS_FOCUSED.delete(editor)\n                  },\n                  [\n                    readOnly,\n                    state.isUpdatingSelection,\n                    state.latestElement,\n                    editor,\n                    attributes.onBlur,\n                  ]\n                )}\n                onClick={useCallback(\n                  (event: React.MouseEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onClick) &&\n                      isDOMNode(event.target)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n\n                      // At this time, the Slate document may be arbitrarily different,\n                      // because onClick handlers can change the document before we get here.\n                      // Therefore we must check that this path actually exists,\n                      // and that it still refers to the same node.\n                      if (\n                        !Editor.hasPath(editor, path) ||\n                        Node.get(editor, path) !== node\n                      ) {\n                        return\n                      }\n\n                      if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                        let blockPath = path\n                        if (\n                          !(\n                            Element.isElement(node) &&\n                            Editor.isBlock(editor, node)\n                          )\n                        ) {\n                          const block = Editor.above(editor, {\n                            match: n =>\n                              Element.isElement(n) && Editor.isBlock(editor, n),\n                            at: path,\n                          })\n\n                          blockPath = block?.[1] ?? path.slice(0, 1)\n                        }\n\n                        const range = Editor.range(editor, blockPath)\n                        Transforms.select(editor, range)\n                        return\n                      }\n\n                      if (readOnly) {\n                        return\n                      }\n\n                      const start = Editor.start(editor, path)\n                      const end = Editor.end(editor, path)\n                      const startVoid = Editor.void(editor, { at: start })\n                      const endVoid = Editor.void(editor, { at: end })\n\n                      if (\n                        startVoid &&\n                        endVoid &&\n                        Path.equals(startVoid[1], endVoid[1])\n                      ) {\n                        const range = Editor.range(editor, start)\n                        Transforms.select(editor, range)\n                      }\n                    }\n                  },\n                  [editor, attributes.onClick, readOnly]\n                )}\n                onCompositionEnd={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      if (ReactEditor.isComposing(editor)) {\n                        Promise.resolve().then(() => {\n                          setIsComposing(false)\n                          IS_COMPOSING.set(editor, false)\n                        })\n                      }\n\n                      androidInputManagerRef.current?.handleCompositionEnd(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionEnd) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      // COMPAT: In Chrome, `beforeinput` events for compositions\n                      // aren't correct and never fire the \"insertFromComposition\"\n                      // type that we need. So instead, insert whenever a composition\n                      // ends since it will already have been committed to the DOM.\n                      if (\n                        !IS_WEBKIT &&\n                        !IS_FIREFOX_LEGACY &&\n                        !IS_IOS &&\n                        !IS_WECHATBROWSER &&\n                        !IS_UC_MOBILE &&\n                        event.data\n                      ) {\n                        const placeholderMarks =\n                          EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n                        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                        // Ensure we insert text with the marks the user was actually seeing\n                        if (placeholderMarks !== undefined) {\n                          EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                          editor.marks = placeholderMarks\n                        }\n\n                        Editor.insertText(editor, event.data)\n\n                        const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                        EDITOR_TO_USER_MARKS.delete(editor)\n                        if (userMarks !== undefined) {\n                          editor.marks = userMarks\n                        }\n                      }\n                    }\n                  },\n                  [attributes.onCompositionEnd, editor]\n                )}\n                onCompositionUpdate={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCompositionUpdate)\n                    ) {\n                      if (!ReactEditor.isComposing(editor)) {\n                        setIsComposing(true)\n                        IS_COMPOSING.set(editor, true)\n                      }\n                    }\n                  },\n                  [attributes.onCompositionUpdate, editor]\n                )}\n                onCompositionStart={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      androidInputManagerRef.current?.handleCompositionStart(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionStart) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      setIsComposing(true)\n\n                      const { selection } = editor\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor)\n                        return\n                      }\n                    }\n                  },\n                  [attributes.onCompositionStart, editor]\n                )}\n                onCopy={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCopy) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'copy'\n                      )\n                    }\n                  },\n                  [attributes.onCopy, editor]\n                )}\n                onCut={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCut) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'cut'\n                      )\n                      const { selection } = editor\n\n                      if (selection) {\n                        if (Range.isExpanded(selection)) {\n                          Editor.deleteFragment(editor)\n                        } else {\n                          const node = Node.parent(\n                            editor,\n                            selection.anchor.path\n                          )\n                          if (Editor.isVoid(editor, node)) {\n                            Transforms.delete(editor)\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onCut]\n                )}\n                onDragOver={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragOver)\n                    ) {\n                      // Only when the target is void, call `preventDefault` to signal\n                      // that drops are allowed. Editable content is droppable by\n                      // default, and calling `preventDefault` hides the cursor.\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n\n                      if (\n                        Element.isElement(node) &&\n                        Editor.isVoid(editor, node)\n                      ) {\n                        event.preventDefault()\n                      }\n                    }\n                  },\n                  [attributes.onDragOver, editor]\n                )}\n                onDragStart={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragStart)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n                      const voidMatch =\n                        (Element.isElement(node) &&\n                          Editor.isVoid(editor, node)) ||\n                        Editor.void(editor, { at: path, voids: true })\n\n                      // If starting a drag on a void node, make sure it is selected\n                      // so that it shows up in the selection's fragment.\n                      if (voidMatch) {\n                        const range = Editor.range(editor, path)\n                        Transforms.select(editor, range)\n                      }\n\n                      state.isDraggingInternally = true\n\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.dataTransfer,\n                        'drag'\n                      )\n                    }\n                  },\n                  [readOnly, editor, attributes.onDragStart, state]\n                )}\n                onDrop={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDrop)\n                    ) {\n                      event.preventDefault()\n\n                      // Keep a reference to the dragged range before updating selection\n                      const draggedRange = editor.selection\n\n                      // Find the range where the drop happened\n                      const range = ReactEditor.findEventRange(editor, event)\n                      const data = event.dataTransfer\n\n                      Transforms.select(editor, range)\n\n                      if (state.isDraggingInternally) {\n                        if (\n                          draggedRange &&\n                          !Range.equals(draggedRange, range) &&\n                          !Editor.void(editor, { at: range, voids: true })\n                        ) {\n                          Transforms.delete(editor, {\n                            at: draggedRange,\n                          })\n                        }\n                      }\n\n                      ReactEditor.insertData(editor, data)\n\n                      // When dragging from another source into the editor, it's possible\n                      // that the current editor does not have focus.\n                      if (!ReactEditor.isFocused(editor)) {\n                        ReactEditor.focus(editor)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onDrop, state]\n                )}\n                onDragEnd={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      state.isDraggingInternally &&\n                      attributes.onDragEnd &&\n                      ReactEditor.hasTarget(editor, event.target)\n                    ) {\n                      attributes.onDragEnd(event)\n                    }\n                  },\n                  [readOnly, state, attributes, editor]\n                )}\n                onFocus={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      !state.isUpdatingSelection &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onFocus)\n                    ) {\n                      const el = ReactEditor.toDOMNode(editor, editor)\n                      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                      state.latestElement = root.activeElement\n\n                      // COMPAT: If the editor has nested editable elements, the focus\n                      // can go to them. In Firefox, this must be prevented because it\n                      // results in issues with keyboard navigation. (2017/03/30)\n                      if (IS_FIREFOX && event.target !== el) {\n                        el.focus()\n                        return\n                      }\n\n                      IS_FOCUSED.set(editor, true)\n                    }\n                  },\n                  [readOnly, state, editor, attributes.onFocus]\n                )}\n                onKeyDown={useCallback(\n                  (event: React.KeyboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target)\n                    ) {\n                      androidInputManagerRef.current?.handleKeyDown(event)\n\n                      const { nativeEvent } = event\n\n                      // COMPAT: The composition end event isn't fired reliably in all browsers,\n                      // so we sometimes might end up stuck in a composition state even though we\n                      // aren't composing any more.\n                      if (\n                        ReactEditor.isComposing(editor) &&\n                        nativeEvent.isComposing === false\n                      ) {\n                        IS_COMPOSING.set(editor, false)\n                        setIsComposing(false)\n                      }\n\n                      if (\n                        isEventHandled(event, attributes.onKeyDown) ||\n                        ReactEditor.isComposing(editor)\n                      ) {\n                        return\n                      }\n\n                      const { selection } = editor\n                      const element =\n                        editor.children[\n                          selection !== null ? selection.focus.path[0] : 0\n                        ]\n                      const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                      // COMPAT: Since we prevent the default behavior on\n                      // `beforeinput` events, the browser doesn't think there's ever\n                      // any history stack to undo or redo, so we have to manage these\n                      // hotkeys ourselves. (2019/11/06)\n                      if (Hotkeys.isRedo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.redo === 'function') {\n                          maybeHistoryEditor.redo()\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isUndo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.undo === 'function') {\n                          maybeHistoryEditor.undo()\n                        }\n\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't handle the selection updates\n                      // properly. In Chrome, the selection isn't properly extended.\n                      // And in Firefox, the selection isn't properly collapsed.\n                      // (2017/10/17)\n                      if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', reverse: true })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line' })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, {\n                          unit: 'line',\n                          edge: 'focus',\n                          reverse: true,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                        return\n                      }\n\n                      // COMPAT: If a void node is selected, or a zero-width text node\n                      // adjacent to an inline is selected, we need to handle these\n                      // hotkeys manually because browsers won't be able to skip over\n                      // the void node with the zero-width space not being an empty\n                      // string.\n                      if (Hotkeys.isMoveBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: !isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'end' : 'start',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'start' : 'end',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: !isRTL,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: isRTL,\n                        })\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to guessing at the input intention for hotkeys.\n                      // COMPAT: In iOS, some of these hotkeys are handled in the\n                      if (!HAS_BEFORE_INPUT_SUPPORT) {\n                        // We don't have a core behavior for these, but they change the\n                        // DOM if we don't prevent them, so we have to.\n                        if (\n                          Hotkeys.isBold(nativeEvent) ||\n                          Hotkeys.isItalic(nativeEvent) ||\n                          Hotkeys.isTransposeCharacter(nativeEvent)\n                        ) {\n                          event.preventDefault()\n                          return\n                        }\n\n                        if (Hotkeys.isSoftBreak(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertSoftBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isSplitBlock(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n                      } else {\n                        if (IS_CHROME || IS_WEBKIT) {\n                          // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                          // an event when deleting backwards in a selected void inline node\n                          if (\n                            selection &&\n                            (Hotkeys.isDeleteBackward(nativeEvent) ||\n                              Hotkeys.isDeleteForward(nativeEvent)) &&\n                            Range.isCollapsed(selection)\n                          ) {\n                            const currentNode = Node.parent(\n                              editor,\n                              selection.anchor.path\n                            )\n\n                            if (\n                              Element.isElement(currentNode) &&\n                              Editor.isVoid(editor, currentNode) &&\n                              (Editor.isInline(editor, currentNode) ||\n                                Editor.isBlock(editor, currentNode))\n                            ) {\n                              event.preventDefault()\n                              Editor.deleteBackward(editor, { unit: 'block' })\n\n                              return\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onKeyDown]\n                )}\n                onPaste={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onPaste)\n                    ) {\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to React's `onPaste` here instead.\n                      // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                      // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                      // COMPAT: Safari InputEvents generated by pasting won't include\n                      // application/x-slate-fragment items, so use the\n                      // ClipboardEvent here. (2023/03/15)\n                      if (\n                        !HAS_BEFORE_INPUT_SUPPORT ||\n                        isPlainTextOnlyPaste(event.nativeEvent) ||\n                        IS_WEBKIT\n                      ) {\n                        event.preventDefault()\n                        ReactEditor.insertData(editor, event.clipboardData)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onPaste]\n                )}\n              >\n                <Children\n                  decorations={decorations}\n                  node={editor}\n                  renderElement={renderElement}\n                  renderChunk={renderChunk}\n                  renderPlaceholder={renderPlaceholder}\n                  renderLeaf={renderLeaf}\n                  renderText={renderText}\n                />\n              </Component>\n            </RestoreDOM>\n          </DecorateContext.Provider>\n        </ComposingContext.Provider>\n      </ReadOnlyContext.Provider>\n    )\n  }\n)\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => DecoratedRange[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nexport const defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n\n    // COMPAT: In Chrome, domRange.getBoundingClientRect() can return zero dimensions for valid ranges (e.g. line breaks).\n    // When this happens, do not scroll like most editors do.\n    const domRect = domRange.getBoundingClientRect()\n    const isZeroDimensionRect =\n      domRect.width === 0 &&\n      domRect.height === 0 &&\n      domRect.x === 0 &&\n      domRect.y === 0\n\n    if (isZeroDimensionRect) {\n      const leafRect = leafEl.getBoundingClientRect()\n      const leafHasDimensions = leafRect.width > 0 || leafRect.height > 0\n\n      if (leafHasDimensions) {\n        return\n      }\n    }\n\n    // Default behavior: use domRange's getBoundingClientRect\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n\nconst handleNativeHistoryEvents = (editor: Editor, event: InputEvent) => {\n  const maybeHistoryEditor: any = editor\n  if (\n    event.inputType === 'historyUndo' &&\n    typeof maybeHistoryEditor.undo === 'function'\n  ) {\n    maybeHistoryEditor.undo()\n    return\n  }\n  if (\n    event.inputType === 'historyRedo' &&\n    typeof maybeHistoryEditor.redo === 'function'\n  ) {\n    maybeHistoryEditor.redo()\n    return\n  }\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Descendant, Editor, Node, Operation, Scrubber, Selection } from 'slate'\nimport { EDITOR_TO_ON_CHANGE } from 'slate-dom'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n  onSelectionChange?: (selection: Selection) => void\n  onValueChange?: (value: Descendant[]) => void\n}) => {\n  const {\n    editor,\n    children,\n    onChange,\n    onSelectionChange,\n    onValueChange,\n    initialValue,\n    ...rest\n  } = props\n\n  // Run once on first mount, but before `useEffect` or render\n  React.useState(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n\n    editor.children = initialValue\n    Object.assign(editor, rest)\n  })\n\n  const { selectorContext, onChange: handleSelectorChange } =\n    useSelectorContext()\n\n  const onContextChange = useCallback(\n    (options?: { operation?: Operation }) => {\n      if (onChange) {\n        onChange(editor.children)\n      }\n\n      switch (options?.operation?.type) {\n        case 'set_selection':\n          onSelectionChange?.(editor.selection)\n          break\n        default:\n          onValueChange?.(editor.children)\n      }\n\n      handleSelectorChange()\n    },\n    [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]\n  )\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={isFocused}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { useCallback } from 'react'\nimport { Editor, Range } from 'slate'\nimport { useElementIf } from './use-element'\nimport { useSlateSelector } from './use-slate-selector'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  const element = useElementIf()\n\n  // Breaking the rules of hooks is fine here since `!element` will remain true\n  // or false for the entire lifetime of the component this hook is called from.\n  // TODO: Decide if we want to throw an error instead when calling\n  // `useSelected` outside of an element (potentially a breaking change).\n  if (!element) return false\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const selector = useCallback(\n    (editor: Editor) => {\n      if (!editor.selection) return false\n      const path = ReactEditor.findPath(editor, element)\n      const range = Editor.range(editor, path)\n      return !!Range.intersection(range, editor.selection)\n    },\n    [element]\n  )\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSlateSelector(selector, undefined, {\n    // Defer the selector until after `Editable` has rendered so that the path\n    // will be accurate.\n    deferred: true,\n  })\n}\n","import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n","import ReactDOM from 'react-dom'\nimport { BaseEditor, Node } from 'slate'\nimport { withDOM, IS_ANDROID, EDITOR_TO_PENDING_SELECTION } from 'slate-dom'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\nimport { getChunkTreeForNode } from '../chunking'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  let e = editor as T & ReactEditor\n\n  e = withDOM(e, clipboardFormatKey)\n\n  const { onChange, apply, insertText } = e\n\n  e.getChunkSize = () => null\n\n  if (IS_ANDROID) {\n    e.insertText = (text, options) => {\n      // COMPAT: Android devices, specifically Samsung devices, experience cursor jumping.\n      // This issue occurs when the ⁠insertText function is called immediately after typing.\n      // The problem arises because typing schedules a selection change.\n      // However, this selection change is only executed after the ⁠insertText function.\n      // As a result, the already obsolete selection is applied, leading to incorrect\n      // final cursor position.\n      EDITOR_TO_PENDING_SELECTION.delete(e)\n\n      return insertText(text, options)\n    }\n  }\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      onChange(options)\n    })\n  }\n\n  // On move_node, if the chunking optimization is enabled for the parent of the\n  // node being moved, add the moved node to the movedNodeKeys set of the\n  // parent's chunk tree.\n  e.apply = operation => {\n    if (operation.type === 'move_node') {\n      const parent = Node.parent(e, operation.path)\n      const chunking = !!e.getChunkSize(parent)\n\n      if (chunking) {\n        const node = Node.get(e, operation.path)\n        const chunkTree = getChunkTreeForNode(e, parent)\n        const key = ReactEditor.findKey(e, node)\n        chunkTree.movedNodeKeys.add(key)\n      }\n    }\n\n    apply(operation)\n  }\n\n  return e\n}\n"],"names":["objectWithoutPropertiesLoose","toPrimitive","toPropertyKey","EditorContext","createContext","useSlateStatic","editor","useContext","Error","ReactEditor","DOMEditor","RESOLVE_DELAY","FLUSH_DELAY","debug","isDataTransfer","value","constructor","name","createAndroidInputManager","_ref","scheduleOnDOMSelectionChange","onDOMSelectionChange","flushing","compositionEndTimeoutId","flushTimeoutId","actionTimeoutId","idCounter","insertPositionHint","applyPendingSelection","pendingSelection","EDITOR_TO_PENDING_SELECTION","get","delete","selection","normalized","normalizeRange","Range","equals","Transforms","select","performAction","action","EDITOR_TO_PENDING_ACTION","at","target","Point","isPoint","normalizePoint","targetRange","Editor","range","run","flush","clearTimeout","hasPendingDiffs","hasPendingAction","setTimeout","selectionRef","rangeRef","affinity","EDITOR_TO_USER_MARKS","set","marks","EDITOR_TO_PENDING_DIFFS","scheduleSelectionChange","diff","_EDITOR_TO_PENDING_DI","_EDITOR_TO_PENDING_DI2","pendingMarks","EDITOR_TO_PENDING_INSERTION_MARKS","undefined","text","insertText","deleteFragment","filter","_ref2","id","verifyDiffState","cancel","unref","userMarks","onChange","handleCompositionEnd","_event","IS_COMPOSING","handleCompositionStart","updatePlaceholderVisibility","forceHide","arguments","length","placeholderElement","EDITOR_TO_PLACEHOLDER_ELEMENT","style","display","removeProperty","storeDiff","path","_EDITOR_TO_PENDING_DI3","pendingDiffs","Node","leaf","idx","findIndex","change","Path","normalizeStringDiff","push","merged","mergeStringDiffs","splice","_objectSpread","scheduleAction","handleDOMBeforeInput","event","_targetRange2","IS_NODE_MAP_DIRTY","inputType","type","data","dataTransfer","nativeTargetRange","getTargetRanges","toSlateRange","exactMatch","suppressThrow","window","getWindow","domSelection","getSelection","canStoreDiff","startsWith","direction","endsWith","start","end","edges","isExpanded","offset","next","match","Text","isText","anchor","focus","relevantPendingDiffs","find","diffs","applyStringDiff","point","handleUserSelect","isCollapsed","targetNode","deleteForward","_nativeTargetRange","nativeCollapsed","isDOMSelection","collapsed","deleteBackward","unit","insertSoftBreak","insertBreak","insertData","replace","test","slice","includes","parts","split","forEach","line","i","hintPosition","search","diffPosition","scheduleFlush","currentSelection","newPoint","_EDITOR_TO_PENDING_DI4","hasPendingChanges","isFlushing","pathChanged","parentPathChanged","handleInput","handleKeyDown","_","handleDomMutations","mutations","some","mutation","isTrackedMutation","_EDITOR_TO_FORCE_REND","EDITOR_TO_FORCE_RENDER","useIsMounted","isMountedRef","useRef","useEffect","current","useIsomorphicLayoutEffect","CAN_USE_DOM","useLayoutEffect","useMutationObserver","node","callback","options","mutationObserver","useState","MutationObserver","takeRecords","observe","disconnect","MUTATION_OBSERVER_CONFIG","subtree","childList","characterData","useAndroidInputManager","IS_ANDROID","_objectWithoutProperties","_excluded","isMounted","inputManager","EDITOR_TO_SCHEDULE_FLUSH","String","props","isLast","parent","findPath","parentPath","isMarkPlaceholder","Boolean","MARK_PLACEHOLDER_SYMBOL","isVoid","React","createElement","ZeroWidthString","string","children","isInline","isLineBreak","TextString","isTrailing","ref","getTextContent","concat","initialText","textWithTrailing","textContent","MemoizedText","memo","forwardRef","attributes","PLACEHOLDER_DELAY","disconnectPlaceholderResizeObserver","placeholderResizeObserver","releaseObserver","clearTimeoutRef","timeoutRef","defaultRenderLeaf","DefaultLeaf","Leaf","renderPlaceholder","renderLeaf","leafPosition","placeholderRef","showPlaceholder","setShowPlaceholder","showPlaceholderTimeoutRef","callbackPlaceholderRef","useCallback","placeholderEl","_leaf$onPlaceholderRe","onPlaceholderResize","call","ResizeObserver","ResizeObserverPolyfill","_leaf$onPlaceholderRe2","leafIsPlaceholder","PLACEHOLDER_SYMBOL","placeholderProps","placeholder","position","top","pointerEvents","width","maxWidth","opacity","userSelect","textDecoration","WebkitUserModify","IS_WEBKIT","contentEditable","Fragment","MemoizedLeaf","prev","useGenericSelector","selector","equalityFn","forceRender","useReducer","s","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","selectorResult","err","isError","message","stack","update","newSelectedState","error","DecorateContext","useDecorations","parentDecorations","decorate","addEventListener","isTextDecorationsEqual","isElementDecorationsEqual","decorations","unsubscribe","useMemo","useDecorateContext","decorateProp","eventListeners","Set","latestDecorate","listener","entry","add","defaultRenderText","DefaultText","renderText","decoratedLeaves","SlateText","key","findKey","callbackRef","span","KEY_TO_ELEMENT","EDITOR_TO_KEY_TO_ELEMENT","NODE_TO_ELEMENT","ELEMENT_TO_NODE","defaultRenderElement","DefaultElement","Element","element","renderElement","renderChunk","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","texts","height","color","outline","NODE_TO_INDEX","NODE_TO_PARENT","MemoizedElement","ChunkTreeHelper","chunkTree","chunkSize","_defineProperty","root","pointerChunk","pointerIndex","pointerIndexStack","reachedEnd","validateState","readLeaf","pointerSiblings","cachedPointerNode","exitChunk","enterChunkUntilLeaf","pointerNode","returnToPreviousLeaf","insertBefore","leaves","insertAfter","beforeDepth","afterDepth","remainingCapacity","toInsertCount","Math","min","leavesToInsert","rawInsertAfter","rawInsertPointer","savePointer","finalPointer","restorePointer","minDepth","max","remove","invalidateChunk","c","modifiedChunks","atStart","getPointerNode","getChunkPath","chunk","index","indexOf","unshift","savedPointer","indexStack","enterChunk","_this$pointerNode","_this$pointerNode2","previousPointerChunk","pop","groupIntoChunks","perChunk","chunks","chunkNodes","Key","newTotal","depthForTotal","depth","perTopLevelChunk","pow","validateDescendant","actualIndexStack","join","ChildrenHelper","cachedKeys","Array","read","n","slicedChildren","remaining","maxChildren","lookAhead","elementResult","candidateNode","candidateKey","toChunkLeaves","nodes","startIndex","map","cachedKey","reconcileChildren","rerenderChildren","onInsert","onUpdate","onIndexChange","clear","chunkTreeHelper","childrenHelper","treeLeaf","_loop","wasMoved","movedNodeKeys","has","insertedChildrenStartIndex","insertedChildren","matchingChild","relativeIndex","matchingChildIndex","remainingChildren","KEY_TO_CHUNK_TREE","WeakMap","getChunkTreeForNode","reconcile","defaultRenderChunk","ChunkAncestor","ancestor","chunkNode","renderedChunk","highest","lowest","MemoizedChunk","ChunkTree","ElementContext","useElement","context","useElementIf","isEditor","isBlock","isElement","isLeafBlock","getChunkSize","chunking","decorationsByChild","childrenToRedecorate","useDecorationsByChild","renderElementComponent","Provider","ElementComponent","renderTextComponent","TextComponent","splitDecorationsByChild","mutableDecorationsByChild","_mutableDecorationsBy","previousDecorations","ReadOnlyContext","SlateSelectorContext","refEquality","a","b","useSlateSelector","deferred","genericSelector","useSelectorContext","deferredEventListeners","flushDeferred","callbackProp","selectorContext","useFlushDeferredSelectorsOnRender","useSlate","EDITOR_TO_V","getEditorVersionRef","v","useSlateWithV","vRef","useTrackUserInput","receivedUserInput","animationFrameIdRef","onUserInput","cancelAnimationFrame","requestAnimationFrame","createRestoreDomManager","bufferedMutations","registerMutations","trackedMutations","restoreDOM","reverse","removedNodes","nextSibling","addedNodes","removeChild","characterDataOldValue","RestoreDOMComponent","Component","_this$mutationObserve","componentDidMount","manager","getSnapshotBeforeUpdate","_this$mutationObserve2","_this$mutationObserve3","_this$manager2","pendingMutations","_this$manager","componentDidUpdate","_this$manager3","componentWillUnmount","_this$mutationObserve4","render","RestoreDOM","ComposingContext","useComposing","Children","Editable","forwardedRef","defaultRenderPlaceholder","DefaultPlaceholder","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","scrollSelectionIntoView","defaultScrollSelectionIntoView","userStyle","as","disableDefaultStyles","isComposing","setIsComposing","deferredOperations","placeholderHeight","setPlaceholderHeight","processing","IS_READ_ONLY","state","isDraggingInternally","isUpdatingSelection","latestElement","hasMarkPlaceholder","androidInputManagerRef","throttle","el","toDOMNode","getRootNode","ShadowRoot","active","getActiveElement","document","execCommand","deselect","androidInputManager","findDocumentOrShadowRoot","activeElement","IS_FOCUSED","anchorNode","focusNode","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeInEditor","hasTarget","debounce","_androidInputManagerR","_androidInputManagerR2","getDefaultView","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","isFocused","setDomSelection","forceChange","hasDomSelection","IS_FIREFOX","rangeCount","firstRange","getRangeAt","lastRange","startContainer","endContainer","editorElement","hasDomSelectionInEditor","contains","slateRange","_anchorNode","parentElement","hasAttribute","hasRange","newDomRange","toDOMRange","e","collapseToEnd","isBackward","setBaseAndExtent","endOffset","startOffset","removeAllRanges","ensureSelection","timeoutId","animationFrameId","ensureDomSelection","handleNativeHistoryEvents","ranges","newRange","setStart","setEnd","preventDefault","stopImmediatePropagation","isDOMEventHandled","_EDITOR_TO_USER_SELEC","isCompositionChange","native","_node$parentElement","_window$getComputedSt","toDOMPoint","closest","hasDOMNode","_lastText$textContent","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","getComputedStyle","whiteSpace","block","above","EDITOR_TO_USER_SELECTION","toRestore","HAS_BEFORE_INPUT_SUPPORT","removeEventListener","onSelectionChange","targetElement","HTMLElement","targetTagName","tagName","stoppedDragging","decorateContext","from","placeHolderResizeHandler","_placeholderEl$getBou","getBoundingClientRect","rest","_excluded2","loose","unset","Object","fromEntries","keys","mark","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","wordWrap","minHeight","onBeforeInput","isEventHandled","hasSelectableTarget","onInput","op","nativeEvent","onBlur","relatedTarget","isDOMElement","isDOMNode","toSlateNode","onClick","hasPath","detail","TRIPLE_CLICK","blockPath","_block$","startVoid","void","endVoid","onCompositionEnd","_androidInputManagerR3","Promise","resolve","then","IS_FIREFOX_LEGACY","IS_IOS","IS_WECHATBROWSER","IS_UC_MOBILE","placeholderMarks","onCompositionUpdate","onCompositionStart","_androidInputManagerR4","onCopy","isDOMEventTargetInput","setFragmentData","clipboardData","onCut","onDragOver","onDragStart","voidMatch","voids","onDrop","draggedRange","findEventRange","onDragEnd","onFocus","onKeyDown","_androidInputManagerR5","isRTL","Hotkeys","isRedo","maybeHistoryEditor","redo","isUndo","undo","isMoveLineBackward","move","isMoveLineForward","isExtendLineBackward","edge","isExtendLineForward","isMoveBackward","collapse","isMoveForward","isMoveWordBackward","isMoveWordForward","isBold","isItalic","isTransposeCharacter","isSoftBreak","isSplitBlock","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","IS_CHROME","currentNode","onPaste","isPlainTextOnlyPaste","domRange","leafEl","domRect","isZeroDimensionRect","x","y","leafRect","leafHasDimensions","bind","scrollIntoView","scrollMode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","HTMLInputElement","HTMLTextAreaElement","defaultPrevented","FocusedContext","useFocused","REACT_MAJOR_VERSION","parseInt","version","Slate","onValueChange","initialValue","isNodeList","Scrubber","stringify","assign","handleSelectorChange","onContextChange","_options$operation","operation","EDITOR_TO_ON_CHANGE","setIsFocused","fn","useEditor","useSelected","intersection","useSlateSelection","isSelectionEqual","withReact","clipboardFormatKey","withDOM","apply","maybeBatchUpdates","ReactDOM","unstable_batchedUpdates"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}