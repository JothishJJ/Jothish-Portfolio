{"version":3,"file":"create-secret.js","sources":["../src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;AAOA,eAAsB,oBACpB,SACA,QACA,WACA,QACA,KAAK,QACuC;AAC5C,QAAM,SAAS,QAAQ,WAAW,EAAC,YAAW;AAE9C,MAAI;AACF,UAAM,YAAY,IAAI,KAAK,KAAK,IAAA,IAAQ,MAAO,UAAU,GACnD,MAAM,UAAU,EAAE,IAClB,YAAY,kBAAA,GACZ,QAAQ,OAAO,MAAM,GAAG,EAAE,IAAI,EAAC,QAAQ,WAAW,QAAQ,WAAW,OAAA,CAAO;AAClF,WAAA,MAAM,OAAO,cAAc,gBAAgB,EAAC,KAAK,OAAO,YAAW,EAAE,MAAM,KAAK,EAAE,OAAO,EAAC,IAAA,CAAI,GAEvF,EAAC,QAAQ,WAAW,UAAA;AAAA,EAC7B,UAAA;AACE,QAAI;AAEF,YAAM,OAAO,OAAO,EAAC,OAAO,2BAA0B;AAAA,IACxD,SAAS,KAAK;AAEZ,cAAQ,MAAM,oCAAoC,GAAG;AAAA,IACvD;AAAA,EACF;AACF;"}