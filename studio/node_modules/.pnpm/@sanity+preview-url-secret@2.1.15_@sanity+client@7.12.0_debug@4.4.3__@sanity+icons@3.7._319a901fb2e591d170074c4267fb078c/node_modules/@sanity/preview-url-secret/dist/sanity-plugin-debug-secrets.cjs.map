{"version":3,"file":"sanity-plugin-debug-secrets.cjs","sources":["../src/sanityPluginDebugSecrets/debugUrlSecrets.tsx","../src/sanityPluginDebugSecrets/index.ts"],"sourcesContent":["import {CheckmarkCircleIcon, CloseCircleIcon, LockIcon} from '@sanity/icons'\nimport {defineType} from 'sanity'\nimport {schemaType, SECRET_TTL} from '../constants'\n\nexport const debugUrlSecretsType = defineType({\n  type: 'document',\n  icon: LockIcon,\n  name: schemaType,\n  title: '@sanity/preview-url-secret',\n  readOnly: true,\n  fields: [\n    {\n      type: 'string',\n      name: 'secret',\n      title: 'Secret',\n    },\n    {\n      type: 'string',\n      name: 'source',\n      title: 'Source Tool',\n    },\n    {\n      type: 'string',\n      name: 'studioUrl',\n      title: 'Studio URL',\n    },\n    {\n      type: 'string',\n      name: 'userId',\n      title: 'Sanity User ID',\n    },\n  ],\n  preview: {\n    select: {\n      source: 'source',\n      studioUrl: 'studioUrl',\n      updatedAt: '_updatedAt',\n    },\n    prepare(data) {\n      const url = data.studioUrl ? new URL(data.studioUrl, location.origin) : undefined\n      const updatedAt = new Date(data.updatedAt).getTime()\n      const expiresAt = new Date(updatedAt + 1000 * SECRET_TTL)\n      const expired = expiresAt < new Date()\n      const icon = expired ? CloseCircleIcon : CheckmarkCircleIcon\n      return {\n        title: url ? `${url.host}${url.pathname}` : data.source,\n        subtitle: expired\n          ? 'Expired'\n          : `Expires in ${Math.round((expiresAt.getTime() - Date.now()) / (1000 * 60))} minutes`,\n        media: icon,\n      }\n    },\n  },\n})\n","import {definePlugin} from 'sanity'\nimport {schemaType} from '../constants'\nimport {debugUrlSecretsType} from './debugUrlSecrets'\n\nexport const debugSecrets = definePlugin<void>(() => {\n  return {\n    name: 'sanity-plugin-debug-secrets',\n    schema: {\n      types: [debugUrlSecretsType],\n    },\n    document: {\n      actions: (prev, context) => {\n        if (context.schemaType !== schemaType) {\n          return prev\n        }\n        return prev.filter(({action}) => action === 'delete')\n      },\n      inspectors: (prev, context) => {\n        if (context.documentType !== schemaType) {\n          return prev\n        }\n        return []\n      },\n      unstable_fieldActions: (prev, context) => {\n        if (context.schemaType.name !== schemaType) {\n          return prev\n        }\n        return []\n      },\n    },\n  }\n})\n"],"names":["defineType","LockIcon","schemaType","SECRET_TTL","CloseCircleIcon","CheckmarkCircleIcon","definePlugin"],"mappings":";;;AAIO,MAAM,sBAAsBA,OAAAA,WAAW;AAAA,EAC5C,MAAM;AAAA,EACN,MAAMC,MAAAA;AAAAA,EACN,MAAMC,UAAAA;AAAAA,EACN,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,IACN;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IAAA;AAAA,IAET;AAAA,MACE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IAAA;AAAA,EACT;AAAA,EAEF,SAAS;AAAA,IACP,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,WAAW;AAAA,IAAA;AAAA,IAEb,QAAQ,MAAM;AACZ,YAAM,MAAM,KAAK,YAAY,IAAI,IAAI,KAAK,WAAW,SAAS,MAAM,IAAI,QAClE,YAAY,IAAI,KAAK,KAAK,SAAS,EAAE,QAAA,GACrC,YAAY,IAAI,KAAK,YAAY,MAAOC,UAAAA,UAAU,GAClD,UAAU,YAAY,oBAAI,KAAA,GAC1B,OAAO,UAAUC,MAAAA,kBAAkBC,MAAAA;AACzC,aAAO;AAAA,QACL,OAAO,MAAM,GAAG,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,KAAK;AAAA,QACjD,UAAU,UACN,YACA,cAAc,KAAK,OAAO,UAAU,QAAA,IAAY,KAAK,IAAA,MAAU,MAAO,GAAG,CAAC;AAAA,QAC9E,OAAO;AAAA,MAAA;AAAA,IAEX;AAAA,EAAA;AAEJ,CAAC,GCjDY,eAAeC,OAAAA,aAAmB,OACtC;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO,CAAC,mBAAmB;AAAA,EAAA;AAAA,EAE7B,UAAU;AAAA,IACR,SAAS,CAAC,MAAM,YACV,QAAQ,eAAeJ,UAAAA,aAClB,OAEF,KAAK,OAAO,CAAC,EAAC,OAAA,MAAY,WAAW,QAAQ;AAAA,IAEtD,YAAY,CAAC,MAAM,YACb,QAAQ,iBAAiBA,UAAAA,aACpB,OAEF,CAAA;AAAA,IAET,uBAAuB,CAAC,MAAM,YACxB,QAAQ,WAAW,SAASA,UAAAA,aACvB,OAEF,CAAA;AAAA,EAAC;AAGd,EACD;;"}