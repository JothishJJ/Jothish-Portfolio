{"version":3,"file":"toggle-preview-access-sharing.js","sources":["../src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;AAMA,eAAsB,2BACpB,SACA,QACA,WACA,QAC2B;AAC3B,QAAM,SAAS,QAAQ,WAAW,EAAC,YAAW,GACxC,YAAY,qBACZ,QAAQ,OAAO,MAAMA,iBAAG,EAAE,IAAI,EAAC,QAAQ,WAAW,WAAW,QAAO;AAC1E,SAAA,MAAM,OACH,cACA,kBAAkB,EAAA,KAACA,mBAAA,OAAKC,qBAAO,QAAQ,WAAW,OAAA,CAAO,EACzD,MAAM,KAAK,EACX,OAAO,EAAC,KAAI,GAER,EAAC,QAAQ,UAAA;AAClB;AAGA,eAAsB,4BACpB,SACA,QACA,WACA,QACe;AACf,QAAM,SAAS,QAAQ,WAAW,EAAC,WAAA,CAAW,GACxC,QAAQ,OAAO,MAAMD,iBAAG,EAAE,IAAI,EAAC,QAAQ,MAAM,WAAW,QAAO;AACrE,QAAM,OACH,YAAA,EACA,kBAAkB,EAAA,KAACA,mBAAA,OAAKC,qBAAO,QAAQ,WAAW,OAAA,CAAO,EACzD,MAAM,KAAK,EACX,OAAO,EAAC,KAAI;AACjB;"}