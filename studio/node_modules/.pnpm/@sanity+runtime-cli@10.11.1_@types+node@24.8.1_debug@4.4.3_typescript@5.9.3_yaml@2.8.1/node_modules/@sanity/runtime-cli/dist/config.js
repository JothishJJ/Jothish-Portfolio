import { env } from 'node:process';
import getToken from './utils/get-token.js';
export const BLUEPRINT_CONFIG_VERSION = 'v2025-05-08';
export const BLUEPRINT_DIR = '.sanity';
export const BLUEPRINT_CONFIG_FILE = 'blueprint.config.json';
const nodeEnv = env.NODE_ENV?.toLowerCase() ?? 'production';
const isTest = nodeEnv === 'test';
const sanityEnv = env.SANITY_INTERNAL_ENV?.toLowerCase() ?? 'production';
const sanityProd = sanityEnv === 'production';
const isPublishing = env?.PUBLISHING?.toLowerCase() === 'true';
const apiUrls = {
    production: 'https://api.sanity.io/',
    staging: 'https://api.sanity.work/',
    default: 'http://api.sanity/',
};
const apiUrl = apiUrls[sanityEnv] ?? apiUrls.default;
let _token;
function loadToken() {
    let token = null;
    if (isTest || isPublishing) {
        token = 'token';
    }
    else {
        try {
            token = getToken({ prod: sanityProd });
        }
        catch (error) {
            if (error instanceof Error && 'code' in error && error.code === 'ENOENT') {
                // do nothing, validateToken and commands handle missing config file
            }
            else {
                // rethrow other errors like JSON.parse failure
                throw error;
            }
        }
    }
    return token;
}
export default {
    isTest,
    apiUrl,
    get token() {
        return _token === undefined ? loadToken() : _token;
    },
    set token(value) {
        _token = value;
    },
};
