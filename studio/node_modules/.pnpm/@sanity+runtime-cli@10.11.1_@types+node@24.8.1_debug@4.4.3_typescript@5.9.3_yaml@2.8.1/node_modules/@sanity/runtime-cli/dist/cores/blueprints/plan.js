import chalk from 'chalk';
import { getStack } from '../../actions/blueprints/stacks.js';
import { formatResourceTree, stackDeployDiff } from '../../utils/display/blueprints-formatting.js';
export async function blueprintPlanCore(options) {
    const { bin = 'sanity', log, blueprint, token } = options;
    const { projectId, stackId, parsedBlueprint, fileInfo } = blueprint;
    log(`${chalk.bold.blueBright('Blueprint Deployment Plan')} ${chalk.dim(`(${fileInfo.fileName})`)}`);
    log(formatResourceTree(parsedBlueprint.resources));
    if (token && projectId && stackId) {
        const stackResponse = await getStack({
            auth: { token, scopeType: 'project', scopeId: projectId },
            stackId,
        });
        if (!stackResponse.ok) {
            log(chalk.dim('Unable to retrieve live deployment for comparison'));
        }
        else {
            const diff = stackDeployDiff(parsedBlueprint, stackResponse.stack);
            if (diff)
                log(diff);
            else
                log(chalk.dim('No changes detected to live deployment'));
        }
    }
    log(`\n  Run "${chalk.bold.magenta(`${bin} blueprints deploy`)}" to deploy these changes`);
    return { success: true };
}
