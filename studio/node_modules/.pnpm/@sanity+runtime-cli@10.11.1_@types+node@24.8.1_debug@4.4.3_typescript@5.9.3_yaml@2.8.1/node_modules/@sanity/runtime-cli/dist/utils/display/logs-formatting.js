import { treeify } from 'array-treeify';
import chalk from 'chalk';
export function formatLogEntry(log, withDate = true, isNewest = false) {
    const date = new Date(log.timestamp);
    const time = date.toLocaleTimeString();
    const day = date.toLocaleDateString();
    return `${isNewest ? `${chalk.green('>')} ` : ''}${withDate ? `${day} ` : ''}${chalk.dim(time)} ${log.message}`;
}
export function organizeLogsByDay(logs) {
    const logsByDay = new Map();
    for (const log of logs) {
        const date = new Date(log.timestamp);
        const day = date.toLocaleDateString();
        if (!logsByDay.has(day))
            logsByDay.set(day, []);
        logsByDay.get(day)?.push(log);
    }
    return logsByDay;
}
export function formatLogsByDay(logsByDay) {
    const output = [];
    const sortedDays = Array.from(logsByDay.keys()).sort((a, b) => {
        return new Date(a).getTime() - new Date(b).getTime();
    });
    for (const day of sortedDays) {
        output.push(`${chalk.blue('Date:')} ${chalk.bold(day)}`);
        const dayLogs = logsByDay.get(day) || [];
        dayLogs.sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());
        const dayLogsOutput = dayLogs.map((log) => formatLogEntry(log, false));
        output.push(dayLogsOutput);
        output.push('');
    }
    output.pop(); // remove last empty line
    return treeify(output);
}
