{
  "commands": {
    "blueprints:add": {
      "aliases": [],
      "args": {
        "type": {
          "description": "Type of Resource to add (e.g. function)",
          "name": "type",
          "options": [
            "function"
          ],
          "required": true
        }
      },
      "description": "Add a Resource to a Blueprint",
      "examples": [
        "<%= config.bin %> <%= command.id %> function",
        "<%= config.bin %> <%= command.id %> function --helpers",
        "<%= config.bin %> <%= command.id %> function --name my-function",
        "<%= config.bin %> <%= command.id %> function --name my-function --fn-type document-create",
        "<%= config.bin %> <%= command.id %> function --name my-function --fn-type document-create --fn-type document-update --lang js"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "example": {
          "aliases": [
            "recipe"
          ],
          "description": "Example to use for the Resource",
          "exclusive": [
            "name",
            "fn-type",
            "language",
            "javascript",
            "fn-helpers",
            "fn-installer"
          ],
          "name": "example",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "char": "n",
          "description": "Name of the Resource to add",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "fn-type": {
          "aliases": [
            "function-type"
          ],
          "dependsOn": [
            "name"
          ],
          "description": "Document change event(s) that should trigger the function; you can specify multiple events by specifying this flag multiple times",
          "name": "fn-type",
          "hasDynamicHelp": false,
          "multiple": true,
          "options": [
            "document-create",
            "document-delete",
            "document-update",
            "document-publish"
          ],
          "type": "option"
        },
        "language": {
          "aliases": [
            "function-language",
            "fn-language",
            "lang"
          ],
          "description": "Language of the new Function",
          "name": "language",
          "default": "ts",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "ts",
            "js"
          ],
          "type": "option"
        },
        "javascript": {
          "aliases": [
            "js"
          ],
          "description": "Use JavaScript instead of TypeScript",
          "exclusive": [
            "language"
          ],
          "name": "javascript",
          "allowNo": false,
          "type": "boolean"
        },
        "fn-helpers": {
          "aliases": [
            "function-helpers",
            "helpers"
          ],
          "description": "Add helpers to the new Function",
          "name": "fn-helpers",
          "allowNo": true,
          "type": "boolean"
        },
        "fn-installer": {
          "aliases": [
            "function-installer",
            "installer"
          ],
          "description": "How to install the @sanity/functions helpers",
          "name": "fn-installer",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "skip",
            "npm",
            "pnpm",
            "yarn"
          ],
          "type": "option"
        },
        "install": {
          "char": "i",
          "description": "Shortcut for --fn-installer npm",
          "exclusive": [
            "fn-installer"
          ],
          "name": "install",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:add",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "add.js"
      ]
    },
    "blueprints:config": {
      "aliases": [],
      "args": {},
      "description": "View or edit Blueprint configuration",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --test-config",
        "<%= config.bin %> <%= command.id %> --edit",
        "<%= config.bin %> <%= command.id %> --edit --project-id <projectId>",
        "<%= config.bin %> <%= command.id %> --edit --project-id <projectId> --stack-id <stackId>"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "test-config": {
          "aliases": [
            "test",
            "validate"
          ],
          "char": "t",
          "description": "Validate the configuration",
          "name": "test-config",
          "allowNo": false,
          "type": "boolean"
        },
        "edit": {
          "char": "e",
          "description": "Edit the configuration",
          "name": "edit",
          "allowNo": false,
          "type": "boolean"
        },
        "project-id": {
          "aliases": [
            "project",
            "projectId"
          ],
          "dependsOn": [
            "edit"
          ],
          "description": "Update the Project ID in the configuration. Requires --edit flag",
          "name": "project-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stack-id": {
          "aliases": [
            "stack",
            "stackId"
          ],
          "dependsOn": [
            "edit"
          ],
          "description": "Update the Stack ID in the configuration. Requires --edit flag",
          "name": "stack-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:config",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "config.js"
      ]
    },
    "blueprints:deploy": {
      "aliases": [],
      "args": {},
      "description": "Deploy a Blueprint",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --no-wait"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "no-wait": {
          "description": "Do not wait for deployment to complete",
          "name": "no-wait",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:deploy",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "deploy.js"
      ]
    },
    "blueprints:destroy": {
      "aliases": [],
      "args": {},
      "description": "Destroy a Blueprint deployment (will not delete local files)",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --stack-id <stackId> --project-id <projectId> --force --no-wait"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "aliases": [
            "f"
          ],
          "description": "Force destroy (skip confirmation)",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "project-id": {
          "aliases": [
            "projectId",
            "project"
          ],
          "dependsOn": [
            "stack-id",
            "force"
          ],
          "description": "Project associated with the Stack (defaults to current Project)",
          "name": "project-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stack-id": {
          "aliases": [
            "stackId",
            "stack"
          ],
          "description": "Stack ID to destroy (defaults to current Stack)",
          "name": "stack-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-wait": {
          "description": "Do not wait for destruction to complete",
          "name": "no-wait",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:destroy",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "destroy.js"
      ]
    },
    "blueprints:doctor": {
      "aliases": [],
      "args": {},
      "description": "Diagnose potential issues with Blueprint configuration",
      "examples": [],
      "flags": {
        "verbose": {
          "description": "Provide detailed information about issues",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "path": {
          "description": "Path to the Blueprint configuration file",
          "name": "path",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:doctor",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "doctor.js"
      ]
    },
    "blueprints:info": {
      "aliases": [],
      "args": {},
      "description": "Show information about a Blueprint deployment",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --stack-id <stackId>"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "id": {
          "description": "Stack ID to show info for (defaults to current stack)",
          "name": "id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:info",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "info.js"
      ]
    },
    "blueprints:init": {
      "aliases": [],
      "args": {
        "dir": {
          "description": "Directory to create the Blueprint in",
          "name": "dir"
        }
      },
      "description": "Initialize a new Blueprint",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> [directory]",
        "<%= config.bin %> <%= command.id %> --blueprint-type <json|js|ts>",
        "<%= config.bin %> <%= command.id %> --blueprint-type <json|js|ts> --project-id <projectId> --stack-id <stackId>",
        "<%= config.bin %> <%= command.id %> --blueprint-type <json|js|ts> --stack-name <stackName>"
      ],
      "flags": {
        "dir": {
          "description": "Directory to create the Blueprint in",
          "name": "dir",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "example": {
          "aliases": [
            "recipe"
          ],
          "description": "Example to use for the Blueprint",
          "exclusive": [
            "blueprint-type",
            "stack-id",
            "stack-name"
          ],
          "name": "example",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "blueprint-type": {
          "aliases": [
            "type"
          ],
          "description": "Blueprint manifest type to use for the Blueprint",
          "name": "blueprint-type",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "json",
            "js",
            "ts"
          ],
          "type": "option"
        },
        "project-id": {
          "aliases": [
            "project",
            "projectId"
          ],
          "description": "Sanity Project ID to use for the Blueprint",
          "name": "project-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stack-id": {
          "aliases": [
            "stack",
            "stackId"
          ],
          "dependsOn": [
            "project-id"
          ],
          "description": "Existing Stack ID to use for the Blueprint",
          "exclusive": [
            "stack-name"
          ],
          "name": "stack-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stack-name": {
          "aliases": [
            "name"
          ],
          "description": "Name to use for a NEW Stack",
          "exclusive": [
            "stack-id"
          ],
          "name": "stack-name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:init",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "init.js"
      ]
    },
    "blueprints:logs": {
      "aliases": [],
      "args": {},
      "description": "Display logs for a Blueprint deployment",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --watch"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "watch": {
          "aliases": [
            "follow"
          ],
          "char": "w",
          "description": "Watch for new logs (streaming mode)",
          "name": "watch",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:logs",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "logs.js"
      ]
    },
    "blueprints:plan": {
      "aliases": [],
      "args": {},
      "description": "Enumerate resources to be deployed - will not modify any resources",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:plan",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "plan.js"
      ]
    },
    "blueprints:stacks": {
      "aliases": [],
      "args": {},
      "description": "List all Blueprint stacks",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --project-id <projectId>"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "project-id": {
          "aliases": [
            "projectId",
            "project"
          ],
          "description": "Project ID to show stacks for",
          "name": "project-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "blueprints:stacks",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "blueprints",
        "stacks.js"
      ]
    },
    "functions:dev": {
      "aliases": [],
      "args": {},
      "description": "Start the Sanity Function emulator",
      "examples": [
        "<%= config.bin %> <%= command.id %> --port 8974"
      ],
      "flags": {
        "port": {
          "char": "p",
          "description": "Port to start emulator on",
          "name": "port",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Maximum execution time for all functions, in seconds. Takes precedence over function-specific `timeout`",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:dev",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "dev.js"
      ]
    },
    "functions:logs": {
      "aliases": [],
      "args": {
        "name": {
          "description": "The name of the Sanity Function",
          "name": "name",
          "required": true
        }
      },
      "description": "Retrieve or delete logs for a Sanity Function",
      "examples": [
        "<%= config.bin %> <%= command.id %> <name>",
        "<%= config.bin %> <%= command.id %> <name> --json",
        "<%= config.bin %> <%= command.id %> <name> --limit 100",
        "<%= config.bin %> <%= command.id %> <name> --delete"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "limit": {
          "char": "l",
          "description": "Total number of log entries to retrieve",
          "name": "limit",
          "required": false,
          "default": 50,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "char": "j",
          "description": "Return logs in JSON format",
          "name": "json",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "utc": {
          "char": "u",
          "description": "Show dates in UTC time zone",
          "name": "utc",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "delete": {
          "char": "d",
          "description": "Delete all logs for the function",
          "exclusive": [
            "limit",
            "json"
          ],
          "name": "delete",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "char": "f",
          "dependsOn": [
            "delete"
          ],
          "description": "Skip confirmation for deleting logs",
          "name": "force",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "watch": {
          "aliases": [
            "follow"
          ],
          "char": "w",
          "description": "Watch for new logs (streaming mode)",
          "name": "watch",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:logs",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "logs.js"
      ]
    },
    "functions:test": {
      "aliases": [],
      "args": {
        "name": {
          "description": "The name of the Sanity Function",
          "name": "name",
          "required": true
        }
      },
      "description": "Invoke a local Sanity Function",
      "examples": [
        "<%= config.bin %> <%= command.id %> <name> --data '{ \"id\": 1 }'",
        "<%= config.bin %> <%= command.id %> <name> --file 'payload.json'",
        "<%= config.bin %> <%= command.id %> <name> --data '{ \"id\": 1 }' --timeout 60",
        "<%= config.bin %> <%= command.id %> <name> --event update --data-before '{ \"title\": \"before\" }' --data-after '{ \"title\": \"after\" }'"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "data": {
          "char": "d",
          "description": "Data to send to the function",
          "exclusive": [
            "file",
            "document-id"
          ],
          "name": "data",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "data-before": {
          "description": "Original document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "file-before",
            "file-after",
            "document-id-before",
            "document-id-after"
          ],
          "name": "data-before",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "data-after": {
          "description": "Current document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "file-before",
            "file-after",
            "document-id-before",
            "document-id-after"
          ],
          "name": "data-after",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "event": {
          "char": "e",
          "description": "Type of event (create, update, delete)",
          "name": "event",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "create",
            "update",
            "delete"
          ],
          "type": "option"
        },
        "file": {
          "char": "f",
          "description": "Read data from file and send to the function",
          "exclusive": [
            "data",
            "document-id"
          ],
          "name": "file",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "file-before": {
          "description": "Original document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "data-before",
            "data-after",
            "document-id-before",
            "document-id-after"
          ],
          "name": "file-before",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "file-after": {
          "description": "Current document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "data-before",
            "data-after",
            "document-id-before",
            "document-id-after"
          ],
          "name": "file-after",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "Execution timeout value in seconds",
          "name": "timeout",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "api": {
          "char": "a",
          "description": "Sanity API Version to use",
          "name": "api",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "dataset": {
          "description": "The Sanity dataset to use",
          "name": "dataset",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "project-id": {
          "aliases": [
            "project",
            "projectId"
          ],
          "description": "Sanity Project ID to use",
          "name": "project-id",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "document-id": {
          "aliases": [
            "doc",
            "documentId"
          ],
          "description": "Document to fetch and send to function",
          "exclusive": [
            "data",
            "file"
          ],
          "name": "document-id",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "document-id-before": {
          "description": "Original document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "data-before",
            "data-after",
            "file-before",
            "file-after"
          ],
          "name": "document-id-before",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "document-id-after": {
          "description": "Current document",
          "exclusive": [
            "data",
            "file",
            "document-id",
            "data-before",
            "data-after",
            "file-before",
            "file-after"
          ],
          "name": "document-id-after",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "with-user-token": {
          "description": "Prime access token from CLI config",
          "name": "with-user-token",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:test",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "test.js"
      ]
    },
    "functions:env:add": {
      "aliases": [],
      "args": {
        "name": {
          "description": "The name of the Sanity Function",
          "name": "name",
          "required": true
        },
        "key": {
          "description": "The name of the environment variable",
          "name": "key",
          "required": true
        },
        "value": {
          "description": "The value of the environment variable",
          "name": "value",
          "required": true
        }
      },
      "description": "Add or set the value of an environment variable for a Sanity function",
      "examples": [
        "<%= config.bin %> <%= command.id %> MyFunction API_URL https://api.example.com/"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:env:add",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "env",
        "add.js"
      ]
    },
    "functions:env:list": {
      "aliases": [],
      "args": {
        "name": {
          "description": "The name of the Sanity Function",
          "name": "name",
          "required": true
        }
      },
      "description": "List the environment variables for a Sanity function",
      "examples": [
        "<%= config.bin %> <%= command.id %> MyFunction"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:env:list",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "env",
        "list.js"
      ]
    },
    "functions:env:remove": {
      "aliases": [],
      "args": {
        "name": {
          "description": "The name of the Sanity Function",
          "name": "name",
          "required": true
        },
        "key": {
          "description": "The name of the environment variable",
          "name": "key",
          "required": true
        }
      },
      "description": "Remove an environment variable for a Sanity function",
      "examples": [
        "<%= config.bin %> <%= command.id %> MyFunction API_URL"
      ],
      "flags": {
        "verbose": {
          "description": "Verbose output",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "functions:env:remove",
      "pluginAlias": "@sanity/runtime-cli",
      "pluginName": "@sanity/runtime-cli",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "functions",
        "env",
        "remove.js"
      ]
    }
  },
  "version": "10.11.1"
}