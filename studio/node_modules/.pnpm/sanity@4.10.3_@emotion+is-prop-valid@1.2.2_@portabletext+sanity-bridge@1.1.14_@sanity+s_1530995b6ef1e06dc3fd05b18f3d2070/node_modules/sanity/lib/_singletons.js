"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var _createContext = require("sanity/_createContext"), rxjs = require("rxjs");
const ActiveWorkspaceMatcherContext = _createContext.createContext("sanity/_singletons/context/active-workspace-matcher", null), AddonDatasetContext = _createContext.createContext("sanity/_singletons/context/addon-dataset", null), AppIdCacheContext = _createContext.createContext("sanity/_singletons/context/app-id-cache", null), CalendarContext = _createContext.createContext("sanity/_singletons/context/calendar", void 0), ChangeIndicatorTrackerContextStore = _createContext.createContext("sanity/_singletons/context/change-indicator-tracker-store", null), ChangeIndicatorTrackerContextGetSnapshot = _createContext.createContext("sanity/_singletons/context/change-indicator-tracker-get-snapshot", null), ColorSchemeSetValueContext = _createContext.createContext("sanity/_singletons/context/color-scheme-set-value", null), ColorSchemeValueContext = _createContext.createContext("sanity/_singletons/context/color-scheme-value", null), CommentInputContext = _createContext.createContext("sanity/_singletons/context/comment-input", null), CommentsAuthoringPathContext = _createContext.createContext("sanity/_singletons/context/comments-authoring-path", null), CommentsContext = _createContext.createContext("sanity/_singletons/context/comments", null), CommentsEnabledContext = _createContext.createContext("sanity/_singletons/context/comments-enabled", {
  enabled: !1,
  mode: null
}), CommentsIntentContext = _createContext.createContext("sanity/_singletons/context/comments-intent", void 0), CommentsOnboardingContext = _createContext.createContext("sanity/_singletons/context/comments-onboarding", null), CommentsSelectedPathContext = _createContext.createContext("sanity/_singletons/context/comments-selected-path", null), CommentsUpsellContext = _createContext.createContext("sanity/_singletons/context/comments-upsell", null), CopyPasteContext = _createContext.createContext("sanity/_singletons/context/copy-paste", null), DiffContext = _createContext.createContext("sanity/_singletons/context/diff", {
  path: []
}), DocumentActionPropsContext = _createContext.createContext("sanity/_singletons/context/document-action-props", void 0), DocumentChangeContext = _createContext.createContext("sanity/_singletons/context/document-change", null), DocumentFieldActionsContext = _createContext.createContext("sanity/_singletons/context/document-field-actions", null), DocumentIdContext = _createContext.createContext("sanity/_singletons/context/document-id", null), DocumentLimitUpsellContext = _createContext.createContext("sanity/_singletons/context/document-limit-upsell", null), DocumentPaneContext = _createContext.createContext("sanity/_singletons/context/document-pane", null), DocumentSheetListContext = _createContext.createContext("sanity/_singletons/context/document-sheet-list", void 0), EventsContext = _createContext.createContext("sanity/_singletons/context/events", null), FieldActionsContext = _createContext.createContext("sanity/_singletons/context/field-actions", {
  actions: [],
  focused: !1,
  hovered: !1,
  // eslint-disable-next-line camelcase
  __internal_slot: void 0,
  // eslint-disable-next-line camelcase
  __internal_comments: void 0,
  onMouseEnter: () => {
  },
  onMouseLeave: () => {
  }
}), FormBuilderContext = _createContext.createContext("sanity/_singletons/context/form-builder", null), FormCallbacksContext = _createContext.createContext("sanity/_singletons/context/form-callbacks", null), FormFieldPresenceContext = _createContext.createContext("sanity/_singletons/context/form-field-presence", []), FormValueContext = _createContext.createContext("sanity/_singletons/context/form-value", null), FreeTrialContext = _createContext.createContext("sanity/_singletons/context/free-trial", void 0), GetFormValueContext = _createContext.createContext("sanity/_singletons/context/get-form-value", null), HoveredFieldContext = _createContext.createContext("sanity/_singletons/context/hovered-field", {
  store: {
    subscribe: () => () => {
    },
    getSnapshot: () => []
  },
  onMouseEnter: () => {
  },
  onMouseLeave: () => {
  }
}), IsLastPaneContext = _createContext.createContext("sanity/_singletons/context/is-last-pane", !1), LocaleContext = _createContext.createContext("sanity/_singletons/context/locale", void 0), MediaLibraryIdsContext = _createContext.createContext("sanity/_singletons/context/media-library", null), MentionUserContext = _createContext.createContext("sanity/_singletons/context/mention-user", null), NavbarContext = _createContext.createContext("sanity/_singletons/context/navbar", {
  onSearchFullscreenOpenChange: () => "",
  onSearchOpenChange: () => "",
  searchFullscreenOpen: !1,
  searchFullscreenPortalEl: null,
  searchOpen: !1
}), PackageVersionInfoContext = _createContext.createContext("sanity/_singletons/context/package-version-info", {
  isAutoUpdating: !1,
  checkForUpdates: () => {
  },
  get currentVersion() {
    throw new Error("PackageVersionInfoContext not provided");
  },
  versionCheckStatus: {
    lastCheckedAt: null,
    checking: !1
  }
}), PaneContext = _createContext.createContext("sanity/_singletons/context/pane", null), PaneLayoutContext = _createContext.createContext("sanity/_singletons/context/pane-layout", null);
function missingContext() {
  throw new Error("Pane is missing router context");
}
const PaneRouterContext = _createContext.createContext("sanity/_singletons/context/pane-router", {
  index: 0,
  groupIndex: 0,
  siblingIndex: 0,
  payload: void 0,
  params: {},
  hasGroupSiblings: !1,
  groupLength: 0,
  routerPanesState: [],
  BackLink: () => missingContext(),
  ChildLink: () => missingContext(),
  ReferenceChildLink: () => missingContext(),
  handleEditReference: () => missingContext(),
  ParameterizedLink: () => missingContext(),
  replaceCurrent: () => missingContext(),
  closeCurrentAndAfter: () => missingContext(),
  closeCurrent: () => missingContext(),
  duplicateCurrent: () => missingContext(),
  setView: () => missingContext(),
  setParams: () => missingContext(),
  setPayload: () => missingContext(),
  navigateIntent: () => missingContext(),
  createPathWithParams: () => missingContext()
}), PerspectiveContext = _createContext.createContext("sanity/_singletons/context/perspective-context", null), PortableTextMarkersContext = _createContext.createContext("sanity/_singletons/context/portable-text-markers", []), PortableTextMemberItemElementRefsContext = _createContext.createContext("sanity/_singletons/context/portable-text-member-item-element-refs", new rxjs.BehaviorSubject({})), PortableTextMemberItemsContext = _createContext.createContext("sanity/_singletons/context/portable-text-member-items", []), PresenceContext = _createContext.createContext("sanity/_singletons/context/presence", []), PresenceTrackerContextStore = _createContext.createContext("sanity/_singletons/context/presence-tracker-store", null), PresenceTrackerContextGetSnapshot = _createContext.createContext("sanity/_singletons/context/presence-tracker-get-snapshot", null), PresentationContext = _createContext.createContext("sanity/_singletons/context/presentation", null), PresentationDisplayedDocumentContext = _createContext.createContext("sanity/_singletons/context/presentation/displayed-document", null), PresentationDocumentContext = _createContext.createContext("sanity/_singletons/context/presentation/document", null), PresentationNavigateContext = _createContext.createContext("sanity/_singletons/context/presentation/navigate", null), PresentationPanelsContext = _createContext.createContext("sanity/_singletons/context/presentation/panels", null), PresentationParamsContext = _createContext.createContext("sanity/_singletons/context/presentation/params", null), PresentationSharedStateContext = _createContext.createContext("sanity/_singletons/context/presentation/shared-state", null), PreviewCardContext = _createContext.createContext("sanity/_singletons/context/preview-card", {
  selected: !1
}), RawPerspectiveContext = _createContext.createContext("sanity/_singletons/context/RawPerspectiveContext", null), ReferenceInputOptionsContext = _createContext.createContext("sanity/_singletons/context/reference-input-options", {}), ReferenceItemRefContext = _createContext.createContext("sanity/_singletons/context/reference-item-ref", null), ReleasesMetadataContext = _createContext.createContext("sanity/_singletons/context/releases-metadata", null), TableContext = _createContext.createContext("sanity/_singletons/context/releases-table", null), ReleasesUpsellContext = _createContext.createContext("sanity/_singletons/context/releases-upsell", null), ResourceCacheContext = _createContext.createContext("sanity/_singletons/context/resource-cache", null), ReviewChangesContext = _createContext.createContext("sanity/_singletons/context/review-changes", {
  onOpenReviewChanges: () => {
  },
  onSetFocus: () => {
  },
  isReviewChangesOpen: !1,
  isInteractive: !0
}), RouterContext = _createContext.createContext("sanity/_singletons/context/router", null), RouterHistoryContext = _createContext.createContext("sanity/_singletons/context/router-history", null), SanityCreateConfigContext = _createContext.createContext("sanity/_singletons/context/start-in-create-enabled", {
  startInCreateEnabled: !1
}), DEFAULT = {
  enabled: !1,
  mode: null,
  hasUsedScheduledPublishing: {
    used: !1,
    loading: !1
  }
}, ScheduledPublishingEnabledContext = _createContext.createContext("sanity/_singletons/context/scheduled-publishing-enabled", DEFAULT), SchedulePublishUpsellContext = _createContext.createContext("sanity/_singletons/context/schedule-publish-upsell", {
  upsellData: null,
  handleOpenDialog: () => null,
  upsellDialogOpen: !1,
  telemetryLogs: {
    dialogSecondaryClicked: () => null,
    dialogPrimaryClicked: () => null,
    panelViewed: () => null,
    panelDismissed: () => null,
    panelPrimaryClicked: () => null,
    panelSecondaryClicked: () => null
  }
}), ScrollContext = _createContext.createContext("sanity/_singletons/context/scroll", null), SearchContext = _createContext.createContext("sanity/_singletons/context/search", void 0), SortableItemIdContext = _createContext.createContext("sanity/_singletons/context/sortable-item-id", null), SourceContext = _createContext.createContext("sanity/_singletons/context/source", null), StructureToolContext = _createContext.createContext("sanity/_singletons/context/structure-tool", null), StudioAnnouncementContext = _createContext.createContext("sanity/_singletons/context/studioAnnouncements", void 0), TasksContext = _createContext.createContext("sanity/_singletons/context/tasks", null), TasksEnabledContext = _createContext.createContext("sanity/_singletons/context/tasks-enabled", {
  enabled: !1,
  mode: null
}), TasksNavigationContext = _createContext.createContext("sanity/_singletons/context/tasks-navigation", null), TasksUpsellContext = _createContext.createContext("sanity/_singletons/context/tasks-upsell", null), TreeEditingEnabledContext = _createContext.createContext("sanity/_singletons/context/tree-editing-enabled", {
  enabled: !1,
  legacyEditing: !1
}), UserColorManagerContext = _createContext.createContext("sanity/_singletons/context/user-color-manager", null), ValidationContext = _createContext.createContext("sanity/_singletons/context/validation", []), VirtualizerScrollInstanceContext = _createContext.createContext("sanity/_singletons/context/virtualizer-scroll-instance", null), WorkspaceContext = _createContext.createContext("sanity/_singletons/context/workspace", null), WorkspacesContext = _createContext.createContext("sanity/_singletons/context/workspaces", null), zIndexContextDefaults = {
  navbar: 200,
  navbarPopover: 5e5,
  navbarDialog: 500001,
  // pane
  pane: 100,
  paneHeader: [110, 15e3],
  paneFooter: [120, 2e4],
  paneResizer: [130, 25e3],
  paneDialog: [140, 5e3],
  //
  popover: 200,
  modal: 200,
  movingItem: 1e4,
  drawershade: 1e6,
  drawer: 1000001,
  fullscreen: 12e5,
  toast: [100, 11e3],
  // NOT IN USE
  portal: 200,
  dropdown: 200,
  navbarFixed: 1010,
  fullscreenEdit: 1050,
  popoverBackground: 1060,
  tooltip: 200,
  modalBackground: 2e3,
  spinner: 3e3
}, ZIndexContext = _createContext.createContext("sanity/_singletons/context/z-index", zIndexContextDefaults);
exports.ActiveWorkspaceMatcherContext = ActiveWorkspaceMatcherContext;
exports.AddonDatasetContext = AddonDatasetContext;
exports.AppIdCacheContext = AppIdCacheContext;
exports.CalendarContext = CalendarContext;
exports.ChangeIndicatorTrackerContextGetSnapshot = ChangeIndicatorTrackerContextGetSnapshot;
exports.ChangeIndicatorTrackerContextStore = ChangeIndicatorTrackerContextStore;
exports.ColorSchemeSetValueContext = ColorSchemeSetValueContext;
exports.ColorSchemeValueContext = ColorSchemeValueContext;
exports.CommentInputContext = CommentInputContext;
exports.CommentsAuthoringPathContext = CommentsAuthoringPathContext;
exports.CommentsContext = CommentsContext;
exports.CommentsEnabledContext = CommentsEnabledContext;
exports.CommentsIntentContext = CommentsIntentContext;
exports.CommentsOnboardingContext = CommentsOnboardingContext;
exports.CommentsSelectedPathContext = CommentsSelectedPathContext;
exports.CommentsUpsellContext = CommentsUpsellContext;
exports.CopyPasteContext = CopyPasteContext;
exports.DiffContext = DiffContext;
exports.DocumentActionPropsContext = DocumentActionPropsContext;
exports.DocumentChangeContext = DocumentChangeContext;
exports.DocumentFieldActionsContext = DocumentFieldActionsContext;
exports.DocumentIdContext = DocumentIdContext;
exports.DocumentLimitUpsellContext = DocumentLimitUpsellContext;
exports.DocumentPaneContext = DocumentPaneContext;
exports.DocumentSheetListContext = DocumentSheetListContext;
exports.EventsContext = EventsContext;
exports.FieldActionsContext = FieldActionsContext;
exports.FormBuilderContext = FormBuilderContext;
exports.FormCallbacksContext = FormCallbacksContext;
exports.FormFieldPresenceContext = FormFieldPresenceContext;
exports.FormValueContext = FormValueContext;
exports.FreeTrialContext = FreeTrialContext;
exports.GetFormValueContext = GetFormValueContext;
exports.HoveredFieldContext = HoveredFieldContext;
exports.IsLastPaneContext = IsLastPaneContext;
exports.LocaleContext = LocaleContext;
exports.MediaLibraryIdsContext = MediaLibraryIdsContext;
exports.MentionUserContext = MentionUserContext;
exports.NavbarContext = NavbarContext;
exports.PackageVersionInfoContext = PackageVersionInfoContext;
exports.PaneContext = PaneContext;
exports.PaneLayoutContext = PaneLayoutContext;
exports.PaneRouterContext = PaneRouterContext;
exports.PerspectiveContext = PerspectiveContext;
exports.PortableTextMarkersContext = PortableTextMarkersContext;
exports.PortableTextMemberItemElementRefsContext = PortableTextMemberItemElementRefsContext;
exports.PortableTextMemberItemsContext = PortableTextMemberItemsContext;
exports.PresenceContext = PresenceContext;
exports.PresenceTrackerContextGetSnapshot = PresenceTrackerContextGetSnapshot;
exports.PresenceTrackerContextStore = PresenceTrackerContextStore;
exports.PresentationContext = PresentationContext;
exports.PresentationDisplayedDocumentContext = PresentationDisplayedDocumentContext;
exports.PresentationDocumentContext = PresentationDocumentContext;
exports.PresentationNavigateContext = PresentationNavigateContext;
exports.PresentationPanelsContext = PresentationPanelsContext;
exports.PresentationParamsContext = PresentationParamsContext;
exports.PresentationSharedStateContext = PresentationSharedStateContext;
exports.PreviewCardContext = PreviewCardContext;
exports.RawPerspectiveContext = RawPerspectiveContext;
exports.ReferenceInputOptionsContext = ReferenceInputOptionsContext;
exports.ReferenceItemRefContext = ReferenceItemRefContext;
exports.ReleasesMetadataContext = ReleasesMetadataContext;
exports.ReleasesUpsellContext = ReleasesUpsellContext;
exports.ResourceCacheContext = ResourceCacheContext;
exports.ReviewChangesContext = ReviewChangesContext;
exports.RouterContext = RouterContext;
exports.RouterHistoryContext = RouterHistoryContext;
exports.SanityCreateConfigContext = SanityCreateConfigContext;
exports.SchedulePublishUpsellContext = SchedulePublishUpsellContext;
exports.ScheduledPublishingEnabledContext = ScheduledPublishingEnabledContext;
exports.ScrollContext = ScrollContext;
exports.SearchContext = SearchContext;
exports.SortableItemIdContext = SortableItemIdContext;
exports.SourceContext = SourceContext;
exports.StructureToolContext = StructureToolContext;
exports.StudioAnnouncementContext = StudioAnnouncementContext;
exports.TableContext = TableContext;
exports.TasksContext = TasksContext;
exports.TasksEnabledContext = TasksEnabledContext;
exports.TasksNavigationContext = TasksNavigationContext;
exports.TasksUpsellContext = TasksUpsellContext;
exports.TreeEditingEnabledContext = TreeEditingEnabledContext;
exports.UserColorManagerContext = UserColorManagerContext;
exports.ValidationContext = ValidationContext;
exports.VirtualizerScrollInstanceContext = VirtualizerScrollInstanceContext;
exports.WorkspaceContext = WorkspaceContext;
exports.WorkspacesContext = WorkspacesContext;
exports.ZIndexContext = ZIndexContext;
exports.zIndexContextDefaults = zIndexContextDefaults;
//# sourceMappingURL=_singletons.js.map
