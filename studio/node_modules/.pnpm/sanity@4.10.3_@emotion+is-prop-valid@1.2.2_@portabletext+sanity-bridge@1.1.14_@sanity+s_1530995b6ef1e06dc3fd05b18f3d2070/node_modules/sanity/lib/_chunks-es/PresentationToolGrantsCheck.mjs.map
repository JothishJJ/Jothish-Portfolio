{"version":3,"file":"PresentationToolGrantsCheck.mjs","sources":["../../src/presentation/features/PostMessageFeatures.tsx","../../src/presentation/machines/presentation-machine.ts","../../src/presentation/overlays/SharedStateProvider.tsx","../../src/presentation/panels/Panel.tsx","../../src/presentation/util/debounce.ts","../../src/presentation/panels/usePanelsStorage.ts","../../src/presentation/panels/util.ts","../../src/presentation/panels/Panels.tsx","../../src/presentation/components/ErrorCard.tsx","../../src/presentation/paneRouter/ChildLink.tsx","../../src/presentation/paneRouter/ReferenceChildLink.tsx","../../src/presentation/paneRouter/PresentationPaneRouterProvider.tsx","../../src/presentation/editor/DocumentListPane.tsx","../../src/presentation/editor/DocumentPane.tsx","../../src/presentation/editor/DocumentPanel.tsx","../../src/presentation/editor/usePreviewState.ts","../../src/presentation/editor/ContentEditor.tsx","../../src/presentation/panels/usePanelId.ts","../../src/presentation/panels/PanelResizer.tsx","../../src/presentation/PresentationContent.tsx","../../src/presentation/PresentationNavigateProvider.tsx","../../src/presentation/useLocalState.ts","../../src/presentation/PresentationNavigator.tsx","../../src/presentation/PresentationParamsProvider.tsx","../../src/presentation/PresentationProvider.tsx","../../src/presentation/useAllowPatterns.ts","../../src/presentation/util/encodeStudioPerspective.ts","../../src/presentation/useId.ts","../../src/presentation/preview/IFrame.tsx","../../src/presentation/preview/OpenPreviewButton.tsx","../../src/presentation/useTargetOrigin.ts","../../src/presentation/preview/PreviewLocationInput.tsx","../../src/presentation/preview/SharePreviewMenu.tsx","../../src/presentation/preview/PreviewHeader.tsx","../../src/presentation/preview/Preview.tsx","../../src/presentation/util/warnOnce.ts","../../src/presentation/useDocumentsOnPage.ts","../../src/presentation/useMainDocument.ts","../../src/presentation/util/parse.ts","../../src/presentation/useParams.ts","../../src/presentation/usePopups.ts","../../src/presentation/usePresentationPerspective.ts","../../src/presentation/useStatus.ts","../../src/presentation/PresentationTool.tsx","../../src/presentation/actors/create-preview-secret.ts","../../src/presentation/actors/read-shared-secret.ts","../../src/presentation/actors/resolve-allow-patterns.ts","../../src/presentation/actors/resolve-initial-url.ts","../../src/presentation/actors/resolve-preview-mode.ts","../../src/presentation/actors/resolve-preview-mode-url.ts","../../src/presentation/actors/resolve-url-from-preview-search-param.ts","../../src/presentation/machines/preview-url.ts","../../src/presentation/usePreviewUrlActorRef.ts","../../src/presentation/useReportInvalidPreviewSearchParam.tsx","../../src/presentation/useVercelBypassSecret.ts","../../src/presentation/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","import {type ActorRefFrom, assign, setup} from 'xstate'\n\ninterface Context {\n  url: URL | null\n  error: Error | null\n  visualEditingOverlaysEnabled: boolean\n}\n\ntype Event =\n  | {type: 'toggle visual editing overlays'; enabled: boolean}\n  | {type: 'iframe loaded'}\n  | {type: 'iframe refresh'}\n  | {type: 'iframe reload'}\n\nexport const presentationMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    //\n  },\n  actors: {\n    //\n  },\n  guards: {\n    //\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOcwDsAuBDbAlgPaYAEAKkUQDYDEBAZqrgLZinrVG4QDaADAF1EoAA5FYBQiREgAHogAsAJgA0IAJ6IAHAEYAdIoCcJowFY9R-vzPLlAX3vq0GHPmJlKNfVx4FMUPRMrOy+EJACwkgg4pLSmLIKCLoAbIr6Zoop2tqKAMxpJnnF6loIZkbK+uZ5umapKXmK-Cm6js7osFh48RRU1D7c4RC02ERQUNTsAG4EsACuuNSkkFL+UKRE02Co1LgasJGysWsy0UnaZinVyrpGAOx1Rim2efeliPe3hma1Zvy6XT8W4OJwgFxdNy9LwDMKQILMNgcMBMOAACyO0RO8USiAK930LWU-3uiiB9yaKXemkQjW01V+txS-GKqUe7XBnW67hIfW8cJGjER7E4Q0xYgkpwS5zxVMJKWJ-FJ5Mp1LKFn4Pz+DSaLTaYIh3Oh-UGPEg+nQqNgaPWCJCpAF4pikpxMoQKWZ+gp+TSZLy1hSH3deXpNSZLNqVP1HVcPQ8fNhQ3Nor8ATtSMdQmOLo8uPdnu9BUUfoDQY1WrqOuarUcYMwRHC8Gihqh8Zh2biubdAFpAzSEL2OS247yYfodqgiKgO1K8yog7ptATFL9dFljMDrHkh1zW6OTWF1jPXaAkmY1YgKnktfxtC9dPd+Io9DvYzzPAekxBj13T3i7vKirKkqqpBsYVQ1HUFjFs0t6KK+kIjh+-JfvoBAQFMP5nH+CDaMo16KjYyjMvUNh5GWOT6MoLL8A8ygrk0dQIUabafmaEAWiinQ2gEWHSjhjJUYuj73Pcd63noQaNEYFb-Dk2S0cxe7IYm7GcYevFYjm2HyJeeQQb8tFkikVjGNoFGajUt73o+z61vYQA */\n  id: 'Presentation Tool',\n  context: {\n    url: null,\n    error: null,\n    visualEditingOverlaysEnabled: false,\n  },\n\n  on: {\n    'iframe reload': {\n      actions: assign({url: null}),\n      target: '.loading',\n    },\n  },\n\n  states: {\n    error: {\n      description:\n        'Failed to load, either because of a misconfiguration, a network error, or an unexpected error',\n      tags: ['error'],\n    },\n    loading: {\n      on: {\n        'iframe loaded': {\n          target: 'loaded',\n        },\n      },\n      tags: ['busy'],\n    },\n    loaded: {\n      on: {\n        'toggle visual editing overlays': {\n          actions: assign({\n            visualEditingOverlaysEnabled: ({event}) => event.enabled,\n          }),\n        },\n        'iframe refresh': {\n          target: '.refreshing',\n        },\n        'iframe reload': {\n          target: '.reloading',\n        },\n      },\n\n      states: {\n        idle: {},\n        refreshing: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n        reloading: {\n          on: {\n            'iframe loaded': {\n              target: 'idle',\n            },\n          },\n          tags: ['busy'],\n        },\n      },\n      initial: 'idle',\n    },\n  },\n  initial: 'loading',\n})\n\nexport type PresentationMachineRef = ActorRefFrom<typeof presentationMachine>\n","import {type Serializable, type SerializableObject} from '@sanity/presentation-comlink'\nimport {\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\nimport {type VisualEditingConnection} from '../types'\nimport {type PresentationSharedStateContextValue} from './types'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<PresentationSharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return (\n    <PresentationSharedStateContext.Provider value={context}>\n      {children}\n    </PresentationSharedStateContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useContext, useLayoutEffect} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import {useMemo} from 'react'\n\nimport {debounce} from '../util/debounce'\nimport {type PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-eq-null */\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\n// eslint-disable-next-line max-params\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    }\n    delta = delta < 0 ? width - nextWidth : nextWidth - width\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else if (++index >= panels.length) {\n      break\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        // eslint-disable-next-line no-negated-condition\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal -= panel.defaultSize\n      panelsWithoutWidth -= 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {\n  type ElementMap,\n  type InitialDragState,\n  type PanelElement,\n  type PanelsState,\n  type ResizerElement,\n} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      // eslint-disable-next-line no-eq-null\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PresentationPanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PresentationPanelsContext.Provider>\n  )\n}\n","import {Box, Card, type CardProps, Container, Flex, Inline, Stack, Text} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): React.JSX.Element {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {forwardRef} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {type ChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\n\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps & {\n    childType: string\n    searchParams: PresentationSearchParams\n  },\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childType, childPayload, childParameters, searchParams, ...rest} = props\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        id: childId,\n        type: childType,\n        _searchParams: Object.entries({...searchParams, ...childParameters}),\n      }}\n    />\n  )\n})\n","import {forwardRef} from 'react'\nimport {pathToString} from 'sanity'\nimport {type ReferenceChildLinkProps} from 'sanity/structure'\n\nimport {type PresentationSearchParams} from '../types'\nimport {ChildLink} from './ChildLink'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {documentId, documentType, parentRefPath, template, searchParams, ...rest} = props\n\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childType={documentType}\n      childPayload={template?.params}\n      childParameters={{\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n      searchParams={searchParams}\n    />\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {forwardRef, type PropsWithChildren, useCallback, useMemo} from 'react'\nimport {getPublishedId, useUnique} from 'sanity'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  type BackLinkProps,\n  type ChildLinkProps,\n  PaneRouterContext,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport {\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParamsContextValue> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport type PresentationPaneRouterProviderProps = PropsWithChildren<{\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs?: {_id: string; _type: string}[]\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}>\n\nexport function PresentationPaneRouterProvider(\n  props: PresentationPaneRouterProviderProps,\n): React.JSX.Element {\n  const {children, onEditReference, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // oxlint-disable-next-line no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: forwardRef<HTMLAnchorElement, ChildLinkProps>(\n        function ContextChildLink(childLinkProps, ref) {\n          const {childId, ...rest} = childLinkProps\n          const doc = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n\n          if (!doc) {\n            console.warn(`ChildLink: No document found for childId \"${childId}\"`)\n            return null\n          }\n\n          return (\n            <ChildLink\n              {...rest}\n              ref={ref}\n              childId={childId}\n              childType={doc._type}\n              searchParams={searchParams}\n            />\n          )\n        },\n      ),\n      BackLink: forwardRef<HTMLAnchorElement, BackLinkProps>(\n        function ContextBackLink(backLinkProps, ref) {\n          return <BackLink {...backLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ReferenceChildLink: forwardRef<HTMLAnchorElement, ReferenceChildLinkProps>(\n        function ContextReferenceChildLink(childLinkProps, ref) {\n          return <ReferenceChildLink {...childLinkProps} ref={ref} searchParams={searchParams} />\n        },\n      ),\n      ParameterizedLink: () => {\n        throw new Error('ParameterizedLink not implemented')\n      },\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        const {id, template, type, parentRefPath, version} = options\n        onEditReference({\n          state: {id, type},\n          params: {\n            template: template.id,\n            parentRefPath: pathToString(parentRefPath),\n            version,\n          },\n        })\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: onStructureParams,\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [\n    createPathWithParams,\n    onEditReference,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  ])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, Flex, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, useTranslation} from 'sanity'\nimport {\n  DocumentListPane as StructureDocumentListPane,\n  PaneLayout,\n  type PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): React.JSX.Element {\n  const {mainDocumentState, onEditReference, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => getPublishedId(r._id)),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onEditReference={onEditReference}\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {Card, Code, Label, Stack} from '@sanity/ui'\nimport {type ErrorInfo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type Path, useTranslation} from 'sanity'\nimport {decodeJsonParams} from 'sanity/router'\nimport {\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n  PaneLayout,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {ErrorBoundary} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {PresentationPaneRouterProvider} from '../paneRouter/PresentationPaneRouterProvider'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onEditReference: PresentationNavigate\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const handleFocusPath = useCallback(\n    (path: Path) => {\n      return onFocusPath({\n        id: documentId,\n        type: documentType,\n        path: studioPath.toString(path),\n      })\n    },\n    [documentId, documentType, onFocusPath],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onEditReference={onEditReference}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={handleFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {StructureToolProvider} from '../../structure/StructureToolProvider'\nimport {\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    onFocusPath,\n    onEditReference,\n    onStructureParams,\n    searchParams,\n    structureParams,\n  } = props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  type PreviewValue,\n  type SanityDocument,\n  useDocumentPreviewStore,\n  usePerspective,\n} from 'sanity'\n\ninterface PreviewState {\n  isLoading?: boolean\n  snapshot?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n  const {perspectiveStack} = usePerspective()\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      perspectiveStack,\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId, perspectiveStack])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, useCallback, useMemo} from 'react'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): React.JSX.Element {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          snapshot: previewState.snapshot,\n          fallback: mainDocumentState!.document,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // oxlint-disable-next-line no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport {PresentationPanelsContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PresentationPanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport {type CommentIntentGetter, CommentsIntentProvider, type SanityDocument} from 'sanity'\n\nimport {ContentEditor} from './editor/ContentEditor'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {\n  type MainDocumentState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParamsContextValue['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParamsContextValue['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onEditReference: PresentationNavigate\n  onFocusPath: (state: Required<PresentationStateParams>) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onEditReference,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onEditReference={onEditReference}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useCallback} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {\n  type CombinedSearchParams,\n  type PresentationNavigate,\n  type PresentationNavigateContextValue,\n  type PresentationNavigateOptions,\n  type PresentationStateParams,\n} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document) => {\n      if (preview || document) {\n        const obj: {\n          state?: PresentationStateParams\n          params?: CombinedSearchParams\n        } = {}\n        if (preview) obj.params = {preview}\n        if (document) obj.state = document\n        // Cast because navigate expects either params or state to be defined, which we guarantee above\n        _navigate(obj as PresentationNavigateOptions)\n      }\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {type Dispatch, type SetStateAction, useEffect, useState} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\n\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport {type NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => React.JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  // eslint-disable-next-line no-eq-null\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParamsContextValue\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParamsContextValue>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {type FunctionComponent, type PropsWithChildren, useMemo} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {\n  type PresentationContextValue,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParamsContextValue\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useAllowPatterns(previewUrlRef: PreviewUrlRef) {\n  const allowPatterns = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  if (!Array.isArray(allowPatterns)) {\n    throw new TypeError('allowPatterns must be an array')\n  }\n  return allowPatterns\n}\n","/**\n * When encoding the current studio perspective it's necessary to deal with it sometimes being an array, in a consistent way.\n */\nexport function encodeStudioPerspective(studioPerspective: string[] | string): string {\n  return Array.isArray(studioPerspective) ? studioPerspective.join(',') : studioPerspective\n}\n","import {useId as useReactId} from 'react'\n\nexport function useId(): string {\n  const id = useReactId()\n  // Uses the new format introduced in: https://github.com/facebook/react/pull/32001\n  return id.startsWith(':') ? id.replace(/^:(.+):$/, '\\u00AB$1\\u00BB') : id\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler, useEffect, useImperativeHandle, useRef} from 'react'\nimport {createGlobalStyle, styled} from 'styled-components'\n\nimport {useId} from '../useId'\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(\n  function IFrame(props, forwardedRef) {\n    const {animate, initial, onLoad, preventClick, src, variants, style} = props\n\n    const ref = useRef<HTMLIFrameElement | null>(null)\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n\n    useEffect(() => {\n      if (!ref.current) {\n        return undefined\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const viewTransitionName = useId()\n\n    return (\n      <>\n        <IFrameElement\n          style={{\n            ...style,\n            viewTransitionName,\n          }}\n          animate={animate}\n          initial={initial}\n          onLoad={onLoad}\n          ref={ref}\n          src={src}\n          variants={variants}\n        />\n        {preventClick && <IFrameOverlay />}\n        <GlobalViewTransition />\n      </>\n    )\n  },\n)\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\nconst GlobalViewTransition = createGlobalStyle`\nhtml:active-view-transition-type(sanity-iframe-viewport) {\n  view-transition-name: none;\n  &::view-transition {\n    pointer-events: none;\n  }\n  /* &::view-transition-old(root) {\n    display: none;\n  }\n  &::view-transition-new(root) {\n    animation: none;\n  } */\n}\n`\n","import {LaunchIcon} from '@sanity/icons'\nimport {urlSearchParamPreviewPerspective} from '@sanity/preview-url-secret/constants'\nimport {Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationPerspective} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin?: string\n    previewLocationRoute: string\n    perspective: PresentationPerspective\n    targetOrigin: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute, perspective, targetOrigin} = props\n\n  const openPreviewLink = useMemo(() => {\n    const url = new URL(previewLocationRoute, previewLocationOrigin || targetOrigin)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    const {pathname, search} = url\n\n    return `${previewLocationOrigin}${pathname}${search}`\n  }, [perspective, previewLocationOrigin, previewLocationRoute, targetOrigin])\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        href={openPreviewLink}\n        rel=\"opener\"\n        target=\"_blank\"\n        tooltipProps={null}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n      />\n    </Tooltip>\n  )\n}\n","import {useSelector} from '@xstate/react'\n\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useTargetOrigin(previewUrlRef: PreviewUrlRef): string {\n  const targetOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  if (!targetOrigin) {\n    throw new TypeError('targetOrigin is required')\n  }\n  return targetOrigin\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  type ChangeEvent,\n  type KeyboardEvent,\n  type ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {useTargetOrigin} from '../useTargetOrigin'\n\nexport function PreviewLocationInput(props: {\n  fontSize?: number\n  onChange: (value: string) => void\n  previewUrlRef: PreviewUrlRef\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}): React.JSX.Element {\n  const {fontSize = 1, onChange, padding = 3, prefix, suffix, value, previewUrlRef} = props\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        let absoluteValue = sessionValue\n        try {\n          absoluteValue = new URL(sessionValue, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n\n        if (Array.isArray(allowOrigins)) {\n          if (!allowOrigins.some((pattern) => pattern.test(absoluteValue))) {\n            setCustomValidity(\n              t('preview-location-input.error', {\n                origin: targetOrigin,\n                context: 'origin-not-allowed',\n              }),\n            )\n            event.currentTarget.reportValidity()\n            return\n          }\n          // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        } else if (\n          !targetOrigin &&\n          (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === targetOrigin ? `${targetOrigin}/` : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue)\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [allowOrigins, basePath, onChange, sessionValue, t, targetOrigin],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  const handleClear = useCallback(() => {\n    setCustomValidity(undefined)\n    let nextValue = value\n    try {\n      nextValue = new URL(value, targetOrigin).toString()\n    } catch {\n      // ignore\n    }\n    setSessionValue(nextValue)\n  }, [targetOrigin, value])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [targetOrigin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={handleClear}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? new URL(value, targetOrigin).toString() : sessionValue}\n      />\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-shadow,no-negated-condition */\nimport {type ClientPerspective, type SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Card,\n  Grid,\n  Menu,\n  MenuDivider,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../ui-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {type PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: ClientPerspective\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret\n        ? setSecretSearchParams(\n            initialUrl,\n            secret,\n            previewLocationRoute,\n            encodeStudioPerspective(perspective),\n          )\n        : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        'sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          tooltipProps={null}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {DesktopIcon, MobileDeviceIcon, PanelLeftIcon, RefreshIcon} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {Box, Card, Flex, Hotkeys, Switch, Text} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {type RefObject, useCallback, useMemo} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button, Tooltip} from '../../ui-components'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type HeaderOptions} from '../types'\nimport {useId} from '../useId'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport {type PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\n/** @public */\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement | null>\n  renderDefault: (props: PreviewHeaderProps) => React.JSX.Element\n}\n\nconst PreviewHeaderDefault = (props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    iframeRef,\n    initialUrl,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    presentationRef,\n    perspective,\n    previewUrl,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    previewUrlRef,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      presentationRef.send({type: 'iframe reload'})\n      // Funky way to reload an iframe without CORS issues\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n  const isLoaded = useSelector(presentationRef, (state) => state.matches('loaded'))\n  const isRefreshing = useSelector(presentationRef, (state) =>\n    state.matches({loaded: 'refreshing'}),\n  )\n  const isReloading = useSelector(presentationRef, (state) => state.matches({loaded: 'reloading'}))\n  const overlaysEnabled = useSelector(\n    presentationRef,\n    (state) => state.context.visualEditingOverlaysEnabled,\n  )\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  const perspectiveToggleTooltipId = useId()\n\n  /**\n   * If the preview URL machine is busy it means it's about to change the target origin and reload the iframe,\n   * so we show a spinner\n   */\n  const previewUrlBusy = useSelector(previewUrlRef, (state) => state.hasTag('busy'))\n\n  return (\n    <Flex align=\"center\" gap={1} paddingX={1} style={{width: '100%'}}>\n      {toggleNavigator && (\n        <Button\n          aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n          icon={PanelLeftIcon}\n          mode=\"bleed\"\n          onClick={toggleNavigator}\n          selected={navigatorEnabled}\n          tooltipProps={{\n            content: <Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>,\n            fallbackPlacements: ['bottom-start'],\n            placement: 'bottom',\n          }}\n        />\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          padding={3}\n          marginX={1}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                indeterminate={!isLoaded}\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={isLoading || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1}>\n        <PreviewLocationInput\n          previewUrlRef={previewUrlRef}\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {isLoaded\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {\n                          context: isLoading\n                            ? 'loading'\n                            : isRefreshing\n                              ? 'refreshing'\n                              : isReloading\n                                ? 'reloading'\n                                : 'unknown',\n                        })}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={isReloading || isRefreshing || previewUrlBusy}\n                  onClick={handleRefresh}\n                  tooltipProps={null}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n                perspective={perspective}\n                targetOrigin={targetOrigin}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          ref={(node) => {\n            node?.style.setProperty('view-transition-name', perspectiveToggleTooltipId)\n          }}\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            data-testid=\"preview-viewport-toggle\"\n            data-viewport={viewport}\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            tooltipProps={null}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\n/** @internal */\nexport function PreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): React.JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return <PreviewHeaderDefault {...props} />\n  }, [])\n\n  const HeaderComponent = props.options?.component\n  const header = HeaderComponent ? (\n    <HeaderComponent {...props} renderDefault={renderDefault} />\n  ) : (\n    renderDefault(props)\n  )\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable react/no-unused-prop-types */\nimport {createConnectionMachine, createController} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamPreviewPerspective,\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n  type VercelSetBypassCookieValue,\n} from '@sanity/preview-url-secret/constants'\nimport {\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {Translate, useTranslation} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Button, TooltipDelayGroupProvider} from '../../ui-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {type PresentationMachineRef} from '../machines/presentation-machine'\nimport {type PreviewUrlRef} from '../machines/preview-url'\nimport {\n  type ConnectionStatus,\n  type HeaderOptions,\n  type PresentationPerspective,\n  type PresentationViewport,\n} from '../types'\nimport {useAllowPatterns} from '../useAllowPatterns'\nimport {usePresentationNavigate} from '../usePresentationNavigate'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\nimport {IFrame} from './IFrame'\nimport {PreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\n/** @public */\nexport interface PreviewProps {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  presentationRef: PresentationMachineRef\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n  vercelProtectionBypass: string | null\n  previewUrlRef: PreviewUrlRef\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {\n      header,\n      initialUrl,\n      loadersConnection,\n      overlaysConnection,\n      perspective,\n      viewport,\n      vercelProtectionBypass,\n      presentationRef,\n      previewUrlRef,\n    } = props\n\n    const [stablePerspective, setStablePerspective] = useState<typeof perspective | null>(null)\n    const urlPerspective = encodeStudioPerspective(\n      stablePerspective === null ? perspective : stablePerspective,\n    )\n    const previewUrl = useMemo(() => {\n      const url = new URL(initialUrl)\n      // Always set the perspective that's being used, even if preview mode isn't configured\n      if (!url.searchParams.get(urlSearchParamPreviewPerspective)) {\n        url.searchParams.set(urlSearchParamPreviewPerspective, urlPerspective)\n      }\n\n      if (vercelProtectionBypass || url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        // samesitenone is required since the request is from an iframe\n        url.searchParams.set(\n          urlSearchParamVercelSetBypassCookie,\n          'samesitenone' satisfies VercelSetBypassCookieValue,\n        )\n      }\n      // If there's a vercel protection bypass secret in the context, set it if none exists already\n      if (vercelProtectionBypass && !url.searchParams.get(urlSearchParamVercelProtectionBypass)) {\n        url.searchParams.set(urlSearchParamVercelProtectionBypass, vercelProtectionBypass)\n      }\n\n      return url\n    }, [initialUrl, urlPerspective, vercelProtectionBypass])\n\n    useEffect(() => {\n      /**\n       * If the preview iframe is connected to the loader, we know that switching the perspective can be done without reloading the iframe.\n       */\n      if (loadersConnection === 'connected') {\n        /**\n         * Only set the stable perspective if it hasn't been set yet.\n         */\n        setStablePerspective((prev) => (prev === null ? perspective : prev))\n      }\n    }, [loadersConnection, perspective])\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const previewHeader = <PreviewHeader {...props} iframeRef={ref} options={header} />\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const isLoading = useSelector(\n      presentationRef,\n      (state) => state.matches('loading') || state.matches({loaded: 'reloading'}),\n    )\n\n    const [timedOut, setTimedOut] = useState(false)\n    const isRefreshing = useSelector(presentationRef, (state) =>\n      state.matches({loaded: 'refreshing'}),\n    )\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = isLoading || isRefreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = previewUrl.toString()\n\n      presentationRef.send({type: 'iframe reload'})\n    }, [presentationRef, previewUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (isLoading || isRefreshing) {\n        return undefined\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [overlaysConnection, isLoading, isRefreshing])\n\n    useEffect(() => {\n      if (isLoading || isRefreshing || !showOverlaysConnectionStatus) {\n        return undefined\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return undefined\n    }, [isLoading, overlaysConnection, isRefreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      presentationRef.send({type: 'iframe loaded'})\n    }, [presentationRef])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) && !continueAnyway\n      )\n    }, [continueAnyway, isLoading, isRefreshing, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      // eslint-disable-next-line no-empty-function\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        isLoading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      isLoading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition({\n            update: () => flushSync(() => update()),\n            types: ['sanity-iframe-viewport'],\n          })\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    const toast = useToast()\n    const allowOrigins = useAllowPatterns(previewUrlRef)\n    const [checkOrigin, setCheckOrigin] = useState<false | string>(false)\n    const [reportedMismatches] = useState(new Set<string>())\n    const reportMismatchingOrigin = useEffectEvent((reportedOrigin: string) => {\n      if (allowOrigins.some((allow) => allow.test(reportedOrigin))) {\n        setCheckOrigin(reportedOrigin)\n        return\n      }\n      if (reportedMismatches.has(reportedOrigin)) return\n      reportedMismatches.add(reportedOrigin)\n      console.warn('Visual Editing is here but misconfigured', {reportedOrigin})\n      toast.push({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${reportedOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-frame.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-frame.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              targetOrigin: previewUrl.origin,\n              reportedOrigin,\n            }}\n          />\n        ),\n      })\n    })\n    const navigate = usePresentationNavigate()\n    const navigateEvent = useEffectEvent((url: string) => {\n      if (!checkOrigin) return\n      const nextUrl = new URL(url, checkOrigin)\n      navigate(`${checkOrigin}${nextUrl.pathname}${nextUrl.search}${nextUrl.hash}`)\n    })\n    useEffect(() => {\n      if (!checkOrigin) {\n        return undefined\n      }\n      const target = ref.current?.contentWindow\n      if (!target) {\n        return undefined\n      }\n      const controller = createController({targetOrigin: checkOrigin})\n      controller.addTarget(target)\n      const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n        {\n          name: 'presentation',\n          heartbeat: true,\n          connectTo: 'visual-editing',\n        },\n        createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n          actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n        }),\n      )\n\n      comlink.on('visual-editing/navigate', (data) => {\n        navigateEvent(data.url)\n      })\n      const stop = comlink.start()\n\n      return () => {\n        stop()\n        controller.destroy()\n      }\n    }, [checkOrigin])\n    useEffect(() => {\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const interval = setInterval(() => {\n          ref.current?.contentWindow?.postMessage(\n            {domain: 'sanity/channels', from: 'presentation', type: 'presentation/status'},\n            /**\n             * The targetOrigin is set to '*' intentionally here, as we need to find out if the iframe is misconfigured and has the wrong origin\n             */\n            '*',\n          )\n        }, 1_000)\n\n        const controller = new AbortController()\n        window.addEventListener(\n          'message',\n          ({data}: MessageEvent<unknown>) => {\n            /**\n             * Listen for replies to presentation/status\n             */\n            if (\n              data &&\n              typeof data === 'object' &&\n              'domain' in data &&\n              data.domain === 'sanity/channels' &&\n              'type' in data &&\n              data.type === 'visual-editing/status' &&\n              'data' in data &&\n              typeof data.data === 'object' &&\n              data.data &&\n              'origin' in data.data &&\n              typeof data.data.origin === 'string'\n            ) {\n              reportMismatchingOrigin(data.data.origin)\n            }\n          },\n          {signal: controller.signal},\n        )\n\n        return () => {\n          controller.abort()\n          clearInterval(interval)\n        }\n      }\n      return undefined\n    }, [overlaysConnection, timedOut])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider>\n          {previewHeader}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !isLoading &&\n                !isRefreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (isLoading || (overlaysConnection === 'connecting' && !isRefreshing)) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={previewUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // oxlint-disable-next-line no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import {validateApiPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {type MutableRefObject, useCallback, useMemo, useRef, useState} from 'react'\n\nimport {type FrameState, type PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\n/**\n * @TODO should be refactored to an lru-cache that is keyed by the perspective, which could be an array (if it is, it should use consistent sorting),\n *       and the url path (optionally the origin too), so that swapping between perspectives and urls is fast.\n */\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  validateApiPerspective(perspective)\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (key: string, perspective: PresentationPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import {type ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient, usePerspective} from 'sanity'\nimport {type RouterState, useRouter} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {API_VERSION} from './constants'\nimport {\n  type DocumentResolver,\n  type DocumentResolverContext,\n  type MainDocument,\n  type MainDocumentState,\n  type PresentationNavigate,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let {origin} = url\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n\n        // If we are dealing with an absolute URL, ensure the origins match\n        if (absolute.origin !== origin) continue\n\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`, {cause: e})\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  targetOrigin: string\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, targetOrigin, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const {perspectiveStack} = usePerspective()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.id === navigationHistory.at(-2)?.id) {\n        navigate?.({\n          state: {\n            id: doc?._id,\n            type: doc?._type,\n          },\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const url = new URL(relativeUrl, targetOrigin)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: perspectiveStack,\n            signal: controller.signal,\n            tag: 'use-main-document',\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, perspectiveStack, relativeUrl, resolvers, targetOrigin])\n\n  return mainDocumentState\n}\n","import {studioPath} from '@sanity/client/csm'\nimport {urlStringToPath} from '@sanity/visual-editing-csm'\n\nimport {type PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {type MutableRefObject, useCallback, useLayoutEffect, useMemo, useRef, useState} from 'react'\nimport {getPublishedId} from 'sanity'\nimport {type RouterContextValue, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {\n  type CombinedSearchParams,\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationParamsContextValue,\n  type PresentationSearchParams,\n  type PresentationStateParams,\n  type StructureDocumentPaneParams,\n} from './types'\nimport {parseRouterState} from './util/parse'\n\nfunction pruneObject<T extends RouterState | PresentationParamsContextValue>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\n/**\n * Ensures the array contains all members of the union T.\n */\nconst exhaustiveTupleOf =\n  <T>() =>\n  <U extends T[]>(array: U & ([T] extends [U[number]] ? unknown : 'Invalid') & {0: T}) =>\n    array\n\nconst maintainOnDocumentChange = exhaustiveTupleOf<keyof PresentationSearchParams>()([\n  'perspective',\n  'preview',\n  'viewport',\n])\n\nconst maintainOnSameDocument = exhaustiveTupleOf<keyof StructureDocumentPaneParams>()([\n  'changesInspectorTab',\n  'comment',\n  'inspect',\n  'instruction',\n  'parentRefPath',\n  'path',\n  'pathKey',\n  'rev',\n  'since',\n  'template',\n  'templateParams',\n  'version',\n  'view',\n])\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  isSameDocument: (state: PresentationStateParams) => boolean\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParamsContextValue\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParamsContextValue>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview: routerSearchParams.preview || initialPreviewUrl.toString(),\n      perspective: routerSearchParams.perspective,\n      viewport: routerSearchParams.viewport,\n      inspect: routerSearchParams.inspect,\n      parentRefPath: routerSearchParams.parentRefPath,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      templateParams: routerSearchParams.templateParams,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n      changesInspectorTab: routerSearchParams.changesInspectorTab as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      parentRefPath: params.parentRefPath,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.parentRefPath,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useLayoutEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  // Helper function to check if a given document is the same as the one in the\n  // current router state\n  const isSameDocument = useCallback(({id, type}: PresentationStateParams) => {\n    const {current} = routerStateRef\n    return id === current.id && type === current.type\n  }, [])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (options) => {\n      const {state, params, replace = false} = options\n\n      // Force navigation to use published IDs only\n      if (state?.id) state.id = getPublishedId(state.id)\n\n      // Get the current state and params\n      const {current} = routerStateRef\n      const currentState = {\n        id: current.id,\n        type: current.type,\n        path: current.path,\n      } satisfies PresentationStateParams\n      const currentParams = Object.fromEntries(current._searchParams || []) as CombinedSearchParams\n\n      // If state is provided, replace the current state with the provided\n      // state, otherwise maintain the current state\n      const nextState = state || currentState\n\n      // Different params need to be maintained under different conditions\n      const maintainedParamKeys = [\n        ...maintainOnDocumentChange,\n        ...(isSameDocument(nextState) ? maintainOnSameDocument : []),\n      ] satisfies (keyof CombinedSearchParams)[]\n\n      const maintainedParams = maintainedParamKeys.reduce((acc, key) => {\n        // @ts-expect-error changesInspectorTab union type doesn't play nicely\n        // here, if it were just a string it would be fine\n        acc[key] = currentParams[key]\n        return acc\n      }, {} as Partial<CombinedSearchParams>)\n\n      // If params are provided, merge them with the maintained params\n      const nextParams = {...maintainedParams, ...params}\n\n      const nextRouterState = {\n        ...nextState,\n        _searchParams: Object.entries(nextParams).reduce(\n          (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n          [] as SearchParam[],\n        ),\n      } satisfies RouterState\n\n      setNavigationHistory((prev) => [...prev, nextRouterState])\n      routerNavigate(nextRouterState, {replace})\n    },\n    [isSameDocument, routerNavigate],\n  )\n\n  return {\n    isSameDocument,\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import {type Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\n\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n    return undefined\n  }, [popups])\n\n  return {popups, open}\n}\n","import {usePerspective} from 'sanity'\n\nimport {type PresentationPerspective} from './types'\n\n/**\n * @internal\n */\nexport function usePresentationPerspective(): PresentationPerspective {\n  const {perspectiveStack, selectedPerspectiveName = 'drafts', selectedReleaseId} = usePerspective()\n  const perspective = (\n    selectedReleaseId ? perspectiveStack : selectedPerspectiveName\n  ) as PresentationPerspective\n  return perspective\n}\n","import {type StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\nimport {type ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * returns an array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const memoStatus = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [memoStatus, setStatusFromEvent]\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport {\n  type Controller,\n  createConnectionMachine,\n  createController,\n  type Message,\n} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {\n  urlSearchParamVercelProtectionBypass,\n  urlSearchParamVercelSetBypassCookie,\n} from '@sanity/preview-url-secret/constants'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type CommentIntentGetter,\n  COMMENTS_INSPECTOR_NAME,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {type RouterContextValue, useRouter} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {presentationMachine} from './machines/presentation-machine'\nimport {type PreviewUrlRef} from './machines/preview-url'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  type FrameState,\n  type PresentationNavigate,\n  type PresentationPluginOptions,\n  type PresentationStateParams,\n  type PresentationViewport,\n  type StructureDocumentPaneParams,\n  type VisualEditingConnection,\n} from './types'\nimport {useAllowPatterns} from './useAllowPatterns'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePresentationPerspective} from './usePresentationPerspective'\nimport {useStatus} from './useStatus'\nimport {useTargetOrigin} from './useTargetOrigin'\nimport {debounce} from './util/debounce'\n\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  vercelProtectionBypass: string | null\n  initialPreviewUrl: URL\n  previewUrlRef: PreviewUrlRef\n}): React.JSX.Element {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    tool,\n    vercelProtectionBypass,\n    initialPreviewUrl,\n    previewUrlRef,\n  } = props\n\n  const allowOrigins = useAllowPatterns(previewUrlRef)\n  const targetOrigin = useTargetOrigin(previewUrlRef)\n\n  const components = tool.options?.components\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n  const perspective = usePresentationPerspective()\n\n  const canSharePreviewAccess = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewMode?.shareAccess !== false,\n  )\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {isSameDocument, navigate, navigationHistory, params, searchParams, structureParams} =\n    useParams({\n      initialPreviewUrl,\n      routerNavigate,\n      routerState,\n      routerSearchParams,\n      frameStateRef,\n    })\n\n  const presentationRef = useActorRef(presentationMachine)\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    navigate,\n    navigationHistory,\n    path: params.preview,\n    targetOrigin,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = useSelector(presentationRef, (state) => state.matches('loading'))\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return undefined\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<PresentationNavigate>((options) => {\n    navigate(options)\n  })\n\n  useEffect(() => {\n    if (!controller) return undefined\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        state: {\n          type: data.type,\n          id: data.id,\n          path: data.path,\n        },\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title} = data\n      let url = data.url\n      /**\n       * The URL is relative, we need to resolve it to an absolute URL\n       */\n      if (!url.startsWith('http')) {\n        try {\n          url = new URL(url, targetOrigin).toString()\n        } catch {\n          // ignore\n        }\n      }\n\n      if (frameStateRef.current.url !== url) {\n        try {\n          // Handle bypass params being forwarded to the final URL\n          const [urlWithoutSearch, search] = url.split('?')\n          const searchParams = new URLSearchParams(search)\n          searchParams.delete(urlSearchParamVercelProtectionBypass)\n          searchParams.delete(urlSearchParamVercelSetBypassCookie)\n          handleNavigate({\n            params: {\n              preview: `${urlWithoutSearch}${searchParams.size > 0 ? '?' : ''}${searchParams}`,\n            },\n          })\n        } catch {\n          handleNavigate({params: {preview: url}})\n        }\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      presentationRef.send({type: 'toggle visual editing overlays', enabled: data.enabled})\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // oxlint-disable-next-line no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        presentationRef.send({type: 'iframe refresh'})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      presentationRef.send({type: 'iframe loaded'})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, presentationRef, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return undefined\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // oxlint-disable-next-line no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useMemo(\n    () =>\n      // When moving from one field to another, blur and focus events will trigger\n      // this handler. We debounce to avoid unwanted intermediate navigations this\n      // would cause.\n      debounce<(state: Required<PresentationStateParams>) => void>((state) => {\n        // We only ever want to update the path if we are still viewing the\n        // document that was active when the focus event was triggered\n        if (isSameDocument(state)) {\n          navigate({\n            state,\n            replace: true,\n          })\n        }\n      }, 0),\n    [isSameDocument, navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, targetOrigin)\n      const preview = url.toString()\n      if (params.preview === preview) {\n        return\n      }\n      if (Array.isArray(allowOrigins)) {\n        if (allowOrigins.some((pattern) => pattern.test(preview))) {\n          navigate({params: {preview}})\n        }\n      } else if (url.origin === targetOrigin) {\n        navigate({params: {preview}})\n      }\n    },\n    [targetOrigin, params.preview, allowOrigins, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (params: StructureDocumentPaneParams) => {\n      navigate({params})\n    },\n    [navigate],\n  )\n\n  const handleEditReference = useCallback<PresentationNavigate>(\n    (options) => {\n      navigate(options)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      try {\n        const frameOrigin = new URL(frameStateRef.current.url, targetOrigin).origin\n        const previewOrigin = new URL(params.preview, targetOrigin).origin\n        if (frameOrigin !== previewOrigin) {\n          return\n        }\n      } catch {\n        // ignore\n      }\n\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection === 'connected') {\n        /**\n         * Translate the possibly absolute params url back to a relative URL\n         */\n        let url = params.preview\n        if (url.startsWith('http')) {\n          try {\n            const newUrl = new URL(params.preview, targetOrigin)\n            url = newUrl.pathname + newUrl.search + newUrl.hash\n          } catch {\n            // ignore\n          }\n        }\n        visualEditingComlink?.post('presentation/navigate', {\n          url,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  const refreshRef = useRef<number>(undefined)\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      presentationRef.send({type: 'iframe refresh'})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, presentationRef, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({\n        params: {viewport},\n        replace: true,\n      })\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container data-testid=\"presentation-root\" height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // @TODO move closer to the <iframe> element itself to allow for more precise handling of when to reload the iframe and when to reconnect when the target origin changes\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          header={unstable_header}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          vercelProtectionBypass={vercelProtectionBypass}\n                          presentationRef={presentationRef}\n                          previewUrlRef={previewUrlRef}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onEditReference={handleEditReference}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller && (\n          <LiveQueries\n            controller={controller}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            onDocumentsOnPage={setDocumentsOnPage}\n            onLoadersConnection={setLoadersConnection}\n          />\n        )}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageDocuments comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n      </Suspense>\n    </>\n  )\n}\n\n// @TODO reconcile with core utils\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n\n// @TODO reconcile with core utils\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\n// @TODO reconcile with core utils\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineCreatePreviewSecretActor({\n  client,\n  currentUserId,\n}: {\n  client: SanityClient\n  currentUserId: string | undefined\n}): PromiseActorLogic<{\n  secret: string\n  expiresAt: Date\n}> {\n  return fromPromise(async () => {\n    return await createPreviewSecret(client, 'sanity/presentation', location.href, currentUserId)\n  })\n}\n","import {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\n/** @internal */\nexport function defineReadSharedSecretActor({\n  client,\n}: {\n  client: SanityClient\n}): PromiseActorLogic<string | null> {\n  return fromPromise(async () => {\n    return client.fetch<string | null>(\n      fetchSharedAccessQuery,\n      {},\n      {tag: 'presentation.fallback-to-shared-access-secret'},\n    )\n  })\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PreviewUrlAllowOption, type PreviewUrlAllowOptionContext} from '../types'\n\ninterface Context extends Pick<PreviewUrlAllowOptionContext, 'client'> {\n  allowOption: PreviewUrlAllowOption | undefined\n}\ntype Input = Omit<PreviewUrlAllowOptionContext, 'client' | 'origin'>\n\n/** @internal */\nexport function defineResolveAllowPatternsActor({\n  client,\n  allowOption,\n}: Context): PromiseActorLogic<URLPattern[], Input> {\n  return fromPromise<URLPattern[], Input>(async ({input}) => {\n    const {initialUrl} = input\n\n    /**\n     * Lazy load the URLPattern polyfill on-demand, if needed\n     */\n    if (typeof URLPattern === 'undefined') {\n      await import('urlpattern-polyfill')\n    }\n\n    /**\n     * If no allow option is provided, we use the initial URL to infer the pattern\n     */\n    if (!allowOption) {\n      return [new URLPattern(initialUrl.origin)]\n    }\n\n    const maybePatterns =\n      typeof allowOption === 'function'\n        ? await allowOption({client, origin, initialUrl})\n        : allowOption\n    const patterns = Array.isArray(maybePatterns) ? maybePatterns : [maybePatterns]\n    const urlPatterns = patterns.map((value) => {\n      const urlPattern = new URLPattern(value)\n      if (urlPattern.hostname === '*') {\n        throw new Error(\n          `It's insecure to allow any hostname, it could disclose data to a malicious site`,\n        )\n      }\n      return urlPattern\n    })\n    /**\n     * If the declared patterns don't consider the initial URL valid, we add it to the list of patterns\n     */\n    if (!urlPatterns.some((pattern) => pattern.test(initialUrl.origin))) {\n      return [...urlPatterns, new URLPattern(initialUrl.origin)]\n    }\n\n    return urlPatterns\n  })\n}\n","import {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {type PresentationPerspective, type PreviewUrlOption} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport function defineResolveInitialUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, {previewSearchParam: string | null}> {\n  return fromPromise<URL, {previewSearchParam: string | null}>(\n    async ({input}: {input: {previewSearchParam: string | null}}) => {\n      const {origin} = location\n      /**\n       * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n       */\n      if (typeof previewUrlOption === 'function') {\n        const initial = await previewUrlOption({\n          client,\n          studioBasePath,\n          // @TODO handle checking permissions here, and then generating a secret\n          previewUrlSecret: '',\n          studioPreviewPerspective: encodeStudioPerspective(perspective),\n          previewSearchParam: input.previewSearchParam,\n        })\n        return new URL(initial, origin)\n      }\n\n      /**\n       * Provide backwards compatibility for versions where `previewUrl` where optional\n       */\n      if (!previewUrlOption) {\n        return new URL('/', origin)\n      }\n      /**\n       * Support setting `previewUrl` as a string shorthand\n       */\n      if (typeof previewUrlOption === 'string') {\n        return new URL(previewUrlOption, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'function') {\n        const initial = await previewUrlOption.initial({\n          client,\n          origin,\n        })\n        return new URL(initial, origin)\n      }\n\n      if (typeof previewUrlOption.initial === 'string') {\n        return new URL(previewUrlOption.initial, origin)\n      }\n\n      return new URL(previewUrlOption.preview || '/', previewUrlOption.origin || origin)\n    },\n  )\n}\n","import {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n  type PreviewUrlPreviewModeOptionContext,\n} from '../types'\n\ntype Options = Omit<PreviewUrlPreviewModeOptionContext, 'origin'>\n\ninterface Context extends Pick<Options, 'client'> {\n  previewUrlOption: PreviewUrlOption | undefined\n}\ntype Input = Omit<Options, 'client'>\n\n/** @internal */\nexport function defineResolvePreviewModeActor({\n  client,\n  previewUrlOption,\n}: Context): PromiseActorLogic<PreviewUrlPreviewMode | false, Input> {\n  return fromPromise<PreviewUrlPreviewMode | false, Input>(async ({input}) => {\n    const {targetOrigin} = input\n\n    /**\n     * Handle legacy draftMode options\n     */\n    if (typeof previewUrlOption === 'object' && previewUrlOption?.draftMode) {\n      return {\n        enable: previewUrlOption.draftMode.enable,\n        shareAccess: previewUrlOption.draftMode.shareAccess ?? true,\n      }\n    }\n\n    /**\n     * If no preview mode option is provided, we disable preview mode\n     */\n    if (\n      !previewUrlOption ||\n      typeof previewUrlOption === 'string' ||\n      typeof previewUrlOption === 'function' ||\n      !previewUrlOption.previewMode\n    ) {\n      return false\n    }\n\n    /**\n     * If the option is a function, we resolve it\n     */\n    const previewMode =\n      typeof previewUrlOption.previewMode === 'function'\n        ? await previewUrlOption.previewMode({client, origin, targetOrigin})\n        : previewUrlOption.previewMode\n\n    if (previewMode === false) {\n      return false\n    }\n\n    /**\n     * Return only supported preview mode options, filter out unknowns\n     */\n    return {\n      enable: previewMode.enable,\n      shareAccess: previewMode.shareAccess ?? true,\n    }\n  })\n}\n","import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityClient} from 'sanity'\nimport {fromPromise, type PromiseActorLogic} from 'xstate'\n\nimport {\n  type PresentationPerspective,\n  type PreviewUrlOption,\n  type PreviewUrlPreviewMode,\n} from '../types'\nimport {encodeStudioPerspective} from '../util/encodeStudioPerspective'\n\n/** @internal */\nexport interface ResolvePreviewModeUrlInput {\n  previewUrlSecret: string\n  resolvedPreviewMode: PreviewUrlPreviewMode\n  initialUrl: URL\n}\n\n/** @internal */\nexport function defineResolvePreviewModeUrlActor({\n  client,\n  studioBasePath,\n  previewUrlOption,\n  perspective,\n}: {\n  client: SanityClient\n  studioBasePath: string\n  previewUrlOption: PreviewUrlOption | undefined\n  perspective: PresentationPerspective\n}): PromiseActorLogic<URL, ResolvePreviewModeUrlInput> {\n  return fromPromise<URL, ResolvePreviewModeUrlInput>(async ({input}) => {\n    const {previewUrlSecret, resolvedPreviewMode, initialUrl} = input\n\n    /**\n     * If the previewUrlOption is a function, we need to resolve it and maintain backwards compatibility\n     */\n    if (typeof previewUrlOption === 'function') {\n      const initial = await previewUrlOption({\n        client,\n        studioBasePath,\n        previewUrlSecret,\n        studioPreviewPerspective: encodeStudioPerspective(perspective),\n        previewSearchParam: initialUrl.toString(),\n      })\n      return new URL(initial, initialUrl)\n    }\n\n    /**\n     * If the resolved preview mode is false then we have an unexpected state that shouldn't be possible\n     */\n    if (!resolvedPreviewMode) {\n      throw new Error('Resolved preview mode is false')\n    }\n\n    const url = new URL(resolvedPreviewMode.enable, initialUrl)\n\n    url.searchParams.set(urlSearchParamPreviewSecret, previewUrlSecret)\n    url.searchParams.set(urlSearchParamPreviewPerspective, encodeStudioPerspective(perspective))\n    if (initialUrl.pathname !== url.pathname) {\n      url.searchParams.set(\n        urlSearchParamPreviewPathname,\n        `${initialUrl.pathname}${initialUrl.search}${initialUrl.hash}`,\n      )\n    }\n\n    return url\n  })\n}\n","import {fromPromise} from 'xstate'\n\n/** @internal */\nexport const resolveUrlFromPreviewSearchParamActor = fromPromise<\n  URL,\n  {initialUrl: URL; previewSearchParam: string | null | undefined; allowOrigins: URLPattern[]}\n>(async ({input}) => {\n  const {previewSearchParam, initialUrl, allowOrigins} = input\n\n  /**\n   * If the preview search param is falsy we can skip\n   */\n  if (!previewSearchParam) {\n    return initialUrl\n  }\n\n  /**\n   * Validate the previewSearchParam\n   */\n  try {\n    const previewSearchParamUrl = new URL(previewSearchParam, initialUrl.origin)\n    if (!allowOrigins.some((pattern) => pattern.test(previewSearchParamUrl.origin))) {\n      return initialUrl\n    }\n    return previewSearchParamUrl\n  } catch (err) {\n    return initialUrl\n  }\n})\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {type SanityDocument} from '@sanity/types'\nimport {uuid} from '@sanity/uuid'\nimport {throwError} from 'rxjs'\nimport {type DocumentValuePermission, type PermissionCheckResult} from 'sanity'\nimport {type ActorRefFrom, assign, fromObservable, fromPromise, log, setup} from 'xstate'\n\nimport {type ResolvePreviewModeUrlInput} from '../actors/resolve-preview-mode-url'\nimport {resolveUrlFromPreviewSearchParamActor} from '../actors/resolve-url-from-preview-search-param'\nimport {type PreviewUrlPreviewMode} from '../types'\n\ninterface Context {\n  initialUrl: URL | null\n  previewUrl: URL | null\n  allowOrigins: URLPattern[] | null\n  error: Error | null\n  previewSearchParam: string | null\n  previewUrlSecret: {secret: string; expiresAt: Date} | null\n  previewAccessSharingCreatePermission: PermissionCheckResult | null\n  previewAccessSharingReadPermission: PermissionCheckResult | null\n  previewAccessSharingUpdatePermission: PermissionCheckResult | null\n  previewUrlSecretPermission: PermissionCheckResult | null\n  previewMode: PreviewUrlPreviewMode | null\n}\n\ntype SetPreviewSearchParamEvent = {\n  type: 'set preview search param'\n  previewSearchParam: string | null\n}\ntype Event = SetPreviewSearchParamEvent\n\ntype Input = Omit<SetPreviewSearchParamEvent, 'type'>\n\nexport interface CheckPermissionInput {\n  checkPermissionName: DocumentValuePermission\n  document: Partial<SanityDocument> | null\n}\n\n/**\n * Used for permissions checks\n */\nexport const shareAccessSingletonDocument = {_id: schemaIdSingleton, _type: schemaTypeSingleton}\nexport const previewUrlSecretDocument = {\n  _id: `drafts.${uuid()}`,\n  _type: schemaType,\n}\n\nexport const previewUrlMachine = setup({\n  types: {} as {\n    context: Context\n    events: Event\n    input: Input\n    tags: 'busy' | 'error'\n  },\n  actions: {\n    'notify preview will likely fail': log(\n      `Missing permissions to create preview secret, or read shared preview secret. Preview will likely fail loading.`,\n    ),\n    'assign preview search param': assign({\n      previewSearchParam: (_, params: {previewSearchParam: string | null}) =>\n        params.previewSearchParam,\n    }),\n    'assign error': assign({\n      error: (_, params: {message: string; error: unknown}) => {\n        return params.error instanceof Error\n          ? params.error\n          : new Error(params.message, {cause: params.error})\n      },\n    }),\n  },\n  actors: {\n    'check permission': fromObservable<PermissionCheckResult, CheckPermissionInput>(() =>\n      throwError(\n        () =>\n          new Error(\n            `The 'check permission' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'check permission': fromObservable(({input}: {input: CheckPermissionInput}) => ...)}})`,\n          ),\n      ),\n    ),\n    'resolve initial url': fromPromise<URL, {previewSearchParam: string | null}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve initial url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve initial url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve allow patterns': fromPromise<URLPattern[], {initialUrl: URL}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve allow patterns' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve allow pattern': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve url from preview search param': resolveUrlFromPreviewSearchParamActor,\n    'resolve preview mode': fromPromise<PreviewUrlPreviewMode | false, {targetOrigin: string}>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'create preview secret': fromPromise<{\n      secret: string\n      expiresAt: Date\n    }>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'create preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'create preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'read shared preview secret': fromPromise<string | null>(async () =>\n      Promise.reject(\n        new Error(\n          `The 'read shared preview secret' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'read shared preview secret': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n    'resolve preview mode url': fromPromise<URL, ResolvePreviewModeUrlInput>(() =>\n      Promise.reject(\n        new Error(\n          `The 'resolve preview mode url' actor is not implemented. Add it to previewUrlMachine.provide({actors: {'resolve preview mode url': fromPromise(...)}})`,\n        ),\n      ),\n    ),\n  },\n  guards: {\n    'has checked permissions': ({context}) => {\n      return Boolean(\n        context.previewAccessSharingCreatePermission &&\n          context.previewAccessSharingReadPermission &&\n          context.previewAccessSharingUpdatePermission &&\n          context.previewUrlSecretPermission,\n      )\n    },\n    'search param has new origin': ({context, event}) => {\n      if (!context.previewUrl || !event.previewSearchParam) {\n        return false\n      }\n      try {\n        const previewSearchParamUrl = new URL(event.previewSearchParam, context.previewUrl)\n        return context.previewUrl.origin !== previewSearchParamUrl.origin\n      } catch {\n        return false\n      }\n    },\n    'can create preview secret': ({context}) => {\n      return context.previewUrlSecretPermission?.granted === true\n    },\n\n    'has preview mode with created secret': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewUrlSecretPermission?.granted === true\n    },\n    'has preview mode with share access': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return context.previewAccessSharingReadPermission?.granted === true\n    },\n    'has preview mode without permissions': ({context}, params: PreviewUrlPreviewMode | false) => {\n      if (params === false) {\n        return false\n      }\n      return (\n        context.previewAccessSharingReadPermission?.granted === false &&\n        context.previewUrlSecretPermission?.granted === false\n      )\n    },\n  },\n  delays: {\n    expiredSecret: ({context}) => {\n      if (!context.previewUrlSecret?.expiresAt) {\n        return 0\n      }\n      const now = Date.now()\n      const expiresAt = context.previewUrlSecret.expiresAt.getTime()\n      return Math.max(expiresAt - now, 0)\n    },\n  },\n}).createMachine({\n  // eslint-disable-next-line tsdoc/syntax\n  /** @xstate-layout N4IgpgJg5mDOIC5QAUBOYBuBLMB3ABAKoBKAMgMRiqoD2qAdAA4A2AhgC4BmdAtvWphwESpBFgB2GGgGMOWGuIDaABgC6K1YlCMasLO3nitIAB6IArAA56AZgCcAdkcBGS8vMAmO+YBszgDQgAJ6Izs4+9M7KACzKztGWHg4OPubmAL7pgQLYeERklNR0TGxcvPzoucJkYpIycgqKzupqxjp6BgrGZggAtM520ZHRdjZjNjFe7oEhCGERUbHxicmpGVkgOUL5FFS0DCwc3Kh8W3kitVKynUoeLZpIIO36ht2IvV62Hl7elmE2lh83xmoXCkRicQSSRS5gSmWylW2IkK+xKR3KZ2qogkVwaShs9zauheXUePV6gPo3jSUyi-xBczBi0hKxh5mc8M2iPOBVgYHY+EY3IIfNYqGkAAtBWLWDwNESOq8yaCbM56A4bB5fGllHYvD4fAz4h56CNfG5LKqHMpLdFOZidvRJWBpABrCRQZBUHhYWB6BSwcjyx7PG5vPrs5TqjWqyyjTXRDwMjwxei68J2ZQ2nyWXN2jYOkT0dCwGjMbDiKAASXEL1YzEIqGY5AgCjA9BxNFd7cLZGLcDLFertYM9cbzEu9RuGmD2mJYeVfRGdipyh86Yc0XiE3MDK3JssIwcrmtPjGSXzCMEPNI-dL5Y9NbrDabKOKhzKJwq16xd8Hj5HLAxybSdrkMGdWhDeclVAclN3odlzBsKwBjSSxjwcZM7DVeJ1w8P4xmidk7HtYVHRLf9KwAQWYZgaFwZAOHYKhxEDVtxHbTtu2-KpyIHB9qNo+jGPYZjUFY0C8Qgh450VUlYPedkHHoHwnDSZDVOiGwfGiBlUhXXwwjsQYtKSYzSJ-Pj7yHGi6IYpiWMDPZ31KY5TjIosKIEqBbOEhzxNgSTpzUWcnmg+TTHePV6Hw3MYgzaItJ0hlYRNTNkLiHxBl1GILN4zz+KHccADFaB4TEAGUwDFSVGNQWUWzbDs6m43tby8oqm1KmhyuFKqaolOrZSC8CQsg2SSSMRdel8ZSNUTdlcw8M07AZQZrDXdaDRtUZnHWK98r7DqPRKsrKuq8VBplHg3wOVyMQ8o7CpOrqzr6i7auukbGjGmSwrkqaFL6MJlLiWFlC1EGty0hknAiXVVPMRx12UJwOQLR72ueytMQAWRoCAwEajjmqkVrMb-by8YJsBvqUX6FUm8Nem2+hbWPUZErGTcjS8NUJg8AE9T1ZwHHwvKkSe6yPWpwnic4lqewp46ceFfHCbpmdmkZhcgZmyxzFsDmTPcXUUiNRKDy3ZQJlVLSkYlm9KaHWWifYhWyaVyyCul1Wf3V2nOzAn71DuHWYMivovGsBxPCy74beWaJDWCUJzBSFTrUcQYdMzIFHd-FXPTVmn5dJrsvcOrHfeL-2ac1kKCXDiLyWcNKJiiHM-BtONwgtnMEM1DVNwhhI7B8AurMo2uqgD260U-dzval6fXYbwkoIB5moijLLkm5tvYRBo1nGQtND11ZaIdzEiMeX6vV5LuW+QFIVLNFS7pXquVxv+pnF1FtYP4OY7AG3QohJMqcEDeGUq4NwYQBhLEnkWWAABXaQ0g4CBhfoKMiH9JRf1lKFUMEceiizVPA0+7gtQQy8LzXU6obaJTFtEJwHhXDIL7G-WepccHcO2PgqUjBrrEPCoDSOFI3C2AGHtQ8sIiJJGTILZS7JRaeGSKw7CnDbz8LwAHJ06AOBgHOtIdA7Ay5cUrpLHRT92ymOqsxExZj16iK3gAqI6oaQ6QtE4YylhkynzmkCBGNgNR7VvgdaxTBbEGIccY969jzHOTuuiL8bVol10JrEoxTj+QuN-iQlu7xwjKX1P8bSTC0hGhcKaBIOZAQGkBKE7RGSeFZMMRACqEoxRgCohgrBFjFY8Sibo3A+iOldJ6X0zBfp8l-UKeIshjgqTGTiPYPaGotS7igd8QWtgsp6iQnFOEd8q6tKEOM6qnTunoGmQM5JC83LDKdqMy5rBrlTP6bMoOUkGab3-kDU+ERVEpnsEjDRVSdljBXKeQY3h5gOBaa8mmzt4k-nHIMz2zzfzIvaYVNFVRxxzObosxAfg1Q2jSOERIh5kIBNGKaNZ2lvjhFhEimJHUCVCAxQ8j8Tz0m4vbJyzERKfnBQ3hNXWkdyWeJsCMVhqNsK6mTO4Q2Q9DysLCEhDw7LMntjQV8wMJhYDsCMfQVgnAxIAAowAmEYFgdAnSXRmIAJTkAFTEg1MzYCuIBZHKYKlUiqWwrCMJkDZgDAYceRMfwUisPYZYTIGxxA03gI8NqJLmZ6msKqENcjErqIZL0cethvDGXLew9hiYWnOjdDLb0vp-SsUzdNcwEMEJ7WTohDMfgU4RpTCpUJnhYrHghuEFpRcnyjhfMwFtet2Q2FNOwsWZarBan8TsuMkRvhIzPJGDwmkWnJLnf6g0aZl0mQTURDdsxYiGwwsRIEgwEwTuxj5IS9lRKORPeSJCOF4XgrUZqbZsxwZszcJtbC4RUg2FfTXU6PVzoDSGjwH9ik-gxRGG4NtxkkZblhgyxIhFQG5lSPEODj89VoYjKqGKURkij0zImXSUCwiozZuDLUCQQY6tOVEr1WDqMsxNCkP4RFPBZj+I4I0qoRMODjIlceBzkK6raWAIT7DDZlNPhUuVkKI0pEXbHBISF1yAiIqpi5KL7E5ISWYoTna2b6Qg+DcFN7EAphLdpdOWVoPJ0RXxl5HKrmTNuYahzaQviaQPVERa8mlGeBUnnQyDStSwcCzi4L1kuV4HHNR4DCFdRaVVFSzcZ4VVIVsDEVhZ5QnWlYZZvRKLj3-KlT0FIKjVRZghkCXwqkjQGzVFxvOMisoWYy46QV9ABN+mo3mFZZ427lp032jzVa2bJGtCUtciak1AA */\n  id: 'Preview URL',\n  context: ({input}) => ({\n    initialUrl: null,\n    previewUrl: null,\n    error: null,\n    allowOrigins: null,\n    previewSearchParam: input.previewSearchParam,\n    previewUrlSecret: null,\n    previewAccessSharingCreatePermission: null,\n    previewAccessSharingReadPermission: null,\n    previewAccessSharingUpdatePermission: null,\n    previewUrlSecretPermission: null,\n    previewMode: null,\n  }),\n\n  invoke: [\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'read', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingReadPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingCreatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'update', document: shareAccessSingletonDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewAccessSharingUpdatePermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n    {\n      src: 'check permission',\n      input: () => ({checkPermissionName: 'create', document: previewUrlSecretDocument}),\n      onError: {\n        target: '.error',\n        actions: {\n          type: 'assign error',\n          params: ({event}) => ({\n            message: 'Failed to check permission',\n            error: event.error,\n          }),\n        },\n      },\n      onSnapshot: {\n        actions: assign({\n          previewUrlSecretPermission: ({event}) => event.snapshot.context ?? null,\n        }),\n      },\n    },\n  ],\n\n  on: {\n    'set preview search param': {\n      actions: {\n        type: 'assign preview search param',\n        params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n      },\n    },\n  },\n\n  states: {\n    checkingPermissions: {\n      always: {\n        guard: 'has checked permissions',\n        target: 'resolvingInitialUrl',\n      },\n      tags: 'busy',\n    },\n\n    resolvingInitialUrl: {\n      invoke: {\n        src: 'resolve initial url',\n        input: ({context}) => ({previewSearchParam: context.previewSearchParam}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve initial url',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingAllowPatterns',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n\n      tags: 'busy',\n    },\n\n    error: {\n      type: 'final',\n      tags: 'error',\n    },\n\n    resolvingAllowPatterns: {\n      invoke: {\n        src: 'resolve allow patterns',\n        input: ({context}) => ({initialUrl: context.initialUrl!}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingUrlFromPreviewSearchParam',\n          actions: assign({allowOrigins: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingUrlFromPreviewSearchParam: {\n      id: 'loop',\n      invoke: {\n        src: 'resolve url from preview search param',\n        input: ({context}) => ({\n          initialUrl: context.initialUrl!,\n          allowOrigins: context.allowOrigins!,\n          previewSearchParam: context.previewSearchParam,\n        }),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url from search param',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: {\n          target: 'resolvingPreviewMode',\n          actions: assign({initialUrl: ({event}) => event.output}),\n        },\n      },\n      tags: ['busy'],\n    },\n\n    resolvingPreviewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n      invoke: {\n        src: 'resolve preview mode',\n        input: ({context}) => ({targetOrigin: context.initialUrl!.origin}),\n        onError: {\n          target: 'error',\n          actions: {\n            type: 'assign error',\n            params: ({event}) => ({\n              message: 'Failed to resolve preview url allow patterns',\n              error: event.error,\n            }),\n          },\n        },\n        onDone: [\n          {\n            guard: {\n              type: 'has preview mode with created secret',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.createPreviewSecret',\n          },\n          {\n            guard: {\n              type: 'has preview mode with share access',\n              params: ({event}) => event.output,\n            },\n            actions: assign({\n              previewMode: ({event}) => event.output as unknown as PreviewUrlPreviewMode,\n            }),\n            target: 'previewMode.readShareAccess',\n          },\n          {\n            guard: {\n              type: 'has preview mode without permissions',\n              params: ({event}) => event.output,\n            },\n            actions: [\n              assign({\n                previewUrl: ({context}) => context.initialUrl,\n              }),\n              'notify preview will likely fail',\n            ],\n            target: 'success',\n          },\n          {\n            actions: assign({\n              previewUrl: ({context}) => context.initialUrl,\n            }),\n            target: 'success',\n          },\n        ],\n      },\n      tags: ['busy'],\n    },\n\n    success: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n    },\n\n    previewMode: {\n      on: {\n        'set preview search param': {\n          guard: 'search param has new origin',\n          actions: {\n            type: 'assign preview search param',\n            params: ({event}) => ({previewSearchParam: event.previewSearchParam}),\n          },\n          target: '#loop',\n          reenter: true,\n        },\n      },\n\n      states: {\n        createPreviewSecret: {\n          invoke: {\n            src: 'create preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to create preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({previewUrlSecret: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        readShareAccess: {\n          invoke: {\n            src: 'read shared preview secret',\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to read shared preview secret',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'resolvePreviewUrl',\n              actions: assign({\n                previewUrlSecret: ({event}) => ({\n                  secret: event.output!,\n                  expiresAt: new Date(Date.now() + 1000 * 60 * 60 * 60 * 24),\n                }),\n              }),\n            },\n          },\n          tags: ['busy'],\n        },\n        resolvePreviewUrl: {\n          invoke: {\n            src: 'resolve preview mode url',\n            input: ({context}) => ({\n              initialUrl: context.initialUrl!,\n              resolvedPreviewMode: context.previewMode!,\n              previewUrlSecret: context.previewUrlSecret!.secret,\n            }),\n            onError: {\n              target: 'error',\n              actions: {\n                type: 'assign error',\n                params: ({event}) => ({\n                  message: 'Failed to resolve preview url',\n                  error: event.error,\n                }),\n              },\n            },\n            onDone: {\n              target: 'success',\n              actions: assign({previewUrl: ({event}) => event.output}),\n            },\n          },\n          tags: ['busy'],\n        },\n        error: {\n          type: 'final',\n          tags: ['error'],\n        },\n        success: {\n          after: {\n            expiredSecret: {\n              guard: 'can create preview secret',\n              actions: assign({previewUrlSecret: null}),\n              target: 'createPreviewSecret',\n              reenter: true,\n            },\n          },\n        },\n      },\n      initial: 'readShareAccess',\n    },\n  },\n\n  initial: 'checkingPermissions',\n})\nexport type PreviewUrlRef = ActorRefFrom<typeof previewUrlMachine>\n","import {useToast} from '@sanity/ui'\nimport {useActorRef, useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {useActiveWorkspace, useClient, useCurrentUser, useGrantsStore, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\nimport {fromObservable} from 'xstate'\n\nimport {defineCreatePreviewSecretActor} from './actors/create-preview-secret'\nimport {defineReadSharedSecretActor} from './actors/read-shared-secret'\nimport {defineResolveAllowPatternsActor} from './actors/resolve-allow-patterns'\nimport {defineResolveInitialUrlActor} from './actors/resolve-initial-url'\nimport {defineResolvePreviewModeActor} from './actors/resolve-preview-mode'\nimport {defineResolvePreviewModeUrlActor} from './actors/resolve-preview-mode-url'\nimport {API_VERSION} from './constants'\nimport {presentationLocaleNamespace} from './i18n'\nimport {previewUrlMachine, type PreviewUrlRef} from './machines/preview-url'\nimport {type PreviewUrlAllowOption, type PreviewUrlOption} from './types'\nimport {usePresentationPerspective} from './usePresentationPerspective'\n\nexport function usePreviewUrlActorRef(\n  previewUrlOption: PreviewUrlOption | undefined,\n  allowOption: PreviewUrlAllowOption | undefined,\n): PreviewUrlRef {\n  const grantsStore = useGrantsStore()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const currentUserId = currentUser?.id\n  const workspace = useActiveWorkspace()\n  const studioBasePath = workspace?.activeWorkspace?.basePath || '/'\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n  const {push: pushToast} = useToast()\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const perspective = usePresentationPerspective()\n\n  const actorRef = useActorRef(\n    previewUrlMachine.provide({\n      actions: {\n        'notify preview will likely fail': () =>\n          pushToast({\n            id: 'preview-url-secret.missing-grants',\n            closable: true,\n            status: 'error',\n            duration: Infinity,\n            title: t('preview-url-secret.missing-grants'),\n          }),\n      },\n      actors: {\n        'create preview secret': defineCreatePreviewSecretActor({client, currentUserId}),\n        'read shared preview secret': defineReadSharedSecretActor({client}),\n        'resolve allow patterns': defineResolveAllowPatternsActor({\n          client,\n          allowOption,\n        }),\n        'resolve initial url': defineResolveInitialUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'resolve preview mode': defineResolvePreviewModeActor({\n          client,\n          previewUrlOption,\n        }),\n        'resolve preview mode url': defineResolvePreviewModeUrlActor({\n          client,\n          studioBasePath,\n          previewUrlOption,\n          perspective,\n        }),\n        'check permission': fromObservable(({input}) =>\n          grantsStore.checkDocumentPermission(input.checkPermissionName, input.document),\n        ),\n      },\n    }),\n    {input: {previewSearchParam}},\n  )\n\n  /**\n   * Sync changes to router state for the preview search param\n   */\n  useEffect(() => {\n    actorRef.send({type: 'set preview search param', previewSearchParam})\n  }, [actorRef, previewSearchParam])\n\n  const error = useSelector(actorRef, (state) =>\n    state.status === 'error' ? state.error : state.hasTag('error') ? state.context.error : null,\n  )\n\n  // Propagate the error to the nearest error boundary\n  if (error) throw error\n\n  return actorRef\n}\n","import {useToast} from '@sanity/ui'\nimport {useSelector} from '@xstate/react'\nimport {useEffect} from 'react'\nimport {Translate, useTranslation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {presentationLocaleNamespace} from './i18n'\nimport {type PreviewUrlRef} from './machines/preview-url'\n\nexport function useReportInvalidPreviewSearchParam(previewUrlRef: PreviewUrlRef): void {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const router = useRouter()\n  const routerSearchParams = new URLSearchParams(router.state._searchParams)\n  const previewSearchParam = routerSearchParams.get('preview')\n\n  const allowOrigins = useSelector(previewUrlRef, (state) => state.context.allowOrigins)\n  const currentOrigin = useSelector(previewUrlRef, (state) => state.context.previewUrl?.origin)\n  useEffect(() => {\n    if (!Array.isArray(allowOrigins) || !previewSearchParam || !currentOrigin) return\n    const nextOrigin = new URL(previewSearchParam, currentOrigin).origin\n    if (!allowOrigins.some((pattern) => pattern.test(nextOrigin))) {\n      pushToast({\n        closable: true,\n        id: `presentation-iframe-origin-mismatch-${nextOrigin}`,\n        status: 'error',\n        duration: Infinity,\n        title: t('preview-search-param.configuration.error.title'),\n        description: (\n          <Translate\n            t={t}\n            i18nKey=\"preview-search-param.configuration.error.description\"\n            components={{Code: 'code'}}\n            values={{\n              previewSearchParam,\n              blockedOrigin: nextOrigin,\n            }}\n          />\n        ),\n      })\n    }\n  }, [allowOrigins, currentOrigin, previewSearchParam, pushToast, t])\n}\n","import {subcribeToVercelProtectionBypass} from '@sanity/preview-url-secret/toggle-vercel-protection-bypass'\nimport {useEffect, useReducer, useState} from 'react'\nimport {useClient} from 'sanity'\n\nimport {API_VERSION} from './constants'\n\ntype VercelProtectionBypassReadyState = 'loading' | 'ready'\n\nexport function useVercelBypassSecret(): [\n  vercelProtectionBypassSecret: string | null,\n  vercelProtectionBypassReadyState: VercelProtectionBypassReadyState,\n] {\n  const client = useClient({apiVersion: API_VERSION})\n  const [vercelProtectionBypassReadyState, ready] = useReducer(\n    () => 'ready' as 'ready' | 'loading',\n    'loading',\n  )\n  const [vercelProtectionBypassSecret, setVercelProtectionBypassSecret] = useState<string | null>(\n    null,\n  )\n\n  useEffect(() => {\n    const unsubscribe = subcribeToVercelProtectionBypass(client, (secret) => {\n      setVercelProtectionBypassSecret(secret)\n      ready()\n    })\n    return () => unsubscribe()\n  }, [client])\n\n  return [vercelProtectionBypassSecret, vercelProtectionBypassReadyState]\n}\n","import {useSelector} from '@xstate/react'\nimport {type Tool} from 'sanity'\n\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport {type PresentationPluginOptions} from './types'\nimport {usePreviewUrlActorRef} from './usePreviewUrlActorRef'\nimport {useReportInvalidPreviewSearchParam} from './useReportInvalidPreviewSearchParam'\nimport {useVercelBypassSecret} from './useVercelBypassSecret'\n\nexport default function PresentationToolGrantsCheck({\n  tool,\n}: {\n  tool: Tool<PresentationPluginOptions>\n}): React.JSX.Element {\n  const previewUrlRef = usePreviewUrlActorRef(tool.options?.previewUrl, tool.options?.allowOrigins)\n  useReportInvalidPreviewSearchParam(previewUrlRef)\n\n  const previewAccessSharingCreatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingCreatePermission,\n  )\n  const previewAccessSharingUpdatePermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingUpdatePermission,\n  )\n  const previewAccessSharingReadPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewAccessSharingReadPermission,\n  )\n  const previewUrlSecretPermission = useSelector(\n    previewUrlRef,\n    (state) => state.context.previewUrlSecretPermission,\n  )\n  const url = useSelector(previewUrlRef, (state) => state.context.previewUrl)\n  // @TODO the vercel protection bypass can be moved to the iframe level\n  const [vercelProtectionBypass, vercelProtectionBypassReadyState] = useVercelBypassSecret()\n\n  if (\n    !url ||\n    vercelProtectionBypassReadyState === 'loading' ||\n    !previewAccessSharingCreatePermission ||\n    typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n    !previewAccessSharingUpdatePermission ||\n    typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n    !previewUrlSecretPermission ||\n    !previewAccessSharingReadPermission ||\n    typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n    typeof previewUrlSecretPermission.granted === 'undefined'\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      tool={tool}\n      initialPreviewUrl={url}\n      vercelProtectionBypass={vercelProtectionBypass}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n      previewUrlRef={previewUrlRef}\n    />\n  )\n}\n"],"names":["PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","presentationMachine","setup","types","actions","actors","guards","createMachine","id","context","url","error","visualEditingOverlaysEnabled","assign","target","states","description","tags","loading","loaded","event","enabled","idle","refreshing","reloading","initial","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","PresentationPanelsContext","Error","getPanelStyle","registerElement","unregisterElement","style","type","useLayoutEffect","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","data","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","from","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t7","id_1","prev_0","next_0","delete","t8","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t9","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t10","stopDragging","t11","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t12","t13","storage","t14","t15","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t16","t17","t18","t19","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t20","t21","t22","ErrorCard","message","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","ChildLink","forwardRef","ref","childId","childParameters","childType","rest","searchParams","childPayload","Object","entries","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","params","pathToString","encodeQueryString","parts","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","PresentationPaneRouterProvider","onEditReference","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","doc","find","r","_id","getPublishedId","_type","console","warn","backLinkProps","ref_0","childLinkProps_0","ref_1","options","version","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","closeCurrent","_temp4","duplicateCurrent","_temp5","setView","_temp6","setParams","setPayload","_temp7","navigateIntent","_temp8","intentName","intentParams","options_0","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","studioPath","toString","handleFocusPath","height","StructureDocumentPane","DocumentPanel","StructureToolProvider","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","perspectiveStack","usePerspective","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","snapshot","getPreviewValueWithFallback","fallback","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","useAllowPatterns","previewUrlRef","allowPatterns","useSelector","TypeError","allowOrigins","encodeStudioPerspective","studioPerspective","useId","useReactId","startsWith","replace","IFrame","forwardedRef","animate","onLoad","preventClick","src","variants","useImperativeHandle","instance","handleBlur","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","viewTransitionName","IFrameElement","motion","create","iframe","IFrameOverlay","Box","GlobalViewTransition","createGlobalStyle","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","perspective","targetOrigin","URL","urlSearchParamPreviewPerspective","pathname","search","openPreviewLink","currentTarget","href","handleOpenPopup","LaunchIcon","useTargetOrigin","previewUrl","origin","PreviewLocationInput","fontSize","onChange","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","pattern","test","reportValidity","nextValue","handleKeyDown","nextValue_0","handleClear","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","push","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","displayName","PreviewHeaderDefault","canSharePreviewAccess","iframeRef","onPathChange","onRefresh","overlaysConnection","presentationRef","setViewport","toggleOverlay","viewport","toggleViewportSize","send","handleRefresh","isLoading","isLoaded","isRefreshing","isReloading","overlaysEnabled","previewURL","withoutSecretSearchParams","perspectiveToggleTooltipId","previewUrlBusy","PanelLeftIcon","content","fallbackPlacements","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t23","t24","t25","t26","t27","t28","RefreshIcon","t29","t30","t31","t32","node","setProperty","t33","t34","t35","t36","t37","t38","MobileDeviceIcon","DesktopIcon","t39","t40","t41","t42","PreviewHeader","renderDefault","HeaderComponent","header","minHeight","matches","state_0","state_1","state_2","state_3","state_4","hasTag","MotionFlex","Preview","loadersConnection","vercelProtectionBypass","stablePerspective","setStablePerspective","urlPerspective","urlSearchParamVercelProtectionBypass","urlSearchParamVercelSetBypassCookie","prefersReducedMotion","usePrefersReducedMotion","previewHeader","timedOut","setTimedOut","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","toast","checkOrigin","setCheckOrigin","reportedMismatches","Set","reportMismatchingOrigin","useEffectEvent","reportedOrigin","allow","add","duration","Infinity","usePresentationNavigate","navigateEvent","nextUrl","hash","contentWindow","createController","addTarget","createChannel","heartbeat","connectTo","createConnectionMachine","provide","createCompatibilityActors","stop","start","destroy","interval","setInterval","postMessage","domain","clearInterval","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","active","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","validateApiPerspective","published","setPublished","previewDrafts","setPreviewDrafts","urlRef","perspective_0","documents","setCache","cache","isEqual","setDocumentsOnPage","keyedCache","uniqueDocuments","cache_0","forEach","sourceDocument","_projectId","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","cause","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","urlStringToPath","parseRouterState","pruneObject","exhaustiveTupleOf","array","maintainOnDocumentChange","maintainOnSameDocument","useParams","initialPreviewUrl","routerNavigate","inspect","rev","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","isSameDocument","currentState","currentParams","nextState","nextRouterState","usePopups","popups","setPopups","source","open","unsubs","size","source_0","closed","source_1","source_2","POPUP_CHECK_INTERVAL","unsub","usePresentationPerspective","selectedPerspectiveName","selectedReleaseId","useStatus","statusMap","setStatusMap","handshaking","memoStatus","connection","hasConnected_0","hasConnected","status_1","setStatusFromEvent","status_0","LiveQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","DEFAULT_TOOL_NAME","unstable_header","previewMode","shareAccess","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useActorRef","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","handleNavigate","urlWithoutSearch","URLSearchParams","refreshRef","onStatus","handlePreviewPath","nextPath","handleStructureParams","frameOrigin","previewOrigin","newUrl","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","livePreviewEnabled","workspace","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","IS_MAC","platform","MODIFIERS","alt","ctrl","mod","keys","every","toUpperCase","defineCreatePreviewSecretActor","currentUserId","fromPromise","createPreviewSecret","defineReadSharedSecretActor","defineResolveAllowPatternsActor","allowOption","input","URLPattern","maybePatterns","urlPatterns","urlPattern","defineResolveInitialUrlActor","studioBasePath","previewUrlOption","studioPreviewPerspective","previewSearchParam","defineResolvePreviewModeActor","draftMode","enable","defineResolvePreviewModeUrlActor","resolvedPreviewMode","urlSearchParamPreviewSecret","urlSearchParamPreviewPathname","resolveUrlFromPreviewSearchParamActor","previewSearchParamUrl","shareAccessSingletonDocument","schemaIdSingleton","schemaTypeSingleton","previewUrlSecretDocument","previewUrlMachine","log","_","fromObservable","throwError","Promise","reject","has checked permissions","Boolean","previewAccessSharingCreatePermission","previewAccessSharingReadPermission","previewAccessSharingUpdatePermission","previewUrlSecretPermission","search param has new origin","can create preview secret","granted","has preview mode with created secret","has preview mode with share access","has preview mode without permissions","delays","expiredSecret","expiresAt","now","Date","getTime","invoke","checkPermissionName","onError","onSnapshot","checkingPermissions","always","guard","resolvingInitialUrl","onDone","output","resolvingAllowPatterns","resolvingUrlFromPreviewSearchParam","resolvingPreviewMode","reenter","success","readShareAccess","resolvePreviewUrl","after","usePreviewUrlActorRef","grantsStore","useGrantsStore","router","checkDocumentPermission","actorRef","useReportInvalidPreviewSearchParam","currentOrigin","nextOrigin","blockedOrigin","useVercelBypassSecret","vercelProtectionBypassReadyState","ready","useReducer","vercelProtectionBypassSecret","setVercelProtectionBypassSecret","subcribeToVercelProtectionBypass","PresentationToolGrantsCheck"],"mappings":"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"}