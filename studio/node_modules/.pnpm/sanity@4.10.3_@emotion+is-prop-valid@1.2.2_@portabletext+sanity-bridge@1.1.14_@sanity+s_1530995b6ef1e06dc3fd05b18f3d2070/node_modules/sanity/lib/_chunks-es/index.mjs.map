{"version":3,"file":"index.mjs","sources":["../../src/structure/panes/userComponent/UserComponentPaneContent.tsx","../../src/structure/panes/userComponent/UserComponentPaneHeader.tsx","../../src/structure/panes/userComponent/UserComponentPane.tsx"],"sourcesContent":["import {Box} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePane} from '../../components'\n\ninterface UserComponentPaneContentProps {\n  children: ReactNode\n}\n\nconst Root = styled(Box)`\n  position: relative;\n`\n\nexport function UserComponentPaneContent(props: UserComponentPaneContentProps) {\n  const {children} = props\n  const {collapsed} = usePane()\n\n  return (\n    <Root hidden={collapsed} height=\"fill\" overflow=\"auto\">\n      {children}\n    </Root>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface UserComponentPaneHeaderProps {\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport function UserComponentPaneHeader(props: UserComponentPaneHeaderProps) {\n  const {actionHandlers, index, menuItems, menuItemGroups, title} = props\n  const {features} = useStructureTool()\n\n  if (!menuItems?.length && !title) {\n    return null\n  }\n\n  return (\n    <PaneHeader\n      actions={\n        <PaneHeaderActions\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          actionHandlers={actionHandlers}\n        />\n      }\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      title={title}\n    />\n  )\n}\n","import {isValidElement, useState} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {type StructureToolPaneActionHandler} from '../../types'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {UserComponentPaneContent} from './UserComponentPaneContent'\nimport {UserComponentPaneHeader} from './UserComponentPaneHeader'\n\ntype UserComponentPaneProps = BaseStructureToolPaneProps<'component'>\n\n/**\n * @internal\n */\nexport function UserComponentPane(props: UserComponentPaneProps) {\n  const {index, pane, paneKey, ...restProps} = props\n  const {\n    child,\n    component: UserComponent,\n    menuItems,\n    menuItemGroups,\n    type: _unused,\n    ...restPane\n  } = pane\n  const [ref, setRef] = useState<{\n    actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  } | null>(null)\n  const {title = ''} = useI18nText(pane)\n\n  const {key, ...componentProps} = {...restProps, ...restPane}\n\n  return (\n    <Pane id={paneKey} minWidth={320} selected={restProps.isSelected}>\n      <UserComponentPaneHeader\n        actionHandlers={ref?.actionHandlers}\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <UserComponentPaneContent>\n        {isValidElementType(UserComponent) && (\n          <UserComponent\n            key={key}\n            {...componentProps}\n            // NOTE: here we're utilizing the function form of refs so setting\n            // the ref causes a re-render for `UserComponentPaneHeader`\n            ref={setRef as any}\n            child={child}\n            paneKey={paneKey}\n          />\n        )}\n        {isValidElement(UserComponent) && UserComponent}\n      </UserComponentPaneContent>\n    </Pane>\n  )\n}\n"],"names":["Root","styled","Box","UserComponentPaneContent","props","$","_c","children","collapsed","usePane","t0","UserComponentPaneHeader","actionHandlers","index","menuItems","menuItemGroups","title","features","useStructureTool","length","t1","backButton","BackLink","ArrowLeftIcon","content","t2","UserComponentPane","pane","paneKey","restProps","UserComponent","child","restPane","component","t3","type","_unused","t4","ref","setRef","useState","useI18nText","undefined","componentProps","key","isValidElementType","isValidElement","t5","t6","isSelected"],"mappings":"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"}