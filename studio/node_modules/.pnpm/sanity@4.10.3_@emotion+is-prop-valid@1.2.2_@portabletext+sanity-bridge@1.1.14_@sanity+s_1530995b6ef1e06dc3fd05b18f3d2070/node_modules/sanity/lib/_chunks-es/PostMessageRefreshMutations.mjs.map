{"version":3,"file":"PostMessageRefreshMutations.mjs","sources":["../../src/presentation/editor/PostMessageRefreshMutations.tsx"],"sourcesContent":["import {memo, startTransition, useEffect, useMemo, useState} from 'react'\nimport {getPublishedId, type SanityDocument, useEditState, usePerspective} from 'sanity'\n\nimport {type ConnectionStatus, type VisualEditingConnection} from '../types'\n\nexport interface PostMessageRefreshMutationsProps {\n  id: string\n  type: string\n  comlink: VisualEditingConnection\n  previewKitConnection: ConnectionStatus\n  loadersConnection: ConnectionStatus\n}\n\nfunction PostMessageRefreshMutations(props: PostMessageRefreshMutationsProps): React.ReactNode {\n  const {comlink, type, previewKitConnection, loadersConnection} = props\n  const id = useMemo(() => getPublishedId(props.id), [props.id])\n  const {selectedReleaseId} = usePerspective()\n  const {draft, published, ready, version} = useEditState(id, type, 'low', selectedReleaseId)\n  const livePreviewEnabled =\n    previewKitConnection === 'connected' || loadersConnection === 'connected'\n\n  if ((ready && draft) || published) {\n    return (\n      <PostMessageRefreshMutationsInner\n        key={id}\n        comlink={comlink}\n        draft={draft}\n        livePreviewEnabled={livePreviewEnabled}\n        published={published}\n        version={version}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface PostMessageRefreshMutationsInnerProps\n  extends Pick<PostMessageRefreshMutationsProps, 'comlink'> {\n  livePreviewEnabled: boolean\n  draft: SanityDocument | null\n  published: SanityDocument | null\n  version: SanityDocument | null\n}\nfunction PostMessageRefreshMutationsInner(props: PostMessageRefreshMutationsInnerProps) {\n  const {comlink, draft, published, livePreviewEnabled, version} = props\n  const [prevDraft, setPrevDraft] = useState(draft)\n  const [prevPublished, setPrevPublished] = useState(published)\n  const [prevVersion, setPrevVersion] = useState(version)\n\n  useEffect(() => {\n    if (prevVersion?._rev !== version?._rev) {\n      startTransition(() => setPrevVersion(version))\n      if (version) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(version),\n        })\n      }\n    }\n    if (prevDraft?._rev !== draft?._rev) {\n      startTransition(() => setPrevDraft(draft))\n      if (draft) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(draft),\n        })\n      }\n    }\n    if (prevPublished?._rev !== published?._rev) {\n      startTransition(() => setPrevPublished(published))\n      if (published) {\n        comlink?.post('presentation/refresh', {\n          source: 'mutation',\n          livePreviewEnabled,\n          document: parseDocument(published),\n        })\n      }\n    }\n  }, [\n    comlink,\n    draft,\n    livePreviewEnabled,\n    prevDraft?._rev,\n    prevPublished?._rev,\n    published,\n    prevVersion?._rev,\n    version,\n  ])\n\n  return null\n}\n\nfunction parseDocument(document: SanityDocument & {slug?: {current?: string | null}}): {\n  _id: string\n  _type: string\n  _rev: string\n  slug?: {current?: string | null}\n} {\n  const {_id, _type, _rev, slug} = document\n  return {_id, _type, _rev, slug}\n}\n\nexport default memo(PostMessageRefreshMutations)\n"],"names":["PostMessageRefreshMutations","props","$","_c","comlink","type","previewKitConnection","loadersConnection","t0","id","getPublishedId","selectedReleaseId","usePerspective","draft","published","ready","version","useEditState","livePreviewEnabled","t1","PostMessageRefreshMutationsInner","prevDraft","setPrevDraft","useState","prevPublished","setPrevPublished","prevVersion","setPrevVersion","_rev","startTransition","post","source","document","parseDocument","t2","t3","t4","useEffect","_id","_type","slug","memo"],"mappings":"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"}