{"version":3,"file":"PostMessageTelemetry.mjs","sources":["../../src/presentation/PostMessageTelemetry.tsx"],"sourcesContent":["import {useTelemetry} from '@sanity/telemetry/react'\nimport {type FC, memo, useEffect} from 'react'\n\nimport {type VisualEditingConnection} from './types'\n\nexport interface PostMessageTelemetryProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageTelemetry: FC<PostMessageTelemetryProps> = (props) => {\n  const {comlink} = props\n\n  const telemetry = useTelemetry()\n\n  useEffect(() => {\n    return comlink.on('visual-editing/telemetry-log', (message) => {\n      const {event, data} = message\n\n      // SANITY_STUDIO_DEBUG_TELEMETRY ensures noop/in-browser logging for telemetry events\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      data ? telemetry.log(event, data) : telemetry.log(event)\n    })\n  }, [comlink, telemetry])\n\n  return null\n}\nexport default memo(PostMessageTelemetry)\n"],"names":["PostMessageTelemetry","props","$","_c","comlink","telemetry","useTelemetry","t0","t1","on","message","event","data","log","useEffect","memo"],"mappings":";;;AASA,MAAMA,uBAAsDC,CAAAA,UAAA;AAAA,QAAAC,IAAAC,EAAA,CAAA,GAC1D;AAAA,IAAAC;AAAAA,EAAAA,IAAkBH,OAElBI,YAAkBC,aAAAA;AAAc,MAAAC,IAAAC;AAAA,SAAAN,EAAA,CAAA,MAAAE,WAAAF,SAAAG,aAEtBE,KAAAA,MACDH,QAAOK,GAAI,gCAA8BC,CAAAA,YAAA;AAC9C,UAAA;AAAA,MAAAC;AAAAA,MAAAC;AAAAA,IAAAA,IAAsBF;AAItBE,WAAOP,UAASQ,IAAKF,OAAOC,IAAI,IAAIP,UAASQ,IAAKF,KAAK;AAAA,EAAC,CACzD,GACAH,KAAA,CAACJ,SAASC,SAAS,GAACH,OAAAE,SAAAF,OAAAG,WAAAH,OAAAK,IAAAL,OAAAM,OAAAD,KAAAL,EAAA,CAAA,GAAAM,KAAAN,EAAA,CAAA,IARvBY,UAAUP,IAQPC,EAAoB,GAAC;AAAA;AAI1B,IAAA,yBAAeO,KAAKf,oBAAoB;"}