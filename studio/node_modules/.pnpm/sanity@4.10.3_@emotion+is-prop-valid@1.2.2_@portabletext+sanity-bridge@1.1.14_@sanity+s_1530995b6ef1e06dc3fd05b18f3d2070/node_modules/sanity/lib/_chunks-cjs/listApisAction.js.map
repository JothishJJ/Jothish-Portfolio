{"version":3,"file":"listApisAction.js","sources":["../../src/_internal/cli/actions/graphql/listApisAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {getClientUrl} from '../../util/getClientUrl'\n\ntype ListApisResponse = {\n  projectId: string\n  dataset: string\n  tag: string\n  playgroundEnabled: boolean\n  generation: string\n}[]\n\nexport default async function listGraphQLApis(\n  args: CliCommandArguments<Record<string, unknown>>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, output, chalk} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: true,\n  }).config({apiVersion: '2023-08-01'})\n\n  let endpoints: ListApisResponse | undefined\n  try {\n    endpoints = await client.request<ListApisResponse>({\n      url: '/apis/graphql',\n      method: 'GET',\n    })\n  } catch (err) {\n    throw err\n  }\n\n  if (!endpoints || endpoints.length === 0) {\n    output.print(\"This project doesn't have any GraphQL endpoints deployed.\")\n    return\n  }\n\n  output.print('Here are the GraphQL endpoints deployed for this project:')\n  endpoints.forEach((endpoint, index) => {\n    const {dataset, tag} = endpoint\n    const url = getClientUrl(client, `graphql/${dataset}/${tag}`)\n\n    output.print(`${index + 1}.  ${chalk.bold('Dataset:')}     ${dataset}`)\n    output.print(`    ${chalk.bold('Tag:')}         ${tag}`)\n    output.print(`    ${chalk.bold('Generation:')}  ${endpoint.generation}`)\n    output.print(`    ${chalk.bold('Playground:')}  ${endpoint.playgroundEnabled}`)\n    output.print(`    ${chalk.bold('URL:')}  ${url}\\n`)\n  })\n}\n"],"names":["listGraphQLApis","args","context","apiClient","output","chalk","client","requireUser","requireProject","config","apiVersion","endpoints","request","url","method","err","length","print","forEach","endpoint","index","dataset","tag","getClientUrl","bold","generation","playgroundEnabled"],"mappings":";;AAYA,eAA8BA,gBAC5BC,MACAC,SACe;AACf,QAAM;AAAA,IAACC;AAAAA,IAAWC;AAAAA,IAAQC;AAAAA,EAAAA,IAASH,SAE7BI,SAASH,UAAU;AAAA,IACvBI,aAAa;AAAA,IACbC,gBAAgB;AAAA,EAAA,CACjB,EAAEC,OAAO;AAAA,IAACC,YAAY;AAAA,EAAA,CAAa;AAEpC,MAAIC;AACJ,MAAI;AACFA,gBAAY,MAAML,OAAOM,QAA0B;AAAA,MACjDC,KAAK;AAAA,MACLC,QAAQ;AAAA,IAAA,CACT;AAAA,EACH,SAASC,KAAK;AACZ,UAAMA;AAAAA,EACR;AAEA,MAAI,CAACJ,aAAaA,UAAUK,WAAW,GAAG;AACxCZ,WAAOa,MAAM,2DAA2D;AACxE;AAAA,EACF;AAEAb,SAAOa,MAAM,2DAA2D,GACxEN,UAAUO,QAAQ,CAACC,UAAUC,UAAU;AACrC,UAAM;AAAA,MAACC;AAAAA,MAASC;AAAAA,IAAAA,IAAOH,UACjBN,MAAMU,UAAAA,aAAajB,QAAQ,WAAWe,OAAO,IAAIC,GAAG,EAAE;AAE5DlB,WAAOa,MAAM,GAAGG,QAAQ,CAAC,MAAMf,MAAMmB,KAAK,UAAU,CAAC,QAAQH,OAAO,EAAE,GACtEjB,OAAOa,MAAM,OAAOZ,MAAMmB,KAAK,MAAM,CAAC,YAAYF,GAAG,EAAE,GACvDlB,OAAOa,MAAM,OAAOZ,MAAMmB,KAAK,aAAa,CAAC,KAAKL,SAASM,UAAU,EAAE,GACvErB,OAAOa,MAAM,OAAOZ,MAAMmB,KAAK,aAAa,CAAC,KAAKL,SAASO,iBAAiB,EAAE,GAC9EtB,OAAOa,MAAM,OAAOZ,MAAMmB,KAAK,MAAM,CAAC,KAAKX,GAAG;AAAA,CAAI;AAAA,EACpD,CAAC;AACH;;"}