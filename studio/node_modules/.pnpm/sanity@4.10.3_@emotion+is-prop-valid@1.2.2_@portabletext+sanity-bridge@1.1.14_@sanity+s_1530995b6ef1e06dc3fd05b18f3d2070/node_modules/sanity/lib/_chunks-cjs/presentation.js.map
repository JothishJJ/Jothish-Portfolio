{"version":3,"file":"presentation.js","sources":["../../src/presentation/overlays/useSharedState.ts","../../src/presentation/constants.ts","../../src/presentation/i18n/index.ts","../../src/presentation/useDocumentLocations.ts","../../src/presentation/usePresentationTool.ts","../../src/presentation/document/useCurrentPresentationToolName.ts","../../src/presentation/document/LocationsBanner.tsx","../../src/presentation/document/PresentationDocumentHeader.tsx","../../src/presentation/document/PresentationDocumentProvider.tsx","../../src/presentation/fieldActions/openInStructure.ts","../../src/presentation/getIntentState.ts","../../src/presentation/PresentationSpinner.tsx","../../src/presentation/router.ts","../../src/presentation/plugin.tsx","../../src/presentation/usePresentationNavigate.ts","../../src/presentation/usePresentationParams.ts"],"sourcesContent":["import {type Serializable} from '@sanity/presentation-comlink'\nimport {useContext, useEffect} from 'react'\nimport {PresentationSharedStateContext} from 'sanity/_singletons'\n\n/** @public */\nexport const useSharedState = (key: string, value: Serializable): undefined => {\n  const context = useContext(PresentationSharedStateContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  const {setValue} = context\n\n  useEffect(() => {\n    setValue(key, value)\n  }, [key, value, setValue])\n\n  return undefined\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport {apiVersion} from '@sanity/preview-url-secret/constants'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3_000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = apiVersion\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// How often the list over loader queries should be garbage collected\nexport const LOADER_QUERY_GC_INTERVAL = 30_000 // ms\n\n// The interval at which we check if existing popups have been closed\nexport const POPUP_CHECK_INTERVAL = 1000 // ms\n","import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the presentation tool\n *\n * @public\n */\nexport const presentationLocaleNamespace = 'presentation' as const\n\n/**\n * The default locale bundle for the presentation tool, which is US English.\n *\n * @internal\n */\nexport const presentationUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: presentationLocaleNamespace,\n  resources: () => import('./resources'),\n})\n","import {useEffect, useMemo, useState} from 'react'\nimport {isObservable, map, of} from 'rxjs'\nimport {\n  type ObjectSchemaType,\n  type PreviewableType,\n  useDocumentPreviewStore,\n  useDocumentStore,\n  usePerspective,\n} from 'sanity'\n\nimport {\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type DocumentLocationsState,\n  type DocumentLocationsStatus,\n} from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = {locations: []}\n\nexport function useDocumentLocations(props: {\n  id: string\n  version: string | undefined\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  type: ObjectSchemaType\n}): {\n  state: DocumentLocationsState\n  status: DocumentLocationsStatus\n} {\n  const {id, resolvers, type, version} = props\n  const documentStore = useDocumentStore()\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const {perspectiveStack} = usePerspective()\n  const [locationsState, setLocationsState] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  const resolver = resolvers && (typeof resolvers === 'function' ? resolvers : resolvers[type.name])\n\n  const [locationsStatus, setLocationsStatus] = useState<DocumentLocationsStatus>(\n    resolver ? 'resolving' : 'empty',\n  )\n\n  const result = useMemo(() => {\n    if (!resolver) return undefined\n\n    // Original/advanced resolver which requires explicit use of Observables\n    if (typeof resolver === 'function') {\n      const params = {id, type: type.name, version, perspectiveStack}\n      const context = {documentStore}\n      const _result = resolver(params, context)\n      return isObservable(_result) ? _result : of(_result)\n    }\n\n    // Simplified resolver pattern which abstracts away Observable logic\n    if ('select' in resolver && 'resolve' in resolver) {\n      const doc = {_type: 'reference', _ref: id}\n      // Override the preview selection in the schema type to use the user\n      // defined selection defined by the resolver\n      const _type = {...type, preview: {select: resolver.select}} satisfies PreviewableType\n      const options = {perspective: perspectiveStack}\n      return documentPreviewStore\n        .observeForPreview(doc, _type, options)\n        .pipe(map((preview) => resolver.resolve(preview.snapshot || null)))\n    }\n\n    // Resolver is explicitly provided state\n    return of(resolver)\n  }, [documentStore, documentPreviewStore, id, resolver, type, version, perspectiveStack])\n\n  useEffect(() => {\n    const sub = result?.subscribe((state) => {\n      setLocationsState(state || INITIAL_STATE)\n      setLocationsStatus(state ? 'resolved' : 'empty')\n    })\n\n    return () => sub?.unsubscribe()\n  }, [result])\n\n  return {\n    state: locationsState,\n    status: locationsStatus,\n  }\n}\n","import {useContext} from 'react'\nimport {PresentationContext} from 'sanity/_singletons'\n\nimport {type PresentationContextValue} from './types'\n\nexport function usePresentationTool(throwOnMissingContext?: true): PresentationContextValue\nexport function usePresentationTool(throwOnMissingContext: false): PresentationContextValue | null\nexport function usePresentationTool(throwOnMissingContext = true): PresentationContextValue | null {\n  const presentation = useContext(PresentationContext)\n\n  if (throwOnMissingContext && !presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","import {usePresentationTool} from '../usePresentationTool'\n\nexport function useCurrentPresentationToolName(): string | undefined {\n  return usePresentationTool(false)?.name ?? undefined\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useContext, useState} from 'react'\nimport {type ObjectSchemaType, useTranslation} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useIntentLink} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  type DocumentLocation,\n  type DocumentLocationResolver,\n  type DocumentLocationResolvers,\n  type PresentationPluginOptions,\n} from '../types'\nimport {useDocumentLocations} from '../useDocumentLocations'\nimport {useCurrentPresentationToolName} from './useCurrentPresentationToolName'\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  options: PresentationPluginOptions\n  resolvers?: DocumentLocationResolver | DocumentLocationResolvers\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n  version: string | undefined\n}): ReactNode {\n  const {documentId, options, resolvers, schemaType, showPresentationTitle, version} = props\n\n  const {state, status} = useDocumentLocations({\n    id: documentId,\n    version,\n    resolvers,\n    type: schemaType,\n  })\n\n  const isResolving = status === 'resolving'\n\n  const {locations, message, tone} = state\n  const locationsCount = locations?.length || 0\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const presentation = useContext(PresentationContext)\n  const presentationName = presentation?.name\n  const [expanded, setExpanded] = useState(false)\n  const toggle = useCallback(() => {\n    if (!locationsCount) return\n    setExpanded((v) => !v)\n  }, [locationsCount])\n\n  const title = isResolving\n    ? t('locations-banner.resolving.text')\n    : message || t('locations-banner.locations-count', {count: locationsCount})\n\n  const ToneIcon = tone ? TONE_ICONS[tone] : undefined\n\n  if (!resolvers || status === 'empty') return null\n  return (\n    <Card padding={1} radius={2} border tone={tone}>\n      <div style={{margin: -1}}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && ToneIcon && (\n              <Box flex=\"none\">\n                <Text size={1}>\n                  <ToneIcon />\n                </Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n        {locations && (\n          <>\n            <Card\n              as={locationsCount ? 'button' : undefined}\n              onClick={toggle}\n              padding={3}\n              radius={1}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  {isResolving ? (\n                    <Spinner size={1} />\n                  ) : (\n                    <Text size={1}>\n                      {locationsCount === 0 ? (\n                        <InfoOutlineIcon />\n                      ) : (\n                        <ChevronRightIcon\n                          style={{\n                            transform: `rotate(${expanded ? '90deg' : 0})`,\n                            transition: 'transform 100ms ease-in-out',\n                          }}\n                        />\n                      )}\n                    </Text>\n                  )}\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l) => {\n                let active = false\n                if (\n                  (options.name || DEFAULT_TOOL_NAME) === presentationName &&\n                  presentation?.params.preview\n                ) {\n                  active = areUrlsMatching(presentation.params.preview, l.href)\n                }\n\n                return (\n                  <LocationItem\n                    key={l.href}\n                    active={active}\n                    documentId={documentId}\n                    documentType={schemaType.name}\n                    node={l}\n                    toolName={options.name || DEFAULT_TOOL_NAME}\n                  />\n                )\n              })}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const {documentId, documentType, node, active, toolName} = props\n  const presentation = useContext(PresentationContext)\n  const currentPresentationToolName = useCurrentPresentationToolName()\n  const isCurrentTool = toolName === currentPresentationToolName\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.structureParams,\n      preview: node.href,\n    },\n  })\n\n  const handleCurrentToolClick = useCallback(() => {\n    navigate?.({params: {preview: node.href}})\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      key={node.href}\n      {...(isCurrentTool ? {} : presentationLinkProps)}\n      as=\"a\"\n      onClick={isCurrentTool ? handleCurrentToolClick : presentationLinkProps.onClick}\n      padding={3}\n      radius={1}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n\n/**\n * Compares two URLs to determine if they match based on origin, pathname, and search parameters\n * The previewUrl should have all the search parameters that are in the locationUrl\n */\nfunction areUrlsMatching(previewUrlString: string, locationUrlString: string): boolean {\n  try {\n    const previewUrl = new URL(previewUrlString, location.origin)\n    const locationUrl = new URL(locationUrlString, previewUrl.origin)\n\n    // First compare origin and pathname\n    if (previewUrl.origin !== locationUrl.origin || previewUrl.pathname !== locationUrl.pathname) {\n      return false\n    }\n\n    // Then check search params\n    // All search params in locationUrl must exist with the same values in previewUrl\n    const locationParams = new URLSearchParams(locationUrl.search)\n    const previewParams = new URLSearchParams(previewUrl.search)\n\n    for (const [key, value] of locationParams.entries()) {\n      if (previewParams.get(key) !== value) {\n        return false\n      }\n    }\n\n    return true\n  } catch {\n    // If URL parsing fails, URLs don't match\n    return false\n  }\n}\n","import {rem} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2} from '@sanity/ui/theme'\nimport {type ReactNode, useContext} from 'react'\nimport {type ObjectSchemaType, type PublishedId} from 'sanity'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {css, styled} from 'styled-components'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {LocationsBanner} from './LocationsBanner'\n\nconst LocationStack = styled.div((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    display: flex;\n    flex-direction: column;\n    gap: ${rem(theme.space[2])};\n    min-height: ${rem(42)};\n    margin-bottom: ${rem(theme.space[5])};\n\n    &:empty {\n      display: none;\n    }\n  `\n})\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  version: string | undefined\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const {documentId, options, schemaType, version} = props\n  const context = useContext(PresentationDocumentContext)\n\n  const contextOptions = context?.options || []\n  const resolvers = contextOptions.map((o) => o.resolve?.locations || o.locate)\n  const hasResolvers = resolvers.some(Boolean)\n\n  if ((context && context.options[0] !== options) || !hasResolvers) {\n    return null\n  }\n\n  return (\n    <LocationStack>\n      {contextOptions.map((_options, idx) => (\n        <LocationsBanner\n          // oxlint-disable-next-line no-array-index-key\n          key={idx}\n          documentId={documentId}\n          options={_options}\n          resolvers={resolvers[idx]}\n          schemaType={schemaType}\n          showPresentationTitle={contextOptions.length > 1}\n          version={version}\n        />\n      ))}\n    </LocationStack>\n  )\n}\n","import {type ReactNode, useCallback, useContext, useLayoutEffect, useMemo, useState} from 'react'\nimport {PresentationDocumentContext} from 'sanity/_singletons'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {type PresentationPluginOptions} from '../types'\nimport {type PresentationDocumentContextValue} from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): React.JSX.Element {\n  const {children, options} = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(() => [])\n\n  const register = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const registerEffectEvent = useEffectEvent((options: PresentationPluginOptions) =>\n    register(options),\n  )\n  useLayoutEffect(() => registerEffectEvent(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {useContext, useMemo} from 'react'\nimport {\n  defineDocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type DocumentFieldActionProps,\n  isRecord,\n  pathToString,\n  type Tool,\n  useWorkspace,\n} from 'sanity'\nimport {PresentationContext} from 'sanity/_singletons'\nimport {useRouter} from 'sanity/router'\n\nimport {DEFAULT_TOOL_NAME} from '../constants'\n\nfunction useOpenInStructureAction(\n  props: DocumentFieldActionProps,\n): DocumentFieldActionItem | DocumentFieldActionGroup {\n  const {documentId, documentType, path} = props\n  const workspace = useWorkspace()\n  const {navigateIntent} = useRouter()\n  const presentation = useContext(PresentationContext)\n\n  const defaultStructureTool = useMemo(\n    () =>\n      findStructureTool(\n        workspace.tools,\n        documentId,\n        documentType,\n        presentation?.name || DEFAULT_TOOL_NAME,\n      ),\n    [documentId, documentType, workspace.tools, presentation],\n  )\n\n  return {\n    type: 'action',\n    hidden: !presentation || path.length > 0 || !defaultStructureTool,\n    icon: defaultStructureTool?.icon || MasterDetailIcon,\n    title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n    onAction() {\n      navigateIntent('edit', {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n        path: pathToString(path),\n      })\n    },\n    renderAsButton: true,\n  }\n}\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction: useOpenInStructureAction,\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n  presentationToolName?: string,\n): Tool | undefined {\n  const results = tools\n    .filter((t) => t.name !== presentationToolName)\n    .map((t) => {\n      const match = t.canHandleIntent?.(\n        'edit',\n        {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n        },\n        {},\n      )\n\n      return {tool: t, match}\n    })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import {uuid} from '@sanity/uuid'\nimport {getPublishedId} from 'sanity'\nimport {encodeJsonParams, type RouterState, type SearchParam} from 'sanity/router'\n\nimport {type PresentationSearchParams, type PresentationStateParams} from './types'\n\nconst preservedSearchParamKeys: Array<keyof PresentationSearchParams> = ['preview', 'viewport']\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: RouterState | undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & {_searchParams: SearchParam[]})\n  | {intent: string; params: Record<string, string>; payload: unknown} {\n  // oxlint-disable-next-line no-unused-vars\n  const {id, mode, path, presentation, type, ...searchParams} = params\n\n  const preservedSearchParams = (routerState?._searchParams || [])\n    // @todo Casting https://github.com/microsoft/TypeScript/issues/14520\n    .filter(([key]) => preservedSearchParamKeys.includes(key as keyof PresentationSearchParams))\n    .reduce((acc, [key, value]) => ({...acc, [key]: value}), {} as Record<string, string>)\n\n  const _searchParams = {\n    ...preservedSearchParams,\n    ...searchParams,\n  }\n\n  if (intent === 'edit' && id) {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n\n  if (intent === 'create') {\n    _searchParams.preview =\n      _searchParams.preview || new URLSearchParams(window.location.search).get('preview') || '/'\n\n    if (payload && typeof payload === 'object') {\n      _searchParams.templateParams = encodeJsonParams(payload as Record<string, unknown>)\n    }\n\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(_searchParams),\n    }\n  }\n  return {intent, params, payload}\n}\n","import {Flex, Spinner} from '@sanity/ui'\n\nexport function PresentationSpinner(): React.JSX.Element {\n  return (\n    <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" style={{width: '100%'}}>\n      <Spinner />\n    </Flex>\n  )\n}\n","import {route} from 'sanity/router'\n\n// eslint-disable-next-line camelcase\nexport const router = route.create('/', {__unsafe_disableScopedSearchParams: true}, [\n  route.intents('/intent'),\n  route.create(':type', [route.create(':id', [route.create(':path')])]),\n])\n","import {type SanityDocument} from '@sanity/client'\nimport {lazy, Suspense} from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  getVersionFromId,\n  type InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {DEFAULT_TOOL_ICON, DEFAULT_TOOL_NAME, EDIT_INTENT_MODE} from './constants'\nimport {PresentationDocumentHeader} from './document/PresentationDocumentHeader'\nimport {PresentationDocumentProvider} from './document/PresentationDocumentProvider'\nimport {openInStructure} from './fieldActions/openInStructure'\nimport {getIntentState} from './getIntentState'\nimport {presentationUsEnglishLocaleBundle} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport {router} from './router'\nimport {\n  type DocumentLocationResolverObject,\n  type DocumentLocationsState,\n  type DocumentResolver,\n  type PresentationPluginOptions,\n} from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationToolGrantsCheck'))\nconst BroadcastDisplayedDocument = lazy(() => import('./loader/BroadcastDisplayedDocument'))\n\n/**\n * Define locations for a given document type.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolver - resolver that return locations for a document.\n * @public\n */\nexport function defineLocations<K extends string>(\n  resolver: DocumentLocationResolverObject<K> | DocumentLocationsState,\n): typeof resolver {\n  return resolver\n}\n\n/**\n * Define documents for a given location.\n * This function doesn't do anything itself, it is used to provide type information.\n * @param resolvers - resolvers that return documents.\n * @public\n */\nexport function defineDocuments(resolvers: DocumentResolver[]): typeof resolvers {\n  return resolvers\n}\n\n/** @public */\nexport const presentationTool = definePlugin<PresentationPluginOptions>((options) => {\n  const toolName = options.name || DEFAULT_TOOL_NAME\n\n  if ('locate' in options) {\n    console.warn('Presentation’s `locate` option is deprecated. Use `resolve.locations` instead.')\n  }\n\n  const hasLocationsResolver = !!(options.resolve?.locations || options.locate)\n\n  function PresentationDocumentInput(props: InputProps) {\n    const value = props.value as SanityDocument\n    const documentId = value?._id ? getPublishedId(value?._id) : undefined\n    const documentVersion = value?._id ? getVersionFromId(value._id) : undefined\n    if (isDocumentSchemaType(props.schemaType)) {\n      return (\n        <PresentationDocumentProvider options={options}>\n          {hasLocationsResolver && documentId && (\n            <PresentationDocumentHeader\n              documentId={documentId}\n              version={documentVersion}\n              options={options}\n              schemaType={props.schemaType}\n            />\n          )}\n          <Suspense fallback={<PresentationSpinner />}>{props.renderDefault(props)}</Suspense>\n          <Suspense key=\"broadcast-displayed-document\">\n            <BroadcastDisplayedDocument key={documentId} value={value} />\n          </Suspense>\n        </PresentationDocumentProvider>\n      )\n    }\n\n    return props.renderDefault(props)\n  }\n\n  function canHandleCreateIntent(params: Record<string, unknown>) {\n    // We can't handle create intents without a `type` parameter\n    if (!('type' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'template' in params ? {template: true} : true\n  }\n\n  function canHandleEditIntent(params: Record<string, unknown>) {\n    // We can't handle edit intents without `type` or `id` parameters\n    if (!('type' in params) || !('id' in params)) {\n      return false\n    }\n\n    if ('presentation' in params && params.presentation !== toolName) {\n      return false\n    }\n\n    return 'mode' in params ? {mode: params.mode === EDIT_INTENT_MODE} : true\n  }\n\n  return {\n    i18n: {\n      bundles: [presentationUsEnglishLocaleBundle],\n    },\n    document: {\n      unstable_fieldActions: (prev) => {\n        return [\n          ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n          openInStructure,\n        ]\n      },\n    },\n\n    form: {\n      components: {\n        input: PresentationDocumentInput,\n      },\n    },\n\n    tools: [\n      {\n        icon: options.icon || DEFAULT_TOOL_ICON,\n        name: toolName,\n        title: options.title,\n        component: PresentationTool,\n        options,\n        canHandleIntent(intent, params) {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        router,\n        __internalApplicationType: 'sanity/presentation',\n      },\n    ],\n  }\n})\n","import {useContext} from 'react'\nimport {PresentationNavigateContext} from 'sanity/_singletons'\n\nimport {type PresentationNavigateContextValue} from './types'\n\n/** @public */\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type {PresentationNavigateContextValue}\n","import {useContext} from 'react'\nimport {PresentationParamsContext} from 'sanity/_singletons'\n\nimport {type PresentationParamsContextValue} from './types'\n\n/** @public */\nexport function usePresentationParams(throwOnMissingContext?: true): PresentationParamsContextValue\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext: false,\n): PresentationParamsContextValue | null\n/** @public */\nexport function usePresentationParams(\n  throwOnMissingContext = true,\n): PresentationParamsContextValue | null {\n  const params = useContext(PresentationParamsContext)\n\n  if (throwOnMissingContext && !params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n"],"names":["useSharedState","key","value","$","_c","context","useContext","PresentationSharedStateContext","Error","setValue","t0","t1","useEffect","DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","EDIT_INTENT_MODE","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","apiVersion","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","LOADER_QUERY_GC_INTERVAL","POPUP_CHECK_INTERVAL","presentationLocaleNamespace","presentationUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","INITIAL_STATE","locations","useDocumentLocations","props","id","resolvers","type","version","documentStore","useDocumentStore","documentPreviewStore","useDocumentPreviewStore","perspectiveStack","usePerspective","locationsState","setLocationsState","useState","resolver","name","locationsStatus","setLocationsStatus","bb0","undefined","params","_result","isObservable","of","doc","_type","_ref","preview","select","options","perspective","t2","resolve","snapshot","observeForPreview","pipe","map","result","sub","subscribe","state","unsubscribe","t3","status","usePresentationTool","throwOnMissingContext","presentation","PresentationContext","useCurrentPresentationToolName","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","documentId","schemaType","showPresentationTitle","isResolving","message","tone","locationsCount","length","t","useTranslation","presentationName","expanded","setExpanded","_temp","toggle","count","title","ToneIcon","Symbol","for","margin","t4","jsxs","Flex","jsx","Box","Text","Fragment","t5","Card","Spinner","ChevronRightIcon","transform","transition","Stack","l","active","href","t6","t7","v","LocationItem","documentType","node","toolName","currentPresentationToolName","isCurrentTool","navigate","structureParams","intent","mode","presentationLinkProps","useIntentLink","handleCurrentToolClick","onClick","DesktopIcon","t8","t9","areUrlsMatching","previewUrlString","locationUrlString","previewUrl","URL","location","origin","locationUrl","pathname","locationParams","URLSearchParams","search","previewParams","entries","get","LocationStack","styled","div","theme","getTheme_v2","css","rem","space","PresentationDocumentHeader","PresentationDocumentContext","contextOptions","some","Boolean","hasResolvers","_options","idx","o","locate","PresentationDocumentProvider","children","parent","parentRegister","register","optionsArray","setOptionsArray","options_0","prev","concat","prev_0","filter","options_1","registerEffectEvent","useEffectEvent","useLayoutEffect","useOpenInStructureAction","path","workspace","useWorkspace","navigateIntent","useRouter","tools","findStructureTool","defaultStructureTool","icon","MasterDetailIcon","hidden","onAction","pathToString","renderAsButton","openInStructure","defineDocumentFieldAction","useAction","presentationToolName","results","match","canHandleIntent","tool","modeMatches","isRecord","preservedSearchParamKeys","getIntentState","routerState","payload","searchParams","_searchParams","includes","reduce","acc","window","getPublishedId","Object","templateParams","encodeJsonParams","uuid","PresentationSpinner","width","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","BroadcastDisplayedDocument","defineLocations","defineDocuments","presentationTool","definePlugin","console","warn","hasLocationsResolver","PresentationDocumentInput","_id","getVersionFromId","documentVersion","isDocumentSchemaType","renderDefault","Suspense","canHandleCreateIntent","template","canHandleEditIntent","i18n","bundles","document","unstable_fieldActions","a","form","components","input","component","__internalApplicationType","usePresentationNavigate","PresentationNavigateContext","usePresentationParams","PresentationParamsContext"],"mappings":"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"}