{"version":3,"file":"execScript.js","sources":["../../src/_internal/cli/actions/exec/execScript.ts"],"sourcesContent":["import {spawn} from 'node:child_process'\nimport fs from 'node:fs/promises'\nimport path from 'node:path'\n\nimport {type CliCommandAction, type CliCommandArguments} from '@sanity/cli'\nimport readPkgUp from 'read-pkg-up'\nimport {hideBin} from 'yargs/helpers'\nimport yargs from 'yargs/yargs'\n\ninterface ExecFlags {\n  'with-user-token'?: boolean\n  'mock-browser-env'?: boolean\n}\n\nasync function parseCliFlags(args: CliCommandArguments<ExecFlags>) {\n  const flags = await yargs(hideBin(args.argv || process.argv).slice(2))\n    .option('with-user-token', {type: 'boolean', default: false})\n    .option('mock-browser-env', {type: 'boolean', default: false}).argv\n\n  return {\n    ...flags,\n    script: args.argsWithoutOptions[0],\n  }\n}\n\nconst execScript: CliCommandAction<ExecFlags> = async function execScript(args, context) {\n  // Reparsing CLI flags for better control of binary flags\n  const {withUserToken, mockBrowserEnv, script} = await parseCliFlags(args)\n  const {workDir} = context\n\n  const scriptPath = path.resolve(script || '')\n  if (!script) {\n    throw new Error('SCRIPT must be provided. `sanity exec <script>`')\n  }\n\n  if (!(await fs.stat(scriptPath).catch(() => false))) {\n    throw new Error(`${scriptPath} does not exist`)\n  }\n\n  const sanityPkgPath = (await readPkgUp({cwd: __dirname}))?.path\n  if (!sanityPkgPath) {\n    throw new Error('Unable to resolve `sanity` module root')\n  }\n\n  const sanityDir = path.dirname(sanityPkgPath)\n  const threadsDir = path.join(sanityDir, 'lib', '_internal', 'cli', 'threads')\n  const esbuildPath = path.join(threadsDir, 'esbuild.js')\n  const browserEnvPath = path.join(threadsDir, 'registerBrowserEnv.js')\n  const configClientPath = path.join(threadsDir, 'configClient.js')\n\n  if (!(await fs.stat(esbuildPath).catch(() => false))) {\n    throw new Error('`sanity` module build error: missing threads')\n  }\n\n  const baseArgs = mockBrowserEnv ? ['-r', browserEnvPath] : ['-r', esbuildPath]\n  const tokenArgs = withUserToken ? ['-r', configClientPath] : []\n\n  const nodeArgs = [...baseArgs, ...tokenArgs, scriptPath, ...args.extraArguments]\n\n  const proc = spawn(process.argv[0], nodeArgs, {\n    stdio: 'inherit',\n    env: {\n      ...process.env,\n      SANITY_BASE_PATH: workDir,\n    },\n  })\n  proc.on('close', process.exit)\n}\n\nexport default execScript\n"],"names":["parseCliFlags","args","yargs","hideBin","argv","process","slice","option","type","default","script","argsWithoutOptions","execScript","context","withUserToken","mockBrowserEnv","workDir","scriptPath","path","resolve","Error","fs","stat","catch","sanityPkgPath","readPkgUp","cwd","__dirname","sanityDir","dirname","threadsDir","join","esbuildPath","browserEnvPath","configClientPath","baseArgs","tokenArgs","nodeArgs","extraArguments","spawn","stdio","env","SANITY_BASE_PATH","on","exit"],"mappings":";;;;;;AAcA,eAAeA,cAAcC,MAAsC;AAKjE,SAAO;AAAA,IACL,GALY,MAAMC,eAAAA,QAAMC,QAAAA,QAAQF,KAAKG,QAAQC,QAAQD,IAAI,EAAEE,MAAM,CAAC,CAAC,EAClEC,OAAO,mBAAmB;AAAA,MAACC,MAAM;AAAA,MAAWC,SAAS;AAAA,IAAA,CAAM,EAC3DF,OAAO,oBAAoB;AAAA,MAACC,MAAM;AAAA,MAAWC,SAAS;AAAA,IAAA,CAAM,EAAEL;AAAAA,IAI/DM,QAAQT,KAAKU,mBAAmB,CAAC;AAAA,EAAA;AAErC;AAEA,MAAMC,aAA0C,eAA0BX,MAAMY,SAAS;AAEvF,QAAM;AAAA,IAACC;AAAAA,IAAeC;AAAAA,IAAgBL;AAAAA,EAAAA,IAAU,MAAMV,cAAcC,IAAI,GAClE;AAAA,IAACe;AAAAA,EAAAA,IAAWH,SAEZI,aAAaC,cAAAA,QAAKC,QAAQT,UAAU,EAAE;AAC5C,MAAI,CAACA;AACH,UAAM,IAAIU,MAAM,iDAAiD;AAGnE,MAAI,CAAE,MAAMC,YAAAA,QAAGC,KAAKL,UAAU,EAAEM,MAAM,MAAM,EAAK;AAC/C,UAAM,IAAIH,MAAM,GAAGH,UAAU,iBAAiB;AAGhD,QAAMO,iBAAiB,MAAMC,2BAAU;AAAA,IAACC,KAAKC;AAAAA,EAAAA,CAAU,IAAIT;AAC3D,MAAI,CAACM;AACH,UAAM,IAAIJ,MAAM,wCAAwC;AAG1D,QAAMQ,YAAYV,cAAAA,QAAKW,QAAQL,aAAa,GACtCM,aAAaZ,cAAAA,QAAKa,KAAKH,WAAW,OAAO,aAAa,OAAO,SAAS,GACtEI,cAAcd,sBAAKa,KAAKD,YAAY,YAAY,GAChDG,iBAAiBf,cAAAA,QAAKa,KAAKD,YAAY,uBAAuB,GAC9DI,mBAAmBhB,cAAAA,QAAKa,KAAKD,YAAY,iBAAiB;AAEhE,MAAI,CAAE,MAAMT,YAAAA,QAAGC,KAAKU,WAAW,EAAET,MAAM,MAAM,EAAK;AAChD,UAAM,IAAIH,MAAM,8CAA8C;AAGhE,QAAMe,WAAWpB,iBAAiB,CAAC,MAAMkB,cAAc,IAAI,CAAC,MAAMD,WAAW,GACvEI,YAAYtB,gBAAgB,CAAC,MAAMoB,gBAAgB,IAAI,CAAA,GAEvDG,WAAW,CAAC,GAAGF,UAAU,GAAGC,WAAWnB,YAAY,GAAGhB,KAAKqC,cAAc;AAElEC,qBAAAA,MAAMlC,QAAQD,KAAK,CAAC,GAAGiC,UAAU;AAAA,IAC5CG,OAAO;AAAA,IACPC,KAAK;AAAA,MACH,GAAGpC,QAAQoC;AAAAA,MACXC,kBAAkB1B;AAAAA,IAAAA;AAAAA,EACpB,CACD,EACI2B,GAAG,SAAStC,QAAQuC,IAAI;AAC/B;;"}