{"version":3,"file":"undeployAction2.js","sources":["../../src/_internal/cli/actions/deploy/undeployAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {debug as debugIt} from '../../debug'\nimport {deleteUserApplication, getUserApplication} from './helpers'\n\nconst debug = debugIt.extend('undeploy')\n\nexport interface UndeployStudioActionFlags {\n  yes?: boolean\n  y?: boolean\n}\n\nexport default async function undeployStudioAction(\n  args: CliCommandArguments<UndeployStudioActionFlags>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, chalk, output, prompt, cliConfig} = context\n  const flags = args.extOptions\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: true,\n  }).withConfig({apiVersion: 'v2024-08-01'})\n\n  // Check that the project has a studio hostname\n  let spinner = output.spinner('Checking project info').start()\n\n  const userApplication = await getUserApplication({\n    client,\n    appHost: cliConfig && 'studioHost' in cliConfig ? cliConfig.studioHost : undefined,\n  })\n\n  spinner.succeed()\n\n  if (!userApplication) {\n    output.print('Your project has not been assigned a studio hostname')\n    output.print('or the `studioHost` provided does not exist.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  // Double-check\n  output.print('')\n\n  const url = `https://${chalk.yellow(userApplication.appHost)}.sanity.studio`\n\n  /**\n   * Unattended mode means that if there are any prompts it will use `YES` for them but will no change anything that doesn't have a prompt\n   */\n  const unattendedMode = Boolean(flags.yes || flags.y)\n\n  // If it is in unattended mode, we don't want to prompt\n  if (!unattendedMode) {\n    const shouldUndeploy = await prompt.single({\n      type: 'confirm',\n      default: false,\n      message: `This will undeploy ${url} and make it unavailable for your users.\n  The hostname will be available for anyone to claim.\n  Are you ${chalk.red('sure')} you want to undeploy?`.trim(),\n    })\n\n    if (!shouldUndeploy) {\n      return\n    }\n  }\n\n  spinner = output.spinner('Undeploying studio').start()\n  try {\n    await deleteUserApplication({\n      client,\n      applicationId: userApplication.id,\n      appType: 'studio',\n    })\n    spinner.succeed()\n  } catch (err) {\n    spinner.fail()\n    debug('Error undeploying studio', err)\n    throw err\n  }\n\n  output.print(\n    `Studio undeploy scheduled. It might take a few minutes before ${url} is unavailable.`,\n  )\n}\n"],"names":["debug","debugIt","extend","undeployStudioAction","args","context","apiClient","chalk","output","prompt","cliConfig","flags","extOptions","client","requireUser","requireProject","withConfig","apiVersion","spinner","start","userApplication","getUserApplication","appHost","studioHost","undefined","succeed","print","url","yellow","Boolean","yes","y","single","type","default","message","red","trim","deleteUserApplication","applicationId","id","appType","err","fail"],"mappings":";;AAKA,MAAMA,QAAQC,UAAAA,MAAQC,OAAO,UAAU;AAOvC,eAA8BC,qBAC5BC,MACAC,SACe;AACf,QAAM;AAAA,IAACC;AAAAA,IAAWC;AAAAA,IAAOC;AAAAA,IAAQC;AAAAA,IAAQC;AAAAA,EAAAA,IAAaL,SAChDM,QAAQP,KAAKQ,YAEbC,SAASP,UAAU;AAAA,IACvBQ,aAAa;AAAA,IACbC,gBAAgB;AAAA,EAAA,CACjB,EAAEC,WAAW;AAAA,IAACC,YAAY;AAAA,EAAA,CAAc;AAGzC,MAAIC,UAAUV,OAAOU,QAAQ,uBAAuB,EAAEC,MAAAA;AAEtD,QAAMC,kBAAkB,MAAMC,2BAAmB;AAAA,IAC/CR;AAAAA,IACAS,SAASZ,aAAa,gBAAgBA,YAAYA,UAAUa,aAAaC;AAAAA,EAAAA,CAC1E;AAID,MAFAN,QAAQO,WAEJ,CAACL,iBAAiB;AACpBZ,WAAOkB,MAAM,sDAAsD,GACnElB,OAAOkB,MAAM,8CAA8C,GAC3DlB,OAAOkB,MAAM,sBAAsB;AACnC;AAAA,EACF;AAGAlB,SAAOkB,MAAM,EAAE;AAEf,QAAMC,MAAM,WAAWpB,MAAMqB,OAAOR,gBAAgBE,OAAO,CAAC;AAQ5D,MAAI,EAHmBO,EAAQlB,MAAMmB,OAAOnB,MAAMoB,MAY5C,CARmB,MAAMtB,OAAOuB,OAAO;AAAA,IACzCC,MAAM;AAAA,IACNC,SAAS;AAAA,IACTC,SAAS,sBAAsBR,GAAG;AAAA;AAAA,YAE5BpB,MAAM6B,IAAI,MAAM,CAAC,yBAAyBC,KAAAA;AAAAA,EAAK,CACtD,IAOHnB;AAAAA,cAAUV,OAAOU,QAAQ,oBAAoB,EAAEC,MAAAA;AAC/C,QAAI;AACF,YAAMmB,8BAAsB;AAAA,QAC1BzB;AAAAA,QACA0B,eAAenB,gBAAgBoB;AAAAA,QAC/BC,SAAS;AAAA,MAAA,CACV,GACDvB,QAAQO,QAAAA;AAAAA,IACV,SAASiB,KAAK;AACZxB,YAAAA,QAAQyB,KAAAA,GACR3C,MAAM,4BAA4B0C,GAAG,GAC/BA;AAAAA,IACR;AAEAlC,WAAOkB,MACL,iEAAiEC,GAAG,kBACtE;AAAA,EAAA;AACF;;"}