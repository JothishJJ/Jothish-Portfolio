{"version":3,"file":"MenuGroup.js","sources":["../../src/ui-components/confirmPopover/ConfirmPopover.tsx","../../src/ui-components/menuGroup/MenuGroup.tsx"],"sourcesContent":["/* eslint-disable no-restricted-imports, @sanity/i18n/no-i18next-import */\nimport {\n  Box,\n  Button as UIButton,\n  Flex,\n  Grid,\n  Popover as UIPopover,\n  type PopoverProps as UIPopoverProps,\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback, useRef} from 'react'\nimport {useTranslation} from 'react-i18next'\n\nexport interface ConfirmPopoverProps {\n  cancelButtonIcon?: ReactNode | ComponentType\n  cancelButtonText?: string\n  confirmButtonIcon?: ReactNode | ComponentType\n  confirmButtonText?: string\n  message: ReactNode\n  onCancel: () => void\n  onConfirm: () => void\n  open: boolean\n  referenceElement: HTMLElement | null\n  tone?: 'default' | 'primary' | 'positive' | 'caution' | 'critical' | 'neutral' | 'suggest'\n  placement?: UIPopoverProps['placement']\n  fallbackPlacements?: UIPopoverProps['fallbackPlacements']\n}\n\n/**\n * A popover component for inline confirmation dialogs.\n * Follows the same pattern as document action confirm dialogs.\n *\n * @internal\n */\nexport function ConfirmPopover({\n  cancelButtonIcon,\n  cancelButtonText,\n  confirmButtonIcon,\n  confirmButtonText,\n  message,\n  onCancel,\n  onConfirm,\n  open,\n  referenceElement,\n  tone = 'critical',\n  placement = 'top',\n  fallbackPlacements = ['left', 'bottom'],\n}: ConfirmPopoverProps) {\n  if (!open) return null\n\n  return (\n    <UIPopover\n      content={\n        <ConfirmPopoverContent\n          cancelButtonIcon={cancelButtonIcon}\n          cancelButtonText={cancelButtonText}\n          confirmButtonIcon={confirmButtonIcon}\n          confirmButtonText={confirmButtonText}\n          message={message}\n          onCancel={onCancel}\n          onConfirm={onConfirm}\n          tone={tone}\n        />\n      }\n      constrainSize\n      fallbackPlacements={fallbackPlacements}\n      open\n      placement={placement}\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmPopoverContent({\n  cancelButtonIcon,\n  cancelButtonText,\n  confirmButtonIcon,\n  confirmButtonText,\n  message,\n  onCancel,\n  onConfirm,\n  tone,\n}: Omit<ConfirmPopoverProps, 'open' | 'referenceElement' | 'placement' | 'fallbackPlacements'>) {\n  const {t} = useTranslation()\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 280, maxWidth: 350}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text size={1}>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <UIButton\n            data-testid=\"confirm-popover-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            padding={2}\n            text={cancelButtonText || t('common.dialog.cancel-button.text')}\n            size={1}\n          />\n          <UIButton\n            data-testid=\"confirm-popover-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            padding={2}\n            text={confirmButtonText || t('common.dialog.confirm-button.text')}\n            tone={tone}\n            size={1}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport {type HTMLProps, useCallback} from 'react'\n\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper/ConditionalWrapper'\nimport {Tooltip, type TooltipProps} from '../tooltip/Tooltip'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex' | 'popover'> & {\n      tooltipProps?: TooltipProps | null\n    },\n) => {\n  const {tooltipProps} = props\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuGroup {...props} fontSize={1} padding={3} />\n    </ConditionalWrapper>\n  )\n}\n"],"names":["ConfirmPopover","t0","$","_c","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","message","onCancel","onConfirm","open","referenceElement","tone","t1","placement","t2","fallbackPlacements","t3","undefined","t4","t5","t6","UIPopover","ConfirmPopoverContent","t","useTranslation","isTopLayer","useLayer","ref","useRef","event","key","useGlobalKeyDown","Symbol","for","current","useClickOutsideEvent","minWidth","maxWidth","jsx","Box","Text","borderTop","t7","UIButton","t8","t9","t10","Grid","t11","Flex","MenuGroup","props","tooltipProps","children","Tooltip","content","renderWrapper","UIMenuGroup","ConditionalWrapper"],"mappings":"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"}