{"version":3,"file":"undeployAction.js","sources":["../../src/_internal/cli/actions/app/undeployAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {debug as debugIt} from '../../debug'\nimport {getAppId} from '../../util/getAppId'\nimport {deleteUserApplication, getUserApplication} from '../deploy/helpers'\nimport {type UndeployStudioActionFlags} from '../deploy/undeployAction'\n\nconst debug = debugIt.extend('undeploy')\n\nexport default async function undeployAppAction(\n  _: CliCommandArguments<UndeployStudioActionFlags>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, chalk, output, prompt, cliConfig} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: false,\n  }).withConfig({apiVersion: 'v2024-08-01'})\n\n  // Check that the project has an application ID\n  let spinner = output.spinner('Checking application info').start()\n\n  const appId = getAppId({cliConfig, output})\n\n  if (!appId) {\n    spinner.fail()\n    output.print(`No application ID provided.`)\n    output.print('Please set id in `app` in sanity.cli.js or sanity.cli.ts.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  const userApplication = await getUserApplication({\n    client,\n    appId,\n  })\n\n  spinner.succeed()\n\n  if (!userApplication) {\n    spinner.fail()\n    output.print('Application with the given ID does not exist.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  // Double-check\n  output.print('')\n\n  const shouldUndeploy = await prompt.single({\n    type: 'confirm',\n    default: false,\n    message: `This will undeploy the following application:\n\n    Title: ${chalk.yellow(userApplication.title)}\n    ID:    ${chalk.yellow(userApplication.id)}\n\n  The application will no longer be available for any of your users if you proceed.\n\n  Are you ${chalk.red('sure')} you want to undeploy?`.trim(),\n  })\n\n  if (!shouldUndeploy) {\n    return\n  }\n\n  spinner = output.spinner('Undeploying application').start()\n  try {\n    await deleteUserApplication({\n      client,\n      applicationId: userApplication.id,\n      appType: 'coreApp',\n    })\n    spinner.succeed()\n  } catch (err) {\n    spinner.fail()\n    debug('Error undeploying application', err)\n    throw err\n  }\n\n  output.print(\n    `Application undeploy scheduled. It might take a few minutes before ${chalk.yellow(userApplication.title)} is unavailable.`,\n  )\n}\n"],"names":["debug","debugIt","extend","undeployAppAction","_","context","apiClient","chalk","output","prompt","cliConfig","client","requireUser","requireProject","withConfig","apiVersion","spinner","start","appId","getAppId","fail","print","userApplication","getUserApplication","succeed","single","type","default","message","yellow","title","id","red","trim","deleteUserApplication","applicationId","appType","err"],"mappings":";;AAOA,MAAMA,QAAQC,UAAAA,MAAQC,OAAO,UAAU;AAEvC,eAA8BC,kBAC5BC,GACAC,SACe;AACf,QAAM;AAAA,IAACC;AAAAA,IAAWC;AAAAA,IAAOC;AAAAA,IAAQC;AAAAA,IAAQC;AAAAA,EAAAA,IAAaL,SAEhDM,SAASL,UAAU;AAAA,IACvBM,aAAa;AAAA,IACbC,gBAAgB;AAAA,EAAA,CACjB,EAAEC,WAAW;AAAA,IAACC,YAAY;AAAA,EAAA,CAAc;AAGzC,MAAIC,UAAUR,OAAOQ,QAAQ,2BAA2B,EAAEC,MAAAA;AAE1D,QAAMC,QAAQC,SAAAA,SAAS;AAAA,IAACT;AAAAA,IAAWF;AAAAA,EAAAA,CAAO;AAE1C,MAAI,CAACU,OAAO;AACVF,YAAQI,KAAAA,GACRZ,OAAOa,MAAM,6BAA6B,GAC1Cb,OAAOa,MAAM,2DAA2D,GACxEb,OAAOa,MAAM,sBAAsB;AACnC;AAAA,EACF;AAEA,QAAMC,kBAAkB,MAAMC,2BAAmB;AAAA,IAC/CZ;AAAAA,IACAO;AAAAA,EAAAA,CACD;AAID,MAFAF,QAAQQ,WAEJ,CAACF,iBAAiB;AACpBN,YAAQI,KAAAA,GACRZ,OAAOa,MAAM,+CAA+C,GAC5Db,OAAOa,MAAM,sBAAsB;AACnC;AAAA,EACF;AAkBA,MAfAb,OAAOa,MAAM,EAAE,GAeX,CAAA,CAbmB,MAAMZ,OAAOgB,OAAO;AAAA,IACzCC,MAAM;AAAA,IACNC,SAAS;AAAA,IACTC,SAAS;AAAA;AAAA,aAEArB,MAAMsB,OAAOP,gBAAgBQ,KAAK,CAAC;AAAA,aACnCvB,MAAMsB,OAAOP,gBAAgBS,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,YAIjCxB,MAAMyB,IAAI,MAAM,CAAC,yBAAyBC,KAAAA;AAAAA,EAAK,CACxD,GAMDjB;AAAAA,cAAUR,OAAOQ,QAAQ,yBAAyB,EAAEC,MAAAA;AACpD,QAAI;AACF,YAAMiB,8BAAsB;AAAA,QAC1BvB;AAAAA,QACAwB,eAAeb,gBAAgBS;AAAAA,QAC/BK,SAAS;AAAA,MAAA,CACV,GACDpB,QAAQQ,QAAAA;AAAAA,IACV,SAASa,KAAK;AACZrB,YAAAA,QAAQI,KAAAA,GACRpB,MAAM,iCAAiCqC,GAAG,GACpCA;AAAAA,IACR;AAEA7B,WAAOa,MACL,sEAAsEd,MAAMsB,OAAOP,gBAAgBQ,KAAK,CAAC,kBAC3G;AAAA,EAAA;AACF;;"}