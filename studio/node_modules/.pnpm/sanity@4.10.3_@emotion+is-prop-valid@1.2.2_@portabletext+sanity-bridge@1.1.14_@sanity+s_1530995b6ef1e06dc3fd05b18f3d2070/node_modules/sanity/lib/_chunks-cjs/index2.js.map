{"version":3,"file":"index2.js","sources":["../../src/structure/panes/list/ListPaneContent.tsx","../../src/structure/panes/list/ListPaneHeader.tsx","../../src/structure/panes/list/ListPane.tsx"],"sourcesContent":["import {Box, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  CommandList,\n  type CommandListItemContext,\n  type GeneralPreviewLayoutKey,\n  useGetI18nText,\n  useI18nText,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {type PaneListItem, type PaneListItemDivider} from '../../types'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst DividerContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin: 0.75rem 0 0.25rem 0;\n`\n\nconst Divider = styled.hr`\n  flex: 1;\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\nconst DividerTitle = styled(Text)`\n  padding-bottom: 0.75rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n`\n\ninterface DividerItemProps {\n  item: PaneListItemDivider\n}\n\nfunction DividerItem({item}: DividerItemProps) {\n  const {title: dividerTitle} = useI18nText(item)\n  return (\n    <DividerContainer>\n      <DividerTitle weight=\"semibold\" muted size={1}>\n        {dividerTitle}\n      </DividerTitle>\n\n      <Divider />\n    </DividerContainer>\n  )\n}\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const getI18nText = useGetI18nText(\n    items?.filter(\n      (item): item is Exclude<typeof item, {type: 'divider'}> => item.type !== 'divider',\n    ),\n  )\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items],\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons],\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          <Box key={`divider-${itemIndex}`} marginBottom={1}>\n            {item.title ? <DividerItem item={item} /> : <Divider />}\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          key={item.id}\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={getI18nText(item).title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, getI18nText, isActive, layout, shouldShowIconForItem],\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={title}\n          canReceiveFocus\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          paddingBottom={1}\n          paddingX={3}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useStructureTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {_DEBUG} from '../../constants'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {ListPaneContent} from './ListPaneContent'\nimport {ListPaneHeader} from './ListPaneHeader'\n\ntype ListPaneProps = BaseStructureToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups} = pane\n  const showIcons = displayOptions?.showIcons !== false\n  const {title} = useI18nText(pane)\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"structure-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],"names":["DividerContainer","styled","Box","Divider","hr","DividerTitle","Text","DividerItem","t0","$","_c","item","title","dividerTitle","useI18nText","t1","t2","Symbol","for","jsx","t3","ListPaneContent","props","childItemId","items","isActive","layout","showIcons","collapsed","layoutCollapsed","usePaneLayout","filter","_temp","getI18nText","useGetI18nText","itemIndex","find","_","i","type","getItemDisabled","item_0","itemShowIcon","displayOptions","showIcon","shouldShowIconForItem","item_1","ctx","virtualIndex","itemIndex_0","pressed","id","selected","value","_id","schemaType","_type","name","undefined","PaneItem","icon","renderItem","t4","t5","length","CommandList","t6","PaneContent","ListPaneHeader","index","menuItems","menuItemGroups","features","useStructureTool","isLast","usePane","tabIndex","PaneHeaderActions","backButton","Button","BackLink","ArrowLeftIcon","content","PaneHeader","ListPane","isSelected","pane","paneKey","defaultLayout","source","_DEBUG","jsxs","Pane"],"mappings":"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"}