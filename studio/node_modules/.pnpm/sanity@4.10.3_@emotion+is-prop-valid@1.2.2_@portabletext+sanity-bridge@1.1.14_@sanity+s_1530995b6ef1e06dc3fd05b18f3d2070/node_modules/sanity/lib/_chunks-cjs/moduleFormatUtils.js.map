{"version":3,"file":"moduleFormatUtils.js","sources":["../../src/_internal/cli/server/buildVendorDependencies.ts","../../src/_internal/cli/util/formatSize.ts","../../src/_internal/cli/util/moduleFormatUtils.ts"],"sourcesContent":["import fs from 'node:fs'\nimport path from 'node:path'\n\nimport resolveFrom from 'resolve-from'\nimport semver from 'semver'\n\nimport {createExternalFromImportMap} from './createExternalFromImportMap'\n\n// Directory where vendor packages will be stored\nconst VENDOR_DIR = 'vendor'\n\n/**\n * A type representing the imports of vendor packages, defining specific entry\n * points for various versions and subpaths of the packages.\n *\n * The `VendorImports` object is used to build ESM browser-compatible versions\n * of the specified packages. This approach ensures that the appropriate version\n * and entry points are used for each package, enabling compatibility and proper\n * functionality in the browser environment.\n *\n * ## Rationale\n *\n * The rationale for this structure is to handle different versions of the\n * packages carefully, especially major versions. Major version bumps often\n * introduce breaking changes, so the module scheme for the package needs to be\n * checked when there is a major version update. However, minor and patch\n * versions are generally backward compatible, so they are handled more\n * leniently. By assuming that new minor versions are compatible, we avoid\n * unnecessary warnings and streamline the update process.\n *\n * If a new minor version introduces an additional subpath export within the\n * package of this version range, the corresponding package can add a more\n * specific version range that includes the new subpath. This design allows for\n * flexibility and ease of maintenance, ensuring that the latest features and\n * fixes are incorporated without extensive manual intervention.\n *\n * An additional subpath export within the package of this version range that\n * could cause the build to break if that new export is used, can be treated as\n * a bug fix. It might make more sense to our users that this new subpath isn't\n * supported yet until we address it as a bug fix. This approach helps maintain\n * stability and prevents unexpected issues during the build process.\n *\n * ## Structure\n * The `VendorImports` type is a nested object where:\n * - The keys at the first level represent the package names.\n * - The keys at the second level represent the version ranges (e.g., `^19.0.0`).\n * - The keys at the third level represent the subpaths within the package (e.g., `.` for the main entry point).\n * - The values at the third level are the relative paths to the corresponding entry points within the package.\n *\n * This structure allows for precise specification of the entry points for\n * different versions and subpaths, ensuring that the correct files are used\n * during the build process.\n */\ntype VendorImports = {\n  [packageName: string]: {\n    [versionRange: string]: {\n      [subpath: string]: string\n    }\n  }\n}\n\n// Define the vendor packages and their corresponding versions and entry points\nconst VENDOR_IMPORTS: VendorImports = {\n  'react': {\n    '^19.0.0': {\n      '.': './cjs/react.production.js',\n      './jsx-runtime': './cjs/react-jsx-runtime.production.js',\n      './jsx-dev-runtime': './cjs/react-jsx-dev-runtime.production.js',\n      './compiler-runtime': './cjs/react-compiler-runtime.production.js',\n      './package.json': './package.json',\n    },\n    '^18.0.0': {\n      '.': './cjs/react.production.min.js',\n      './jsx-runtime': './cjs/react-jsx-runtime.production.min.js',\n      './jsx-dev-runtime': './cjs/react-jsx-dev-runtime.production.min.js',\n      './package.json': './package.json',\n    },\n  },\n  'react-dom': {\n    '^19.0.0': {\n      '.': './cjs/react-dom.production.js',\n      './client': './cjs/react-dom-client.production.js',\n      './server': './cjs/react-dom-server-legacy.browser.production.js',\n      './server.browser': './cjs/react-dom-server-legacy.browser.production.js',\n      './static': './cjs/react-dom-server.browser.production.js',\n      './static.browser': './cjs/react-dom-server.browser.production.js',\n      './package.json': './package.json',\n    },\n    '^18.0.0': {\n      '.': './cjs/react-dom.production.min.js',\n      './client': './cjs/react-dom.production.min.js',\n      './server': './cjs/react-dom-server-legacy.browser.production.min.js',\n      './server.browser': './cjs/react-dom-server-legacy.browser.production.min.js',\n      './package.json': './package.json',\n    },\n  },\n  'styled-components': {\n    '^6.1.0': {\n      '.': './dist/styled-components.esm.js',\n      './package.json': './package.json',\n    },\n  },\n}\n\ninterface VendorBuildOptions {\n  cwd: string\n  outputDir: string\n  basePath: string\n}\n\n/**\n * Builds the ESM browser compatible versions of the vendor packages\n * specified in VENDOR_IMPORTS. Returns the `imports` object of an import map.\n */\nexport async function buildVendorDependencies({\n  cwd,\n  outputDir,\n  basePath,\n}: VendorBuildOptions): Promise<Record<string, string>> {\n  // normalize the CWD to a relative dir for better error messages\n  const dir = path.relative(process.cwd(), path.resolve(cwd))\n  const entry: Record<string, string> = {}\n  const imports: Record<string, string> = {}\n\n  // Iterate over each package and its version ranges in VENDOR_IMPORTS\n  for (const [packageName, ranges] of Object.entries(VENDOR_IMPORTS)) {\n    const packageJsonPath = resolveFrom.silent(cwd, path.join(packageName, 'package.json'))\n    if (!packageJsonPath) {\n      throw new Error(\n        `Could not find package.json for package '${packageName}' from directory '${dir}'. Is it installed?`,\n      )\n    }\n\n    let packageJson\n\n    try {\n      // Read and parse the package.json file\n      packageJson = JSON.parse(await fs.promises.readFile(packageJsonPath, 'utf-8'))\n    } catch (e) {\n      const message = `Could not read package.json for package '${packageName}' from directory '${dir}'`\n      if (typeof e?.message === 'string') {\n        // Re-assign the error message so the stack trace is more visible\n        e.message = `${message}: ${e.message}`\n        throw e\n      }\n\n      throw new Error(message, {cause: e})\n    }\n\n    // Coerce the version to a semver-compatible version\n    const version = semver.coerce(packageJson.version)?.version\n    if (!version) {\n      throw new Error(`Could not parse version '${packageJson.version}' from '${packageName}'`)\n    }\n\n    // Sort version ranges in descending order\n    const sortedRanges = Object.keys(ranges).sort((range1, range2) => {\n      const min1 = semver.minVersion(range1)\n      const min2 = semver.minVersion(range2)\n\n      if (!min1) throw new Error(`Could not parse range '${range1}'`)\n      if (!min2) throw new Error(`Could not parse range '${range2}'`)\n\n      // sort them in reverse so we can rely on array `.find` below\n      return semver.rcompare(min1.version, min2.version)\n    })\n\n    // Find the first version range that satisfies the package version\n    const matchedRange = sortedRanges.find((range) => semver.satisfies(version, range))\n\n    if (!matchedRange) {\n      const min = semver.minVersion(sortedRanges[sortedRanges.length - 1])\n      if (!min) {\n        throw new Error(`Could not find a minimum version for package '${packageName}'`)\n      }\n\n      if (semver.gt(min.version, version)) {\n        throw new Error(`Package '${packageName}' requires at least ${min.version}.`)\n      }\n\n      throw new Error(`Version '${version}' of package '${packageName}' is not supported yet.`)\n    }\n\n    const subpaths = ranges[matchedRange]\n\n    // Iterate over each subpath and its corresponding entry point\n    for (const [subpath, relativeEntryPoint] of Object.entries(subpaths)) {\n      const packagePath = path.dirname(packageJsonPath)\n      const entryPoint = resolveFrom.silent(packagePath, relativeEntryPoint)\n\n      if (!entryPoint) {\n        throw new Error(\n          `Failed to resolve entry point '${path.join(packageName, relativeEntryPoint)}'. `,\n        )\n      }\n\n      const specifier = path.posix.join(packageName, subpath)\n      const chunkName = path.posix.join(\n        packageName,\n        path.relative(packageName, specifier) || 'index',\n      )\n\n      entry[chunkName] = entryPoint\n      imports[specifier] = path.posix.join('/', basePath, VENDOR_DIR, `${chunkName}.mjs`)\n    }\n  }\n\n  // removes the `RollupWatcher` type\n  type BuildResult = Exclude<Awaited<ReturnType<typeof build>>, {close: unknown}>\n\n  const {build} = await import('vite')\n  // Use Vite to build the packages into the output directory\n  let buildResult = (await build({\n    // Define a custom cache directory so that sanity's vite cache\n    // does not conflict with any potential local vite projects\n    cacheDir: 'node_modules/.sanity/vite-vendor',\n    root: cwd,\n    configFile: false,\n    logLevel: 'silent',\n\n    appType: 'custom',\n    mode: 'production',\n    define: {'process.env.NODE_ENV': JSON.stringify('production')},\n\n    build: {\n      commonjsOptions: {strictRequires: 'auto'},\n      minify: true,\n      emptyOutDir: false, // Rely on CLI to do this\n      outDir: path.join(outputDir, VENDOR_DIR),\n      lib: {entry, formats: ['es']},\n      rollupOptions: {\n        external: createExternalFromImportMap({imports}),\n        output: {\n          entryFileNames: '[name]-[hash].mjs',\n          chunkFileNames: '[name]-[hash].mjs',\n          exports: 'named',\n          format: 'es',\n        },\n        treeshake: {preset: 'recommended'},\n      },\n    },\n  })) as BuildResult\n\n  buildResult = Array.isArray(buildResult) ? buildResult : [buildResult]\n\n  // Create a map of the original import specifiers to their hashed filenames\n  const hashedImports: Record<string, string> = {}\n  const output = buildResult.flatMap((i) => i.output)\n\n  for (const chunk of output) {\n    if (chunk.type === 'asset') continue\n\n    for (const [specifier, originalPath] of Object.entries(imports)) {\n      if (originalPath.endsWith(`${chunk.name}.mjs`)) {\n        hashedImports[specifier] = path.posix.join('/', basePath, VENDOR_DIR, chunk.fileName)\n      }\n    }\n  }\n\n  return hashedImports\n}\n","import chalk from 'chalk'\n\nexport function formatSize(bytes: number): string {\n  return chalk.cyan(`${(bytes / 1024).toFixed()} kB`)\n}\n","import {type ChunkModule, type ChunkStats} from '../server'\nimport {formatSize} from './formatSize'\n\nexport function formatModuleSizes(modules: ChunkModule[]): string {\n  const lines: string[] = []\n  for (const mod of modules) {\n    lines.push(` - ${formatModuleName(mod.name)} (${formatSize(mod.renderedLength)})`)\n  }\n\n  return lines.join('\\n')\n}\n\nexport function formatModuleName(modName: string): string {\n  const delimiter = '/node_modules/'\n  const nodeIndex = modName.lastIndexOf(delimiter)\n  return nodeIndex === -1 ? modName : modName.slice(nodeIndex + delimiter.length)\n}\n\nexport function sortModulesBySize(chunks: ChunkStats[]): ChunkModule[] {\n  return chunks\n    .flatMap((chunk) => chunk.modules)\n    .sort((modA, modB) => modB.renderedLength - modA.renderedLength)\n}\n"],"names":["VENDOR_DIR","VENDOR_IMPORTS","buildVendorDependencies","cwd","outputDir","basePath","dir","path","relative","process","resolve","entry","imports","packageName","ranges","Object","entries","packageJsonPath","resolveFrom","silent","join","Error","packageJson","JSON","parse","fs","promises","readFile","e","message","cause","version","semver","coerce","sortedRanges","keys","sort","range1","range2","min1","minVersion","min2","rcompare","matchedRange","find","range","satisfies","min","length","gt","subpaths","subpath","relativeEntryPoint","packagePath","dirname","entryPoint","specifier","posix","chunkName","build","buildResult","cacheDir","root","configFile","logLevel","appType","mode","define","stringify","commonjsOptions","strictRequires","minify","emptyOutDir","outDir","lib","formats","rollupOptions","external","createExternalFromImportMap","output","entryFileNames","chunkFileNames","exports","format","treeshake","preset","Array","isArray","hashedImports","flatMap","i","chunk","type","originalPath","endsWith","name","fileName","formatSize","bytes","chalk","cyan","toFixed","formatModuleSizes","modules","lines","mod","push","formatModuleName","renderedLength","modName","delimiter","nodeIndex","lastIndexOf","slice","sortModulesBySize","chunks","modA","modB"],"mappings":"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"}