{"version":3,"file":"withMediaLibraryConfig.js","sources":["../../src/_internal/cli/actions/media/lib/withMediaLibraryConfig.ts"],"sourcesContent":["import type {CliCommandContext, CliConfig} from '@sanity/cli'\nimport path from 'node:path'\n\nexport function withMediaLibraryConfig(\n  context: CliCommandContext,\n): CliCommandContext & Required<Pick<CliConfig, 'mediaLibrary'>> {\n  const {cliConfig, cliConfigPath} = context\n\n  const mediaLibrary =\n    typeof cliConfig === 'object' && 'mediaLibrary' in cliConfig\n      ? cliConfig.mediaLibrary\n      : undefined\n\n  const relativeConfigPath = path.relative(process.cwd(), cliConfigPath ?? '')\n\n  if (typeof mediaLibrary?.aspectsPath === 'undefined') {\n    throw new Error(\n      `${relativeConfigPath} does not contain a media library aspects path (\"mediaLibrary.aspectsPath\"), ` +\n        'which is required for the Sanity CLI to manage aspects.',\n    )\n  }\n\n  return {\n    ...context,\n    mediaLibrary,\n  }\n}\n"],"names":["withMediaLibraryConfig","context","cliConfig","cliConfigPath","mediaLibrary","undefined","relativeConfigPath","path","relative","process","cwd","aspectsPath","Error"],"mappings":";;;;;;AAGO,SAASA,uBACdC,SAC+D;AAC/D,QAAM;AAAA,IAACC;AAAAA,IAAWC;AAAAA,EAAAA,IAAiBF,SAE7BG,eACJ,OAAOF,aAAc,YAAY,kBAAkBA,YAC/CA,UAAUE,eACVC,QAEAC,qBAAqBC,cAAAA,QAAKC,SAASC,QAAQC,IAAAA,GAAOP,iBAAiB,EAAE;AAE3E,MAAI,OAAOC,cAAcO,cAAgB;AACvC,UAAM,IAAIC,MACR,GAAGN,kBAAkB,sIAEvB;AAGF,SAAO;AAAA,IACL,GAAGL;AAAAA,IACHG;AAAAA,EAAAA;AAEJ;;"}