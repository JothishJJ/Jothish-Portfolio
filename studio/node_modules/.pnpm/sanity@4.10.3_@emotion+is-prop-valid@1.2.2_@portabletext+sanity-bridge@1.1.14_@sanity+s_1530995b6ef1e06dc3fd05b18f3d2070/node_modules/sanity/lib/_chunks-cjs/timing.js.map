{"version":3,"file":"timing.js","sources":["../../src/_internal/cli/util/timing.ts"],"sourcesContent":["import {performance} from 'node:perf_hooks'\n\nexport interface TimeMeasurer {\n  start: (name: string) => void\n  end: (name: string) => number\n  getTimings: () => Record<string, number>\n}\n\nexport function getTimer(): TimeMeasurer {\n  const timings: Record<string, number> = {}\n  const startTimes: Record<string, number> = {}\n\n  function start(name: string): void {\n    if (typeof startTimes[name] !== 'undefined') {\n      throw new Error(`Timer \"${name}\" already started, cannot overwrite`)\n    }\n\n    startTimes[name] = performance.now()\n  }\n\n  function end(name: string): number {\n    if (typeof startTimes[name] === 'undefined') {\n      throw new Error(`Timer \"${name}\" never started, cannot end`)\n    }\n\n    timings[name] = performance.now() - startTimes[name]\n    return timings[name]\n  }\n\n  return {start, end, getTimings: () => timings}\n}\n"],"names":["getTimer","timings","startTimes","start","name","Error","performance","now","end","getTimings"],"mappings":";;AAQO,SAASA,WAAyB;AACvC,QAAMC,UAAkC,IAClCC,aAAqC,CAAA;AAE3C,WAASC,MAAMC,MAAoB;AACjC,QAAI,OAAOF,WAAWE,IAAI,IAAM;AAC9B,YAAM,IAAIC,MAAM,UAAUD,IAAI,qCAAqC;AAGrEF,eAAWE,IAAI,IAAIE,gBAAAA,YAAYC,IAAAA;AAAAA,EACjC;AAEA,WAASC,IAAIJ,MAAsB;AACjC,QAAI,OAAOF,WAAWE,IAAI,IAAM;AAC9B,YAAM,IAAIC,MAAM,UAAUD,IAAI,6BAA6B;AAG7DH,WAAAA,QAAQG,IAAI,IAAIE,4BAAYC,QAAQL,WAAWE,IAAI,GAC5CH,QAAQG,IAAI;AAAA,EACrB;AAEA,SAAO;AAAA,IAACD;AAAAA,IAAOK;AAAAA,IAAKC,YAAYA,MAAMR;AAAAA,EAAAA;AACxC;;"}